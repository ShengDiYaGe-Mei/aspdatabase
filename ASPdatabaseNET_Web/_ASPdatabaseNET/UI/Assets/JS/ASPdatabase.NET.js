/* Generated by SharpKit 5 v5.4.4 */
if (typeof ($Inherit) == 'undefined') {
	var $Inherit = function (ce, ce2) {

		if (typeof (Object.getOwnPropertyNames) == 'undefined') {

			for (var p in ce2.prototype)
				if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p])
					ce.prototype[p] = ce2.prototype[p];
			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		} else {

			var props = Object.getOwnPropertyNames(ce2.prototype);
			for (var i = 0; i < props.length; i++)
				if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined')
					Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));

			for (var p in ce2)
				if (typeof (ce[p]) == 'undefined')
					ce[p] = ce2[p];
			ce.$baseCtor = ce2;

		}

	}
};

if (typeof(Int32Array) == "undefined")
    var Int32Array = Array;

if (typeof(ASPdatabaseNET) == "undefined")
    var ASPdatabaseNET = {};
if (typeof(ASPdatabaseNET.UI) == "undefined")
    ASPdatabaseNET.UI = {};
if (typeof(ASPdatabaseNET.UI.Errors) == "undefined")
    ASPdatabaseNET.UI.Errors = {};
ASPdatabaseNET.UI.Errors.ExceptionHandler = function (){
};
ASPdatabaseNET.UI.Errors.ExceptionHandler.Check = function (response){
    if (response.Error == null)
        return false;
    console.log("Error: " + response.Error.Message);
    console.log("StackTrace: " + response.Error.StackTrace);
    alert("Error: " + response.Error.Message);
    if (response.Error.Message == "User Session Expired")
        window.location = ("ASPdatabase.NET.aspx?Login" + window.location.hash);
    return true;
};
if (typeof(ASPdatabaseNET.UI.GlobalParts) == "undefined")
    ASPdatabaseNET.UI.GlobalParts = {};
ASPdatabaseNET.UI.GlobalParts.LogoBox = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.GlobalParts.LogoBox.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'LogoBox jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.GlobalParts.LogoBox.prototype.Open_Sub = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Return").Global__GetLogoBoxModel();
};
ASPdatabaseNET.UI.GlobalParts.LogoBox.prototype.Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    switch (this.get_Model().CustomLogoType){
        case 0:
            break;
        case 1:
            this.jF(".LogoLink").hide();
            this.jF(".CustomLogoBox").show();
            this.jF(".LogoImg")[0].style.display = "block";
            this.jF(".LogoImg")[0].style.background = ASPdb.FrameworkUI.st.New("url(\'{0}\') no-repeat").Format1(this.get_Model().LogoURL).TheString;
            this.jF(".LogoImg").attr("title", this.get_Model().LogoText);
            break;
        case 2:
            this.jF(".LogoLink").hide();
            this.jF(".CustomLogoBox").show();
            this.jF(".LogoTxt")[0].style.display = "block";
            this.jF(".LogoTxt").html(this.get_Model().LogoText).attr("title", this.get_Model().LogoText);
            break;
    }
};
ASPdatabaseNET.UI.GlobalParts.LogoBox.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.LogoBox.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.GlobalParts.LogoBox.GetCssRoot = function (){
    return "\r\n                .LogoBox { }\r\n                .LogoBox .LogoLink { float: left; display:block; width: auto; line-height: 40px; margin-top: 18px; \r\n                                     margin-left: 15px; padding: 0px 14px; font-size: 1.25em; color:#fff; }\r\n                .LogoBox .LogoLink:hover { background: #0f366b; }\r\n\r\n                .LogoBox .CustomLogoBox { display:none; float:left; }\r\n                .LogoBox .CustomLogoBox a { color: #fff; }\r\n                .LogoBox .CustomLogoBox a:hover { background: #0f366b; }\r\n                .LogoBox .CustomLogoBox .LogoImg { display:none; height: 40px; width: 300px; background: url(\'\') no-repeat;\r\n                                                   margin: 0.5625em 0em 0em 1.4375em; }\r\n                .LogoBox .CustomLogoBox .LogoTxt { display:none; line-height: 40px; max-width: 400px; font-size: 1.4em; margin-left: .55em; padding-left: .55em; padding-top: .1em; overflow:hidden; white-space:nowrap }\r\n                .LogoBox .CustomLogoBox .ByASPdatabaseNET { display:block; width: 17.08em; font-size: .75em; line-height: 2em; margin-left: 1.916em; padding-left: 1em; background: #14498f; }\r\n            ";
};
ASPdatabaseNET.UI.GlobalParts.LogoBox.prototype.GetHtmlRoot = function (){
    return "\r\n                <a href=\'http://www.aspdatabase.net/\' target=\'_blank\' class=\'LogoLink\'>ASPdatabase.NET</a>\r\n\r\n                <div class=\'CustomLogoBox\'>\r\n                    <a class=\'LogoImg\' href=\'ASPdatabase.NET.aspx\'>&nbsp;</a>\r\n                    <a class=\'LogoTxt\' href=\'ASPdatabase.NET.aspx\'>Logo Text</a>\r\n                    <a class=\'ByASPdatabaseNET\' href=\'https://www.aspdatabase.net/\' target=\'_blank\'>powered by ASPdatabase.NET</a>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.GlobalParts.LogoBox, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.GlobalParts.Objs) == "undefined")
    ASPdatabaseNET.UI.GlobalParts.Objs = {};
ASPdatabaseNET.UI.GlobalParts.Objs.LogoBoxModel = function (){
    this.CustomLogoType = 0;
    this.LogoURL = null;
    this.LogoText = null;
};
if (typeof(ASPdatabaseNET.UI.PageParts) == "undefined")
    ASPdatabaseNET.UI.PageParts = {};
if (typeof(ASPdatabaseNET.UI.PageParts.About) == "undefined")
    ASPdatabaseNET.UI.PageParts.About = {};
if (typeof(ASPdatabaseNET.UI.PageParts.About.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.About.Objs = {};
ASPdatabaseNET.UI.PageParts.About.Objs.AboutPageInfo = function (){
    this.SubscriptionAgreement = null;
    this.CompanyName = null;
    this.CopyrightYear = null;
    this.Version = null;
    this.VersionDate = null;
    this.CopyrightLine = null;
};
if (typeof(ASPdatabaseNET.UI.PageParts.Install) == "undefined")
    ASPdatabaseNET.UI.PageParts.Install = {};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI = function (){
    this.AjaxSender = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(new ASPdatabaseNET.UI.PageParts.Install.Objs.InstallViewModel());
    this.get_ViewModel().IsFirstAttempt_AddingConnectionString = true;
    this.get_ViewModel().LegalHasBeenAccepted = false;
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'InstallMainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.Open_Sub = function (){
    window.location.hash = "#";
    this.jF(".Screen").hide();
    this.jF(".Screen_Loading").show();
    this.AjaxSender = ASPdb.Security.AjaxSender.GetObj();
    this.AjaxSender.OnReady.After.AddHandler(this, "AjaxSender_Ready", 0);
    if (!this.AjaxSender.IsReady)
        this.AjaxSender.Initialize();
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.AjaxSender_Ready = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInstallState_Return").Install__GetInstallState();
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.GetInstallState_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        this.jF(".Screen").hide();
        this.jF(".Screen_Error").show().html(ajaxResponse.Error.Message + "<br /><br />To try again, refresh your browser.");
        return;
    }
    this.set_Model(ajaxResponse.ReturnObj);
    this.jF(".SubscriptionAgreement").html(this.get_Model().AboutPageInfo.SubscriptionAgreement);
    if (!this.get_ViewModel().LegalHasBeenAccepted)
        this.get_Model().InstallState = 1;
    this.jF(".Screen").hide();
    switch (this.get_Model().InstallState){
        case 1:
            this.jF(".Screen_GetStarted").show();
            break;
        case 2:
            if (this.get_ViewModel().IsFirstAttempt_AddingConnectionString){
            this.get_ViewModel().IsFirstAttempt_AddingConnectionString = false;
            this.jF(".Screen_NeedConnectionString").show();
        }
            else {
            this.jF(".Screen_ConnectionStringNotFound").show();
            this.jF(".Label_InvalidConnectionString").html(this.get_Model().ResponseMsg);
        }
            break;
        case 3:
            this.jF(".Screen_ConnectionStringNotFound").show();
            this.jF(".Label_InvalidConnectionString").html(this.get_Model().ResponseMsg);
            break;
        case 4:
            if (!this.AjaxSender.IsReady)
            this.AjaxSender.Initialize();
            else
            this.jF(".Screen_GetUserInfo").show();
            break;
        case 5:
            this.jF(".Screen_InstallComplete").show();
            break;
    }
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.Bttn_GetStarted_Click = function (){
    this.jF(".Screen_GetStarted").hide();
    this.jF(".Screen_Legal").show();
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.Bttn_LegalNo_Click = function (){
    alert("You have clicked to not accept to this subscription agreement.\n\nThis page will now disappear.");
    $(".InstallMainUI").html("");
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.Bttn_LegalAccept_Click = function (){
    this.get_ViewModel().LegalHasBeenAccepted = true;
    this.AjaxSender_Ready();
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.NextBttn1_Click = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInstallState_Return").Install__GetInstallState();
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.NextBttn2_Click = function (){
    this.jF(".Screen").hide();
    this.jF(".Screen_Loading").show();
    this.AjaxSender.IsReady = false;
    var thisObj = this;
    eval("setTimeout(function() { thisObj.NextBttn1_Click() }, 500);");
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.NextBttn3_Click = function (){
    if (!this.ValidateInfo())
        return;
    this.jF(".Screen_GetUserInfo").hide();
    this.jF(".Screen_InstallSQL").show();
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.NextBttn4_Click = function (){
    if (!this.ValidateInfo())
        return;
    var u = this.jF(".T_U").val();
    var p = this.jF(".T_P").val();
    var firstName = this.jF(".T_FirstName").val() + "";
    var lastName = this.jF(".T_LastName").val() + "";
    var email = this.jF(".T_Email").val() + "";
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInstallState_Return").YesEncryption().Install__InstallSQL(u, p, firstName, lastName, email);
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.ValidateInfo = function (){
    var u = this.jF(".T_U").val();
    var p = this.jF(".T_P").val();
    var p2 = this.jF(".T_P2").val();
    if (u == null || u.length < 1){
        alert("Please enter a Username");
        this.jF(".T_U").focus();
        return false;
    }
    if (p == null || p.length < 1){
        alert("Password must be at least 8 characters.\nPassword must contain letters and numbers.");
        this.jF(".T_P").focus();
        return false;
    }
    if (p != p2){
        alert("Password do not match");
        this.jF(".T_P").focus();
        return false;
    }
    return true;
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.GetCssRoot = function (){
    return "\r\n                .InstallMainUI { }\r\n                .InstallMainUI .TopBar { height: 75px; line-height: 75px; background: #14498f; color: #fff; }\r\n                .InstallMainUI .TopBar .LogoLink { float: left; display:block; width: auto; line-height: 40px; margin-top: 18px; \r\n                                                 margin-left: 15px; padding: 0px 14px; font-size: 1.25em; color:#fff; }\r\n                .InstallMainUI .TopBar .LogoLink:hover { background: #0f366b; }\r\n\r\n                .InstallMainUI .InstallBoxWrap { margin: auto; width: 38em; max-width: 38em; min-width: 38em; }\r\n\r\n                .InstallMainUI .TopTitleSpace { margin-top: 2em; color:#5d5d5d; }\r\n                .InstallMainUI .BodySpace { background: #5d5d5d; color: #fff; min-height: 15em; }\r\n\r\n                .InstallMainUI .TopTitleSpace .InnerDiv1 { font-size: 1.8em; margin-bottom: .2em; }\r\n                .InstallMainUI .BodySpace .InnerDiv2 { font-size: .8em; padding: 1.3em 0em; line-height: 1.4em; }\r\n                .InstallMainUI .BodySpace .InnerDiv2 .SubHead { font-size: 1.7em; margin-bottom: 1.8em; }\r\n\r\n                .InstallMainUI .Screen { display:none; }\r\n                .InstallMainUI .Screen_Loading { }\r\n                .InstallMainUI .Screen_Legal { }\r\n                .InstallMainUI .Screen_Legal a { color: #fff; background: #777; padding: 0em .3em; margin: .5em 0em; float:left; display:block; }\r\n                .InstallMainUI .Screen_Legal a:hover { background: #bbb; }\r\n                .InstallMainUI .Screen_Legal .SubscriptionAgreement { overflow-y:scroll; max-height: 22em; background: #fff; color: #000; padding: .7em; }\r\n                .InstallMainUI .Screen_NeedConnectionString { }\r\n                .InstallMainUI .Screen_ConnectionStringNotFound { }\r\n                .InstallMainUI .Screen_GetUserInfo { }\r\n                .InstallMainUI .Screen_InstallSQL { }\r\n                .InstallMainUI .Screen_Error { }\r\n                .InstallMainUI .Screen_InstallComplete { }\r\n\r\n                .InstallMainUI .Bttn { float:left; padding: .6em 2em; background: #ddd; color: #000; cursor:pointer; margin-right: 1em; }\r\n                .InstallMainUI .Bttn:hover { background: #5d5d5d; color: #fff; }\r\n\r\n                .InstallMainUI .Screen_GetUserInfo span { color: #999; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopBar\'>\r\n                    <a href=\'http://www.aspdatabase.net/\' target=\'_blank\' class=\'LogoLink\'>ASPdatabase.NET</a>\r\n                </div>\r\n\r\n                <div class=\'TopTitleSpace\'>\r\n                    <div class=\'InstallBoxWrap\'>\r\n                        <div class=\'InnerDiv1\'>Install</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\'BodySpace\'>\r\n                    <div class=\'InstallBoxWrap\'>\r\n                        <div class=\'InnerDiv2\'>\r\n                            <div class=\'SubHead\'>Hello! Welcome to ASPdatabase.NET</div>\r\n\r\n                            <div class=\'Screen Screen_Loading\'>\r\n                                Loading ...\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_GetStarted\'>\r\n                                This installer will:<br />\r\n                                 - Ask you to accept the Agreement<br />\r\n                                 - Confirm you have a database connection string in the app\'s Web.config<br />\r\n                                 - Create application tables<br />\r\n                                 - Create an admin user<br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <div class=\'Bttn\' On_Click=\'Bttn_GetStarted_Click\'>Start &gt;&gt;</div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_Legal\'>\r\n                                Do you accept this Subscription Agreement? <i>(applies to both free & paid accounts)</i> \r\n                                <br />\r\n                                <a href=\'ASPdatabase.NET.aspx?SubscriptionAgreement\' target=\'_blank\'>[Open in new window]</a>\r\n                                <div class=\'clear\'></div>\r\n                                \r\n                                <div class=\'SubscriptionAgreement\'></div>\r\n                                <br />\r\n                                <div class=\'Bttn Bttn_LegalNo\' On_Click=\'Bttn_LegalNo_Click\'>No</div>\r\n                                <div class=\'Bttn Bttn_LegalAccept\' On_Click=\'Bttn_LegalAccept_Click\'>I Accept</div>\r\n                                <div class=\'clear\'></div>\r\n                                <br />\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_NeedConnectionString\'>\r\n                                To get started, please add a SQL Server connection string in the Web.config file.\r\n                                <br /><br />\r\n                                ASPdatabase.NET needs a SQL Server database to store application settings. You can either create a new SQL Server database for this purpose, or use an existing one. All application tables will be created using the schema name \"ASPdb\".\r\n                                <br /><br />\r\n                                If you have questions about this, please contact us.\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <div class=\'Bttn NextBttn1\' On_Click=\'NextBttn1_Click\'>Click Here When Ready &gt;&gt;</div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_ConnectionStringNotFound\'>\r\n                                <div class=\'Label_InvalidConnectionString\'></div>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <div class=\'Bttn NextBttn1\' On_Click=\'NextBttn2_Click\'>Try Again &gt;&gt;</div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_GetUserInfo\'>\r\n                                Username<br />\r\n                                <input type=\'text\' class=\'T_U\' />\r\n                                <br />\r\n                                <br />\r\n                                Password<br />\r\n                                <input type=\'password\' class=\'T_P\' />\r\n                                <br />\r\n                                <br />\r\n                                Repeat Password<br />\r\n                                <input type=\'password\' class=\'T_P2\' />\r\n                                <br />\r\n                                <br />\r\n                                First Name<br />\r\n                                <input type=\'text\' class=\'T_FirstName\' /> <span>(optional)</span>\r\n                                <br />\r\n                                <br />\r\n                                Last Name<br />\r\n                                <input type=\'text\' class=\'T_LastName\' /> <span>(optional)</span>\r\n                                <br />\r\n                                <br />\r\n                                Email<br />\r\n                                <input type=\'text\' class=\'T_Email\' /> <span>(optional)</span>\r\n                                <br />\r\n                                <br />\r\n                                <div class=\'Bttn NextBttn3\' On_Click=\'NextBttn3_Click\'>Next &gt;&gt;</div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_InstallSQL\'>\r\n                                SQL tables will now be created.\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <div class=\'Bttn NextBttn4\' On_Click=\'NextBttn4_Click\'>Next &gt;&gt;</div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_Error\'>\r\n                            </div>\r\n\r\n                            <div class=\'Screen Screen_InstallComplete\'>\r\n                                ASPdatabase.NET is installed.<br />\r\n                                Please refresh your browser.\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Install.InstallMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Install.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.Install.Objs = {};
ASPdatabaseNET.UI.PageParts.Install.Objs.InstallInfo = function (){
    this.InstallState = 0;
    this.AboutPageInfo = null;
    this.ConnectionString = "";
    this.ResponseMsg = null;
};
ASPdatabaseNET.UI.PageParts.Install.Objs.InstallViewModel = function (){
    this.LegalHasBeenAccepted = false;
    this.IsFirstAttempt_AddingConnectionString = false;
};
if (typeof(ASPdatabaseNET.UI.PageParts.MyAccount) == "undefined")
    ASPdatabaseNET.UI.PageParts.MyAccount = {};
if (typeof(ASPdatabaseNET.UI.PageParts.MyAccount.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.MyAccount.Objs = {};
ASPdatabaseNET.UI.PageParts.MyAccount.Objs.MyAccountInfo = function (){
    this.UserId = 0;
    this.Username = null;
    this.FirstName = null;
    this.LastName = null;
    this.Email = null;
};
if (typeof(ASPdatabaseNET.UI.PageParts.Record) == "undefined")
    ASPdatabaseNET.UI.PageParts.Record = {};
ASPdatabaseNET.UI.PageParts.Record.FieldUI = function (){
    this.InputType = 0;
    this.Column = null;
    this.EditModel = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'FieldUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.EditModel = new ASPdatabaseNET.UI.PageParts.Record.Objs.FieldValue();
    this.EditModel.Index = this.get_Model().Index;
    this.EditModel.Value = this.get_Model().Value;
    this.EditModel.IsNull = this.get_Model().IsNull;
    this.Column = this.get_ViewModel().RecordInfo.Columns[this.get_Model().Index];
    this.InputType = 1;
    var isFixedText = false;
    switch (this.Column.DataType_Name.toLowerCase()){
        case "bit":
            this.InputType = 4;
            break;
        case "ntext":
            this.InputType = 3;
            break;
        case "text":
            this.InputType = 3;
            break;
        case "image":
            this.InputType = 3;
            break;
        case "xml":
            this.InputType = 3;
            break;
        case "nvarchar":
            this.InputType = 1;
            break;
        case "nchar":
            this.InputType = 1;
            break;
        case "char":
            this.InputType = 1;
            break;
        case "varbinary":
            this.InputType = 1;
            break;
        case "varchar":
            this.InputType = 1;
            break;
    }
    if (isFixedText)if (this.Column.MaxLength > 99)
        this.InputType = 2;
    this.jF(".NameDiv").html(this.Column.ColumnName);
    this.jF(".ValueDiv").text(this.get_Model().Value);
    var value = this.jF(".ValueDiv").html();
    value = ASPdb.FrameworkUI.JsStr.S(value).Replace1("\n", "<br />");
    this.jF(".ValueDiv").html(value);
    if (this.Column.IsPrimaryKey)
        this.jF(".NameDiv").addClass("PrimaryKeyDiv");
    if (!this.Column.AllowNulls)
        this.jF(".NullHolder").hide();
    else if (this.EditModel.IsNull){
        this.EditModel.IsNull = false;
        this.Null_Click();
    }
    var thisObj = this;
    var jRootObj = this.jRoot;
    eval("jRootObj.find(\'.TextInput\').keyup(function(event) { thisObj.Input_Changed(event, true) });");
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.EditModeChanged = function (){
    if (this.get_ViewModel().EditMode == 0){
        this.jF(".EditSection").hide();
        this.jF(".ValueDiv").show();
        this.jF(".IdentityLabel").hide();
    }
    else {
        this.jF(".ValueDiv").hide();
        this.jF(".EditSection").show();
        this.jF(".EditSection").removeClass("EditSection_Altered");
        var dropdownList = this.CheckFor_DropdownList();
        if (dropdownList != null)
            this.InputType = 5;
        switch (this.InputType){
            case 1:
                this.jF(".Txt_SingleLine").show().val(this.get_Model().Value);
                break;
            case 2:
                this.jF(".Txt_MultiLineSmall").show().val(this.get_Model().Value);
                break;
            case 3:
                this.jF(".Txt_MultiLineLarge").show().val(this.get_Model().Value);
                break;
            case 4:
                this.jF(".Div_TrueFalse").show();
                this.EditModel.Value = this.get_Model().Value.toLowerCase().trim();
                this.TrueFalse_Update();
                break;
            case 5:
                this.jF(".NullHolder").hide();
                if (this.EditModel.IsNull)
                this.EditModel.IsNull = false;
                var selectDropdown = this.jF(".SelectDropdown").show().html("");
                for (var i = 0; i < dropdownList.Items.length; i++)
                if (dropdownList.Items[i] == this.get_Model().Value)
                    selectDropdown.append("<option selected=\'selected\'>" + dropdownList.Items[i] + "</option>");
                else
                    selectDropdown.append("<option>" + dropdownList.Items[i] + "</option>");
                break;
        }
        if (this.Column.IsIdentity){
            this.jF(".Txt_SingleLine").hide();
            this.jF(".IdentityLabel").show().html("[Identity]");
            if (this.get_Model().Value != null && this.get_Model().Value.length > 0)
                this.jF(".IdentityLabel").html("[Identity] : " + this.get_Model().Value);
        }
    }
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.CheckFor_DropdownList = function (){
    var appPropInfo = this.get_ViewModel().AppPropertiesInfo;
    if (appPropInfo == null)
        return null;
    var columnName = ASPdb.FrameworkUI.st.New(this.Column.ColumnName).Trim().ToLower().TheString;
    var appPropertiesItem = null;
    for (var i = 0; i < appPropInfo.Columns.length; i++)
        if (ASPdb.FrameworkUI.st.New(appPropInfo.Columns[i].ColumnName).Trim().ToLower().TheString == columnName)
            appPropertiesItem = appPropInfo.Columns[i];
    if (appPropertiesItem != null && appPropertiesItem.AppColumnType == 2 && appPropInfo.DropdownListItems != null)
        for (var i = 0; i < appPropInfo.DropdownListItems.length; i++)
            if (ASPdb.FrameworkUI.st.New(appPropInfo.DropdownListItems[i].ColumnName).Trim().ToLower().TheString == columnName){
                return appPropInfo.DropdownListItems[i];
            }
    return null;
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.CheckForValueChange = function (){
    var tmpModel = this.GetValueForSave();
    if (tmpModel.IsNull != this.get_Model().IsNull)
        return true;
    if (this.InputType == 4){
        if (tmpModel.Value.toLowerCase() != this.get_Model().Value.toLowerCase())
            return true;
    }
    else {
        if (tmpModel.Value != this.get_Model().Value)
            return true;
    }
    return false;
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.GetValueForSave = function (){
    var rtn = this.EditModel;
    if (!rtn.IsNull){
        switch (this.InputType){
            case 1:
                rtn.Value = this.jF(".Txt_SingleLine").val();
                break;
            case 2:
                rtn.Value = this.jF(".Txt_MultiLineSmall").val();
                break;
            case 3:
                rtn.Value = this.jF(".Txt_MultiLineLarge").val();
                break;
            case 4:
                rtn.Value = this.EditModel.Value;
                break;
            case 5:
                rtn.Value = this.jF(".SelectDropdown").val();
                break;
        }
    }
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.Input_Changed = function (evt, deselectNull){
    if (this.CheckForValueChange())
        this.jF(".EditSection").addClass("EditSection_Altered");
    else
        this.jF(".EditSection").removeClass("EditSection_Altered");
    if (deselectNull)if (this.EditModel.IsNull)
        this.Null_Click();
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.Null_Click = function (){
    this.EditModel.IsNull = !this.EditModel.IsNull;
    if (this.EditModel.IsNull){
        this.jF(".NullHolder").addClass("NullHolder_On");
        this.jF(".Checkbox_Null").attr("checked", true);
    }
    else {
        this.jF(".NullHolder").removeClass("NullHolder_On");
        this.jF(".Checkbox_Null").removeAttr("checked");
    }
    this.Input_Changed(null, false);
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.TrueFalse_Click = function (){
    if (this.EditModel.Value == "true")
        this.EditModel.Value = "false";
    else
        this.EditModel.Value = "true";
    this.TrueFalse_Update();
    this.Input_Changed(null, true);
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.TrueFalse_Update = function (){
    if (this.EditModel.Value == "true"){
        this.jF(".Div_TrueFalse").addClass("Div_TrueFalse_On");
        this.jF(".Checkbox_TrueFalse").attr("checked", true);
        this.jF(".Label_TrueFalse").html("True");
    }
    else if (this.EditModel.Value == "false"){
        this.jF(".Div_TrueFalse").removeClass("Div_TrueFalse_On");
        this.jF(".Checkbox_TrueFalse").removeAttr("checked");
        this.jF(".Label_TrueFalse").html("False");
    }
    else {
        this.jF(".Div_TrueFalse").removeClass("Div_TrueFalse_On");
        this.jF(".Checkbox_TrueFalse").removeAttr("checked");
        this.jF(".Label_TrueFalse").html("&nbsp;");
    }
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Record.FieldUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.GetCssRoot = function (){
    return "\r\n                .FieldUI { line-height: 1.875em; border-bottom: 0.125em solid #fff; background: #f4f4f4; }\r\n                .FieldUI .NameTd { background: #eee; font-size: .8em; line-height: 2.34375em; width: 18em; max-width: 18em; min-width: 18em; overflow:hidden; }\r\n                .FieldUI .ValueTd { font-size: .8em; }\r\n\r\n                .FieldUI .NameTd .NameDiv { padding-left: .75em; }\r\n                .FieldUI .NameTd .PrimaryKeyDiv { border-left: .35em solid #eb640a; padding-left: .45em; }\r\n\r\n                .FieldUI .ValueTd .ValueDiv { line-height: 1.54em; margin: 0.384615em 0em; }\r\n                .FieldUI .ValueTd .IdentityLabel { display:none; }\r\n\r\n                .FieldUI .ValueTd .EditSection { display:none; padding-left: .75em; }\r\n                .FieldUI .ValueTd .EditSection_Altered { border-left: .35em solid #0da218; padding-left: .45em; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder { float:left; width: 42.6em; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Txt_SingleLine { display:none; width: 40em; padding: 0.4em; border: 1px solid #093a79; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Txt_MultiLineSmall { display:none; width: 38.3906em; padding: 0.4em; height: 4em;   border: 1px solid #093a79; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Txt_MultiLineLarge { display:none; width: 38.3906em; padding: 0.4em; height: 20em;  border: 1px solid #093a79; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Div_TrueFalse { display:none; cursor:pointer; border-radius: .35em; color: #888; width: 8em; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Div_TrueFalse:hover { background: #0b346a; color: #fff; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Div_TrueFalse_On { background: #3172c8; color: #fff; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Div_TrueFalse .Checkbox_TrueFalse { float: left; margin: 0.703125em 0.625em 0em 0.78125em; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .Div_TrueFalse .Label_TrueFalse { float:left; }\r\n                .FieldUI .ValueTd .EditSection .InputHolder .SelectDropdown { display:none; }\r\n\r\n                .FieldUI .ValueTd .EditSection .NullHolder { float:left; position:relative; width: 5.5em; cursor:pointer; color: #656565; border: 1px solid #f4f4f4; border-radius: .4em; }\r\n                .FieldUI .ValueTd .EditSection .NullHolder:hover { background: #aabace; color: #fff; }\r\n                .FieldUI .ValueTd .EditSection .NullHolder input { position:absolute; top: 0.625em; left: 0.625em; }\r\n                .FieldUI .ValueTd .EditSection .NullHolder span { padding-left: 2.1875em; }\r\n                .FieldUI .ValueTd .EditSection .NullHolder_On { background: #fffeb4; color: #000; border-color: #aabace; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Record.FieldUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'NameTd\'><div class=\'NameDiv\'></div></td>\r\n                <td class=\'ValueTd\'>\r\n                    <div class=\'ValueDiv\'></div>\r\n                    <div class=\'IdentityLabel\' title=\'Auto-Increment Number\'></div>\r\n                    <div class=\'EditSection\'>\r\n                        <div class=\'InputHolder\'>\r\n                            <input type=\'text\' class=\'Txt_SingleLine TextInput\' />\r\n                            <textarea class=\'Txt_MultiLineSmall TextInput\'></textarea>\r\n                            <textarea class=\'Txt_MultiLineLarge TextInput\'></textarea>\r\n                            <div class=\'Div_TrueFalse\' On_Click=\'TrueFalse_Click\'>\r\n                                <input type=\'checkbox\' class=\'Checkbox_TrueFalse\' />\r\n                                <div class=\'Label_TrueFalse\'></div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n                            <select class=\'SelectDropdown\'></select>\r\n                        </div>\r\n                        <div class=\'NullHolder\' On_Click=\'Null_Click\'>\r\n                            <input type=\'checkbox\' class=\'Checkbox_Null\' />\r\n                            <span>Null</span>\r\n                        </div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                </td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Record.FieldUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Record.HistoryUI) == "undefined")
    ASPdatabaseNET.UI.PageParts.Record.HistoryUI = {};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI = function (){
    this.UniqueRowKey = null;
    this.MenuItems = null;
    this.SubModel = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.Open_Sub = function (){
    if (this.UniqueRowKey == null || this.UniqueRowKey.TableType != 1){
        alert("Invalid Row Key");
        this.Close();
        return;
    }
    this.jF(".Label2").html("Loading...");
    this.jF(".MenuTable").html("");
    this.jF(".EmptyPanel").show();
    this.jF(".Loading2").hide();
    this.jF(".CompareTbl").hide();
    this.jF(".FieldView").hide();
    var tableId = this.UniqueRowKey.Id;
    var keyValue = this.UniqueRowKey.Values;
    ASPdatabaseNET.AjaxService.ASPdatabaseService.Bind(this).History__GetSummary(tableId, keyValue, 100);
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.SetModel(ajaxResponse);
    var keyString1 = "";
    var keyString2 = "";
    var commanFound = false;
    for (var i = 0; i < this.get_Model().KeyValue.length; i++){
        if (i > 0){
            keyString1 += ", ";
            keyString2 += ", ";
        }
        var item = this.get_Model().KeyValue[i];
        keyString1 += item;
        keyString2 += "\"" + item + "\"";
        if (ASPdb.FrameworkUI.st.New(item).Contains(",", false))
            commanFound = true;
    }
    if (commanFound)
        keyString1 = keyString2;
    var label2 = ASPdb.FrameworkUI.st.New("[{0}].[{1}].[{2}] : {3}").Format4(this.get_Model().ConnectionName, this.get_Model().Schema, this.get_Model().TableName, keyString1).TheString;
    this.jF(".Label2").html(label2);
    var menuTable = this.jF(".MenuTable").html("");
    this.MenuItems = new Array(0);
    for (var i = 0; i < this.get_Model().HistoryRecords.length; i++){
        this.MenuItems[i] = new ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem();
        this.MenuItems[i].set_Model(this.get_Model().HistoryRecords[i]);
        this.MenuItems[i].Instantiate();
        this.MenuItems[i].OnChange.After.AddHandler(this, "HistoryMenuItem_Change", 1);
        menuTable.append(this.MenuItems[i].jRoot);
    }
    if (this.get_Model().HistoryRecords.length < 1)
        this.jF(".EmptyPanel").html("This record does not have any saved history.");
    else
        this.jF(".EmptyPanel").html("(Select a Time Point)");
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.Div_BG_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.CloseBttn_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.HistoryMenuItem_Change = function (menuItem){
    for (var i = 0; i < this.MenuItems.length; i++)
        this.MenuItems[i].Deselect();
    this.jF(".EmptyPanel").hide();
    this.jF(".Loading2").show();
    this.jF(".CompareTbl").hide();
    this.jF(".FieldView").hide();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.Bind2(this, "AjaxReturn2").History__GetRecord(menuItem.get_Model().TableId, menuItem.get_Model().HistoryId);
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.AjaxReturn2 = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.jF(".EmptyPanel").hide();
    this.jF(".Loading2").hide();
    this.jF(".CompareTbl").show();
    this.jF(".FieldView").hide();
    this.SubModel = ajaxResponse.ReturnObj;
    var compareTbl = this.jF(".CompareTbl");
    compareTbl.find(".TrRow").detach();
    for (var i = 0; i < this.SubModel.Fields_3ValArr.length; i++){
        var item = this.SubModel.Fields_3ValArr[i];
        var v1 = item.v1;
        var v2 = item.v2;
        var v3 = item.v3;
        if (v1 == null)
            v1 = "&nbsp;";
        if (v2 == null)
            v2 = "&nbsp;";
        if (v3 == null)
            v3 = "&nbsp;";
        var matchTDsClass = "";
        if (!item.match)
            matchTDsClass = "Hightlight";
        var altClass = "TrRow1";
        if (i % 2 == 1)
            altClass = "TrRow2";
        compareTbl.append(ASPdb.FrameworkUI.st.New("\r\n                    <tr class=\'TrRow {0}\' Index=\'{1}\'>\r\n                        <td><div>{2}</div></td>\r\n                        <td class=\'{6}\'><div>{3}</div></td>\r\n                        <td class=\'{6}\'><div>{4}</div></td>\r\n                        <td><div>{5}</div></td>\r\n                    </tr>").Format7(altClass, i, item.ColumnName_OrigCasing, v1, v2, v3, matchTDsClass).TheString);
    }
    var thisObj = this;
    eval(" compareTbl.find(\'.TrRow\').click(function(){ thisObj.FieldItem_Click( $(this).attr(\'Index\') ); }); ");
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.FieldItem_Click = function (index){
    var item = this.SubModel.Fields_3ValArr[index];
    this.jF(".CompareTbl").hide();
    this.jF(".FieldView").show();
    this.jF(".Label_cn").html(item.ColumnName_OrigCasing);
    this.jF(".Label_v1").html(item.v1);
    this.jF(".Label_v2").html(item.v2);
    this.jF(".Label_v3").html(item.v3);
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.Label3_Click = function (){
    this.jF(".CompareTbl").show();
    this.jF(".FieldView").hide();
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.GetCssTree = function (){
    return ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.GetCssTree() + ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.GetCssRoot();
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.GetCssRoot = function (){
    return "\r\n            .HistoryMainUI { }\r\n            .HistoryMainUI .Div_BG { background: #464f5b; opacity: 0.65; position:fixed; width: 100%; height: 8000px; top: 0px; left: 0px; }\r\n            .HistoryMainUI .InFrontBox { position:absolute; background: #fff; min-height: 35em; box-shadow: 0.125em 0.125em .2em #777; left: 0px; width: 100%; }\r\n            .HistoryMainUI .InFrontBox .TopDiv { background: #e4e4e4; color: #444; line-height: 4em; margin-bottom: 0em; }\r\n            .HistoryMainUI .InFrontBox .TopDiv .Label1 { float:left; padding: 0em 2em; border-right: 1px solid #fff; }\r\n            .HistoryMainUI .InFrontBox .TopDiv .Label2 { float:left; padding: 0em 0em 0em 2em; }\r\n            .HistoryMainUI .InFrontBox .TopDiv .CloseBttn { float:right; cursor:pointer; padding: 0em 2em; border-left: 1px solid #fff; }\r\n            .HistoryMainUI .InFrontBox .TopDiv .CloseBttn:hover { background: #555; color: #fff; }\r\n\r\n            .HistoryMainUI .InFrontBox .LabelSub { font-size: .7em; color: #777; padding-left: 2.9em; line-height: 2.3em; border-bottom: 1px solid #e4e4e4; margin-bottom: .7em; }\r\n\r\n            .HistoryMainUI .InFrontBox .MainTbl1 { width: 100% }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 td { }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd1 { width: 25em; padding: 0em .5em; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd1 .MenuTable { width: 100%; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 { padding-right: .5em; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .EmptyPanel { color: #6993ae; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .Loading2 {  }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl { width: 100%; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl th { background: #888; color: #fff; font-weight: normal; border-right: 1px solid #fff; line-height: 2.4em; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl td { font-size: .75em; border-right: 1px solid #fff; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .CompTd1 { width: 25%; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .CompTd2 { width: 25%; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .CompTd3 { width: 25%; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .CompTd4 { width: 25%; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .TrRow:hover td { background: #0a598c; color: #fff; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .TrRow1 td { background: #f9f9f9; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .TrRow2 td { background: #eaeaea; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl td div { white-space:nowrap; max-width: 18em; max-height: 1.5em; line-height: 1.5em; overflow:hidden; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .TrRow1 .Hightlight { background: #fffbd7; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .CompareTbl .TrRow2 .Hightlight { background: #fff59c; }\r\n\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .FieldView { }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .FieldView .Label3 { background: #e4e4e4; cursor:pointer; padding-left: 1.5em; line-height: 2.4em; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .FieldView .Label3:hover { background: #0a598c; color: #fff; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .FieldView .IndentDiv { padding: .2em 0em 0em 3em; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .FieldView .Label4 { background: #888; color: #fff; padding-left: .8em; line-height: 1.8em; }\r\n            .HistoryMainUI .InFrontBox .MainTbl1 .MainTd2 .FieldView .Label5 { padding: .2em 0em 1em .8em; min-height: 1.2em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.prototype.GetTemplate = function (){
    return "\r\n<css>\r\n\r\n<html>\r\n-d #HistoryMainUI\r\n--d #Div_BG .NoSelect evt.Click html=\'&nbsp;\'\r\n--d #InFrontBox\r\n---d #TopDiv\r\n----d #Label1 html=\'History Tracking\'\r\n----d #Label2 html=\'&nbsp;\'\r\n----d #CloseBttn evt.Click html=\'Close\'\r\n----d .clear\r\n\r\n---d #LabelSub html=\'History Tracking is only able to track changes made within ASPdatabase.NET. Changes made outside of this system are not tracked.\'\r\n---t #MainTbl1\r\n----tr\r\n-----td #MainTd1\r\n------d .AutoResize\r\n-------t #MenuTable\r\n-----td #MainTd2\r\n------d #EmptyPanel html=\'(Select a Time Point)\'\r\n------d #Loading2 html=\'Loading...\'\r\n------d .AutoResize\r\n-------t #CompareTbl\r\n--------tr .HeadTr\r\n---------th .CompTd1 html=\'Field Name\'\r\n---------th .CompTd2 html=\'Before Change\'\r\n---------th .CompTd3 html=\'After Change\'\r\n---------th .CompTd4 html=\'Current Value\'\r\n-------d #FieldView\r\n--------d #Label3 evt.Click html=\'&lt;&lt; Fields Chart\'\r\n--------d #IndentDiv\r\n---------d .Label4 html=\'Field Name\'\r\n---------d #Label_cn .Label5\r\n---------d .Label4 html=\'Before Change\'\r\n---------d #Label_v1 .Label5\r\n---------d .Label4 html=\'After Change\'\r\n---------d #Label_v2 .Label5\r\n---------d .Label4 html=\'Current Value\'\r\n---------d #Label_v3 .Label5\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $(this.GetHtmlRoot());
    this.jF(".Td_Revision").html(this.get_Model().Revision + "");
    this.jF(".Td_TimeLapsed").html(this.get_Model().TimeLapsedString);
    this.jF(".Td_TimeSaved").html(this.get_Model().TimeSaved_String);
    this.jF(".Td_ByUsername").html(this.get_Model().ByUsername);
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.prototype.Click = function (){
    this.OnChange.After.Fire1(this);
    this.jRoot.addClass("HistoryMenuItem_On");
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.prototype.Deselect = function (){
    this.jRoot.removeClass("HistoryMenuItem_On");
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.GetCssRoot = function (){
    return "\r\n            .HistoryMenuItem { font-size: .7em; line-height: 1.9em; cursor:pointer; }\r\n            .HistoryMenuItem:hover { background: #ccc; }\r\n            .HistoryMenuItem_On { background: #0a598c; color: #fff; }\r\n            .HistoryMenuItem_On:hover { background: #444; color: #fff; }\r\n            .HistoryMenuItem td { padding: 0em .3em 0em .5em; }\r\n            .HistoryMenuItem .Td_Revision { }\r\n            .HistoryMenuItem .Td_TimeSaved { width: 40%; }\r\n            .HistoryMenuItem .Td_TimeLapsed { width: 27%; }\r\n            .HistoryMenuItem .Td_ByUsername { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem.prototype.GetTemplate = function (){
    return "\r\n<css>\r\n\r\n<html>\r\n-tr #HistoryMenuItem\r\n--td #Td_Revision   On_Click=\'Click\'\r\n--td #Td_TimeSaved  On_Click=\'Click\'\r\n--td #Td_TimeLapsed On_Click=\'Click\'\r\n--td #Td_ByUsername On_Click=\'Click\'\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMenuItem, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Record.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.Record.Objs = {};
ASPdatabaseNET.UI.PageParts.Record.Objs.FieldValue = function (){
    this.Index = 0;
    this.Value = null;
    this.IsNull = false;
};
if (typeof(ASPdatabaseNET.UI.PageParts.Record.Objs_History) == "undefined")
    ASPdatabaseNET.UI.PageParts.Record.Objs_History = {};
ASPdatabaseNET.UI.PageParts.Record.Objs_History.HistorySummary = function (){
    this.ConnectionId = 0;
    this.TableId = 0;
    this.ConnectionName = null;
    this.Schema = null;
    this.TableName = null;
    this.KeyValue = null;
    this.HistoryCount = 0;
    this.HistoryRecords = null;
};
ASPdatabaseNET.UI.PageParts.Record.Objs_History.HistoryJsonObj = function (){
    this.KeyValue = null;
    this.Fields = null;
};
ASPdatabaseNET.UI.PageParts.Record.Objs_History.Item = function (){
    this.cn = null;
    this.match = false;
    this.v1 = null;
    this.v2 = null;
};
ASPdatabaseNET.UI.PageParts.Record.Objs_History.HistoryRecord = function (){
    this.HistoryId = 0;
    this.TableId = 0;
    this.KeyValue = null;
    this.Revision = 0;
    this.HistoryType = 0;
    this.IsPartial = false;
    this.TimeSaved = System.DateTime.MinValue;
    this.TimeSaved_String = null;
    this.ByUserId = 0;
    this.ByUsername = null;
    this.HistoryJsonObj = null;
    this.Fields_3ValArr = null;
    this.TimeLapsedString = null;
};
ASPdatabaseNET.UI.PageParts.Record.Objs.RecordInfo = function (){
    this.TableType = 0;
    this.ActionType = 0;
    this.ConnectionId = 0;
    this.Id = 0;
    this.UniqueRowObj = null;
    this.Schema = null;
    this.TableName = null;
    this.PrimaryKeyNames = null;
    this.PriamryKeyIndexPositions = null;
    this.Columns = null;
    this.FieldValues = null;
    this.PermissionValues = null;
    this.ChangeHistory_IsOn = false;
};
ASPdatabaseNET.UI.PageParts.Record.Objs.RecordViewModel = function (){
    this.EditMode = 0;
    this.UniqueRowKey = null;
    this.RecordInfo = null;
    this.AppPropertiesInfo = null;
};
ASPdatabaseNET.UI.PageParts.Record.Objs_History.Item_3Values = function (){
    this.ColumnName_OrigCasing = null;
    this.cn = null;
    this.match = false;
    this.v1 = null;
    this.v2 = null;
    this.v3 = null;
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI = function (){
    this.HistoryMainUI = null;
    this.FieldUIs = null;
    this.TableGrid_ControlHasData = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(new ASPdatabaseNET.UI.PageParts.Record.Objs.RecordViewModel());
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'RecordMainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Open_Sub = function (){
    this.jRoot.hide();
    this.get_ViewModel().UniqueRowKey = ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().PageParam2;
    if (this.get_ViewModel().UniqueRowKey.length < 1)
        window.location = "#00-Home";
    this.get_ViewModel().EditMode = 0;
    this.jF(".Navigator").hide();
    this.jF(".Box3_StandardBttns").show();
    this.jF(".Box3_SaveBttns").hide();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Get_Return").Record__Get(this.get_ViewModel().UniqueRowKey);
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Get_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse)){
        if (ajaxResponse.Error.Message == "\nData needs to be refreshed. \nTherefore the app will now return to the Records List.")
            this.RecordsList_Click(true);
        else
            return;
    }
    this.set_Model(ajaxResponse.ReturnObj);
    this.get_ViewModel().RecordInfo = this.get_Model();
    document.title = "[" + this.get_Model().TableName + "] - ASPdatabase.NET";
    var tableName = this.get_Model().Schema + "." + this.get_Model().TableName;
    this.jF(".Txt_TableName").html(tableName);
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
    var tableGridMain = ASPdatabaseNET.UI.Pages.EverythingPage.Get_The_EverythingPage().TableGridMain;
    this.TableGrid_ControlHasData = (tableGridMain != null && tableGridMain.IsInstantiated);
    this.UpdateNavigator(tableGridMain);
    this.FieldUIs = new Array(0);
    var holder_FieldUIs = this.jF(".Holder_FieldUIs").html("");
    var model = this.get_Model();
    var fieldValues = this.get_Model().FieldValues;
    for (var i = 0; i < this.get_Model().FieldValues.length; i++){
        this.FieldUIs[i] = new ASPdatabaseNET.UI.PageParts.Record.FieldUI();
        this.FieldUIs[i].set_ViewModel(this.get_ViewModel());
        this.FieldUIs[i].set_Model(this.get_Model().FieldValues[i]);
        this.FieldUIs[i].Instantiate();
        holder_FieldUIs.append(this.FieldUIs[i].jRoot);
    }
    this.jRoot.show();
    this.jF(".ReadOnlyBar").hide();
    this.jF(".HideIfNoPK").show();
    if (this.get_Model().PrimaryKeyNames == null || this.get_Model().PrimaryKeyNames.length < 1){
        this.jF(".ReadOnlyBar").show();
        this.jF(".HideIfNoPK").hide();
        this.get_Model().ActionType = 0;
        this.get_ViewModel().EditMode = 4;
        return;
    }
    this.jF(".Bttn_Edit").hide();
    this.jF(".Bttn_Clone").hide();
    this.jF(".Bttn_Delete").hide();
    if (this.get_Model().PermissionValues.Edit)
        this.jF(".Bttn_Edit").show();
    if (this.get_Model().PermissionValues.Insert)
        this.jF(".Bttn_Clone").show();
    if (this.get_Model().PermissionValues.Delete)
        this.jF(".Bttn_Delete").show();
    if (this.get_Model().ActionType != 0)
        this.Edit_Click();
    if (this.get_Model().ChangeHistory_IsOn)
        this.jF(".Bttn_History").show();
    else
        this.jF(".Bttn_History").hide();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.UpdateNavigator = function (tableGridMain){
    this.jF(".Navigator").hide();
    if (this.TableGrid_ControlHasData){
        this.jF(".Navigator").show();
        var previousLink = "";
        var index = "?";
        var nextLink = "";
        var rowUIs = tableGridMain.RowUIs;
        for (var i = 0; i < rowUIs.length; i++){
            if (rowUIs[i].get_Model().UniqueKey == this.get_ViewModel().UniqueRowKey){
                index = "" + (i + 1);
                try{
                    previousLink = "#00-Record-" + rowUIs[i - 1].get_Model().UniqueKey;
                }
                catch($$e1){
                }
                try{
                    nextLink = "#00-Record-" + rowUIs[i + 1].get_Model().UniqueKey;
                }
                catch($$e2){
                }
                i = rowUIs.length + 1;
            }
        }
        this.jF(".Arrow").hide();
        this.jF(".Arrow_Off").show();
        if (previousLink != ""){
            this.jF(".Arrow_Left").show().attr("href", previousLink);
            this.jF(".Arrow_Left_Off").hide();
        }
        this.jF(".NavigatorText").html(index);
        if (nextLink != ""){
            this.jF(".Arrow_Right").show().attr("href", nextLink);
            this.jF(".Arrow_Right_Off").hide();
        }
    }
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.RecordsList_Click = function (refreshGrid){
    var basePage = ASPdatabaseNET.UI.PagesFramework.BasePage.GetFromDocument();
    var everythingPage = ASPdatabaseNET.UI.Pages.EverythingPage.Get_The_EverythingPage();
    var tableGridMain = everythingPage.TableGridMain;
    if (tableGridMain.IsInstantiated){
        this.Close();
        tableGridMain.Open();
        if (refreshGrid)
            tableGridMain.Refresh();
        everythingPage.CurrentSubUI = tableGridMain;
        basePage.IgnoreNext_HashChange = true;
    }
    window.location = ("#00-Table-" + this.get_Model().Id);
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Edit_Click = function (){
    if (this.get_ViewModel().AppPropertiesInfo == null)
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "AppProperties__Get_Return").TableDesign__AppProperties__Get(this.get_Model().Id, true);
    else
        this.Edit_Click_2();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.AppProperties__Get_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().AppPropertiesInfo = ajaxResponse.ReturnObj;
    this.Edit_Click_2();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Edit_Click_2 = function (){
    this.jF(".Box3_StandardBttns").hide();
    this.jF(".Box3_SaveBttns").show();
    this.jF(".Navigator").hide();
    this.get_ViewModel().EditMode = 2;
    for (var i = 0; i < this.FieldUIs.length; i++)
        this.FieldUIs[i].EditModeChanged();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Clone_Click = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Get_Return").Record__GetClone(this.get_ViewModel().UniqueRowKey);
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Delete_Click = function (){
    var msg = "Are you sure you want to permanently delete this record?";
    msg += "\n\nIf so, please type \"delete\" to confirm.";
    var promptResponse = prompt(msg);
    if (promptResponse != null && promptResponse.toLowerCase() == "delete"){
        var keysToDelete = new Array(1);
        keysToDelete[0] = this.get_ViewModel().UniqueRowKey;
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "DeleteRecords_Return").TableGrid__DeleteRecords(keysToDelete);
    }
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.DeleteRecords_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.RecordsList_Click(true);
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.History_Click = function (){
    if (this.HistoryMainUI == null){
        this.HistoryMainUI = new ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI();
        this.HistoryMainUI.Instantiate();
        this.jF(".Holder_HistoryMainUI").append(this.HistoryMainUI.jRoot);
    }
    this.HistoryMainUI.UniqueRowKey = this.get_Model().UniqueRowObj;
    this.HistoryMainUI.Open();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Refresh_Click = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Get_Return").Record__Get(this.get_ViewModel().UniqueRowKey);
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Save_Click = function (){
    var recordInfoForSave = new ASPdatabaseNET.UI.PageParts.Record.Objs.RecordInfo();
    recordInfoForSave.TableType = this.get_Model().TableType;
    recordInfoForSave.ActionType = this.get_Model().ActionType;
    recordInfoForSave.ConnectionId = this.get_Model().ConnectionId;
    recordInfoForSave.Id = this.get_Model().Id;
    recordInfoForSave.UniqueRowObj = this.get_Model().UniqueRowObj;
    recordInfoForSave.Columns = this.get_Model().Columns;
    recordInfoForSave.FieldValues = new Array(0);
    var j = 0;
    for (var i = 0; i < this.FieldUIs.length; i++)
        if (!this.FieldUIs[i].Column.IsIdentity){
            if (this.get_Model().ActionType == 0){
                if (this.FieldUIs[i].CheckForValueChange())
                    recordInfoForSave.FieldValues[j++] = this.FieldUIs[i].GetValueForSave();
            }
            else {
                recordInfoForSave.FieldValues[j++] = this.FieldUIs[i].GetValueForSave();
            }
        }
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").Record__Save(recordInfoForSave);
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.Save_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().UniqueRowKey = ajaxResponse.ReturnObj;
    var everythingPage = ASPdatabaseNET.UI.Pages.EverythingPage.Get_The_EverythingPage();
    var tableGridMain = everythingPage.TableGridMain;
    if (tableGridMain.IsInstantiated)
        tableGridMain.Refresh();
    this.jF(".SavedBar").slideDown(200).delay(400).slideUp(200);
    this.jF(".BttnBar").slideUp(200).delay(400).slideDown(200);
    if (this.get_Model().ActionType == 0){
        this.Close();
        this.Open();
    }
    else {
        this.RecordsList_Click(false);
    }
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.CancelEdit_Click = function (){
    this.get_ViewModel().EditMode = 0;
    if (this.get_Model().ActionType != 0)
        this.RecordsList_Click(false);
    for (var i = 0; i < this.FieldUIs.length; i++)
        this.FieldUIs[i].EditModeChanged();
    this.jF(".Box3_StandardBttns").show();
    this.jF(".Box3_SaveBttns").hide();
    if (this.TableGrid_ControlHasData)
        this.jF(".Navigator").show();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.GetCssTree = function (){
    return "" + ASPdatabaseNET.UI.PageParts.Record.FieldUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Record.HistoryUI.HistoryMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.GetCssRoot();
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.GetCssRoot = function (){
    return "\r\n                .RecordMainUI { padding: 0.75em 0em 0em 0.75em; width: 55em; max-width: 55em; }\r\n                .RecordMainUI .Txt_TableName { font-size: 1.2em; padding-bottom: 0.625em; color: #eb640a; }\r\n                .RecordMainUI .BttnBar { background: #093a79; color: #fff; line-height: 2.1875em; border-bottom: 0.375em solid #fff; }\r\n                .RecordMainUI .BttnBar .Box1 { float:left; width: 13.6875em; }\r\n                .RecordMainUI .BttnBar .Box2 { float:left; width: 13em; }\r\n                .RecordMainUI .BttnBar .Box3 { float:right; width: 25em; }\r\n                .RecordMainUI .BttnBar .Bttn { float:right; cursor:pointer; background: #093a79; color: #fff; padding: 0em .75em; }\r\n                .RecordMainUI .BttnBar .Bttn:hover { background: #001d44; }\r\n                .RecordMainUI .BttnBar .Bttn_RecordsList { float:left; }\r\n\r\n                .RecordMainUI .BttnBar .Navigator { }\r\n                .RecordMainUI .BttnBar .Navigator .Arrow_Off { float:left; text-align:center; width: 2.1875em; background: #7490b4; }\r\n                .RecordMainUI .BttnBar .Navigator .Arrow { display:none; float:left; text-align:center; width: 2.1875em; background: #7490b4; color: #ececec; cursor:pointer; }\r\n                .RecordMainUI .BttnBar .Navigator .Arrow:hover { background: #3f679b; }\r\n                .RecordMainUI .BttnBar .Navigator .NavigatorText { float:left; text-align:center; background: #ececec; color: #093a79; font-size: 1.25em; padding: 0em 1em; width: 1em; }\r\n\r\n                .RecordMainUI .BttnBar .Box3_StandardBttns { }\r\n                .RecordMainUI .BttnBar .Box3_SaveBttns { display:none; }\r\n\r\n                .RecordMainUI .BttnBar .Bttn_Save { background: #0da218; }\r\n                .RecordMainUI .BttnBar .Bttn_CancelEdit { }\r\n\r\n                .RecordMainUI .SavedBar { display:none; background: #0da218; text-align:center; color: #fff; line-height: 2.1875em; border-bottom: 0.375em solid #fff; } \r\n                .RecordMainUI .ReadOnlyBar { display:none; background: #8b79c3; text-align:left; color: #fff; line-height: 2.1875em; border-bottom: 0.375em solid #fff; padding-left: 1em; }\r\n                .RecordMainUI .ReadOnlyBar span { font-size: .7em; padding-left: .8em; }\r\n\r\n                .RecordMainUI .Holder_FieldUIs { width: 100%; font-size: .95em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Holder_HistoryMainUI\'></div>\r\n                <div class=\'Txt_TableName\'></div>\r\n                <div class=\'BttnBar\'>\r\n                    <div class=\'Box1\'>\r\n                        <div class=\'Bttn Bttn_RecordsList\' On_Click=\'RecordsList_Click\'>&lt;&lt; Records List</div>\r\n                    </div>\r\n                    <div class=\'Box2 HideIfNoPK\'>\r\n                        <div class=\'Navigator NoSelect\'>\r\n                            <a   class=\'Arrow Arrow_Left\' href=\'#\'>&lt;</a>\r\n                            <div class=\'Arrow_Off Arrow_Left_Off\'>&nbsp;</div>\r\n                            <div class=\'NavigatorText\'>&nbsp;</div>\r\n                            <a   class=\'Arrow Arrow_Right\' href=\'#\'>&gt;</a>\r\n                            <div class=\'Arrow_Off Arrow_Right_Off\' title=\'End of current set\'>?</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\'Box3 Box3_StandardBttns HideIfNoPK\'>\r\n                        <div class=\'Bttn Bttn_Refresh\' On_Click=\'Refresh_Click\'>Refresh</div>\r\n                        <div class=\'Bttn Bttn_History hide\' On_Click=\'History_Click\'>History</div>\r\n                        <div class=\'Bttn Bttn_Delete\' On_Click=\'Delete_Click\'>Delete</div>\r\n                        <div class=\'Bttn Bttn_Clone\' On_Click=\'Clone_Click\'>Clone</div>\r\n                        <div class=\'Bttn Bttn_Edit\' On_Click=\'Edit_Click\'>Edit</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'Box3 Box3_SaveBttns\'>\r\n                        <div class=\'Bttn Bttn_CancelEdit\' On_Click=\'CancelEdit_Click\'>Cancel</div>\r\n                        <div class=\'Bttn Bttn_Save\' On_Click=\'Save_Click\'>Save</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'SavedBar\'>\r\n                    Saved\r\n                </div>\r\n                <div class=\'ReadOnlyBar\'>\r\n                    This table does not have a primary key set.<br />\r\n                    Therefore this record cannot be identified for editing.\r\n                </div>\r\n\r\n                <div class=\'AutoResize\'>\r\n                    <table class=\'Holder_FieldUIs\'>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Record.RecordMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Subscription) == "undefined")
    ASPdatabaseNET.UI.PageParts.Subscription = {};
if (typeof(ASPdatabaseNET.UI.PageParts.Subscription.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.Subscription.Objs = {};
ASPdatabaseNET.UI.PageParts.Subscription.Objs.SubscriptionInfo = function (){
    this.SubscriptionKey = "";
    this.SubscriptionCount = 0;
    this.LastCheck_MinutesLapsed = "";
};
if (typeof(ASPdatabaseNET.UI.PageParts.TableDesign) == "undefined")
    ASPdatabaseNET.UI.PageParts.TableDesign = {};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel = function (viewModel){
    this.UIItems = null;
    this.EditAppItem = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(viewModel);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'AppPropertiesPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.EditAppItem = new ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem();
    this.EditAppItem.Instantiate();
    this.EditAppItem.set_ViewModel(this.get_ViewModel());
    this.EditAppItem.OnChange.After.AddHandler(this, "EditAppItem_Change", 0);
    this.EditAppItem.Close();
    this.jRoot.append(this.EditAppItem.jRoot);
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.Open_Sub = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Get_Return").TableDesign__AppProperties__Get(this.get_ViewModel().TableId, false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.Get_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.UIItems = new Array(0);
    var holder_UIItems = this.jF(".Holder_UIItems").html("");
    for (var i = 0; i < this.get_Model().Columns.length; i++){
        this.UIItems[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI();
        this.UIItems[i].set_ViewModel(this.get_ViewModel());
        this.UIItems[i].set_Model(this.get_Model().Columns[i]);
        this.UIItems[i].Instantiate();
        this.UIItems[i].OnChange.After.AddHandler(this, "UIItem_Click", 1);
        holder_UIItems.append(this.UIItems[i].jRoot);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.UIItem_Click = function (itemModel){
    this.EditAppItem.set_Model(itemModel);
    this.EditAppItem.ParentModel = this.get_Model();
    this.EditAppItem.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.EditAppItem_Change = function (){
    this.jF(".Holder_UIItems").html();
    var subModel = this.EditAppItem.get_Model();
    if (this.get_Model().DropdownListItems == null)
        this.get_Model().DropdownListItems = new Array(0);
    var tmpDropdownList = null;
    for (var i = 0; i < this.get_Model().DropdownListItems.length; i++)
        if (ASPdb.FrameworkUI.st.New(this.get_Model().DropdownListItems[i].ColumnName).ToLower().Trim().TheString == ASPdb.FrameworkUI.st.New(subModel.ColumnName).ToLower().Trim().TheString)
            tmpDropdownList = this.get_Model().DropdownListItems[i];
    if (tmpDropdownList == null){
        tmpDropdownList = new ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Objs.DropdownList();
        this.get_Model().DropdownListItems[this.get_Model().DropdownListItems.length] = tmpDropdownList;
    }
    tmpDropdownList.ColumnName = subModel.ColumnName;
    tmpDropdownList.Items = this.EditAppItem.GetDropdownValues();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__AppProperties__Save(this.get_ViewModel().TableId, this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.Save_Return = function (ajaxResponse){
    this.EditAppItem.Close();
    ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse);
    this.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.GetCssRoot = function (){
    return "\r\n                .AppPropertiesPanel { width: 100%; position:relative; padding-top: 37px; }\r\n                .AppPropertiesPanel .TopColorBar { position:absolute; top: -1px; width: inherit; min-width: 200px; height: 8px; background: #173a67; margin-bottom: 35px; }\r\n\r\n                .AppPropertiesPanel .ScrollArea { overflow-y:auto; padding-right: 5px; }\r\n\r\n                .AppPropertiesPanel .Holder_UIItems { border-top: 1px solid #888; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopColorBar\'></div>\r\n\r\n                <div class=\'ScrollArea AutoResize\'>\r\n                    <table class=\'Holder_UIItems\'></table>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties) == "undefined")
    ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties = {};
if (typeof(ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Objs = {};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Objs.AppPropertiesItem = function (){
    this.Index = 0;
    this.ColumnName = null;
    this.DataType_Name = null;
    this.IsPrimaryKey = false;
    this.IsIdentity = false;
    this.AppColumnType = 1;
    this.AppColumnType_Str = null;
    this.AdditionalInfo = null;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Objs.DropdownList = function (){
    this.ColumnName = null;
    this.Items = null;
};
if (typeof(ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts) == "undefined")
    ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts = {};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'AppPropertyItemUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.prototype.Click = function (){
    this.OnChange.After.Fire1(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.GetCssRoot = function (){
    return "\r\n                .AppPropertyItemUI { border-bottom: 1px solid #888; cursor:pointer; }\r\n                .AppPropertyItemUI:hover { background: #ccc; }\r\n                .AppPropertyItemUI td { padding: 0em 1.5em; line-height: 1.8em; }\r\n                .AppPropertyItemUI td .Smaller { font-size: .75em; color: #999; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <td On_Click=\'Click\'><div ModelKey=\'Index\'             class=\'\'       ></div></td>\r\n                <td On_Click=\'Click\'><div ModelKey=\'ColumnName\'        class=\'\'       ></div></td>\r\n                <td On_Click=\'Click\'><div ModelKey=\'DataType_Name\'     class=\'Smaller\'></div></td>\r\n                <td On_Click=\'Click\'><div ModelKey=\'AppColumnType_Str\' class=\'Smaller\'></div></td>\r\n                <td On_Click=\'Click\'><div ModelKey=\'AdditionalInfo\'    class=\'Smaller\'></div></td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.AppPropertyItemUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem = function (){
    this.Temp_AppColumnType = 1;
    this.ParentModel = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'EditAppItem jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.Open_Sub = function (){
    this.BindUI();
    this.jF(".ModBox").show();
    this.Temp_AppColumnType = this.get_Model().AppColumnType;
    if (this.get_Model().IsPrimaryKey)
        this.jF(".Radio1b").hide();
    else
        this.jF(".Radio1b").show();
    var tmpDropdownList = null;
    if (this.ParentModel.DropdownListItems != null)
        for (var i = 0; i < this.ParentModel.DropdownListItems.length; i++)
            if (ASPdb.FrameworkUI.st.New(this.ParentModel.DropdownListItems[i].ColumnName).ToLower().Trim().TheString == ASPdb.FrameworkUI.st.New(this.get_Model().ColumnName).ToLower().Trim().TheString)
                tmpDropdownList = this.ParentModel.DropdownListItems[i];
    var s = "";
    if (tmpDropdownList != null)
        for (var i = 0; i < tmpDropdownList.Items.length; i++)
            if (i > 0)
                s += "\n" + tmpDropdownList.Items[i];
            else
                s += tmpDropdownList.Items[i];
    this.jF(".TextArea1").val(s);
    switch (this.get_Model().AppColumnType){
        case 1:
            this.AppColumnType_Click_Default();
            break;
        case 2:
            this.AppColumnType_Click_DropdownList();
            break;
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.Click_Save = function (){
    this.jF(".ModBox").hide();
    this.get_Model().AppColumnType = this.Temp_AppColumnType;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.GetDropdownValues = function (){
    var dropdownValues = ASPdb.FrameworkUI.st.New(this.jF(".TextArea1").val());
    var arr = dropdownValues.Split("\n", false);
    var rtn = new Array(0);
    for (var i = 0; i < arr.length; i++)
        rtn[i] = arr[i].TheString;
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.AppColumnType_Click_Default = function (){
    this.jF(".Radio_AppColumnType_Default").prop("checked", true);
    this.jF(".DropdownListDiv").hide();
    this.Temp_AppColumnType = 1;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.AppColumnType_Click_DropdownList = function (){
    this.jF(".Radio_AppColumnType_DropdownList").prop("checked", true);
    this.jF(".DropdownListDiv").show();
    this.Temp_AppColumnType = 2;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.GetCssRoot = function (){
    return "\r\n                .EditAppItem { }\r\n                .EditAppItem .Div_BG { background: #464f5b; opacity: 0.65; position:fixed; width: 100%; height: 8000px; top: 0px; left: 0px; z-index: 999; }\r\n                .EditAppItem .ModBox { position:absolute; top: 1.5em; left: 0.5em; width: 40em; min-height: 10em; padding: 1em; background: #fff; box-shadow: .05em .05em .4em #000; z-index: 1000; }\r\n                .EditAppItem .ModBox .Bttn { font-size: .9em; float:left; cursor:pointer; margin-right: 1em; padding: .5em 1.5em; background: #14498f; color: #fff; }\r\n                .EditAppItem .ModBox .Bttn:hover { background: #333; }\r\n                .EditAppItem .ModBox .Radio1 { cursor:pointer; padding: .2em .4em; }\r\n                .EditAppItem .ModBox .Radio1:hover { background: #0b94da; color: #fff; }\r\n\r\n                .EditAppItem .ModBox .DropdownListDiv { display:none; }\r\n                .EditAppItem .ModBox .DropdownListDiv .TextArea1 { width: 24em; height: 14em; margin-top: .5em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Div_BG NoSelect\' On_Click=\'Close\'>&nbsp;</div>\r\n                <div class=\'ModBox\'>\r\n                    <div class=\'Bttn\' On_Click=\'Click_Save\'>Save</div>\r\n                    <div class=\'Bttn\' On_Click=\'Close\'     >Cancel</div>\r\n                    <div class=\'clear\'></div>\r\n                    <br />\r\n                    Custom App Properties : <span ModelKey=\'ColumnName\'></span>\r\n                    <br />\r\n                    <br />\r\n                    <div On_Click=\'AppColumnType_Click_Default\'      class=\'Radio1        \'><input type=\'radio\' name=\'AppColumnType\' value=\'Default\'      class=\'Radio_AppColumnType_Default\'      /> Default</div>\r\n                    <div On_Click=\'AppColumnType_Click_DropdownList\' class=\'Radio1 Radio1b\'><input type=\'radio\' name=\'AppColumnType\' value=\'DropdownList\' class=\'Radio_AppColumnType_DropdownList\' /> DropdownList</div>\r\n                    <br />\r\n                    <div class=\'DropdownListDiv\'>\r\n                        Set the list of Dropdown values here. <br />\r\n                        Put each value on a new line.\r\n                        <br />\r\n                        <textarea class=\'TextArea1\'></textarea>\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.UIParts.EditAppItem, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector = function (){
    this.TypeSelectorItems = null;
    this.MouseIsOver = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ColumnsRow_TypeSelector jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var thisObj = this;
    var jRootObj = this.jRoot;
    eval("jRootObj.mouseover(function(){ thisObj.MouseIsOver = true; });");
    eval("jRootObj.mouseout(function(){ thisObj.MouseIsOver = false; });");
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.prototype.Open_Sub = function (){
    if (this.TypeSelectorItems == null){
        var typesArr = ["int", "bigint", "bit", "datetime", "--", "nvarchar(50)", "ntext", "--", "decimal(18, 0)", "float", "money", "--"];
        if (this.get_ViewModel().IsCreateNew)
            typesArr = ["int - Identity(1,1)", "bigint - Identity(1,1)", "--", "int", "bit", "datetime", "--", "nvarchar(50)", "ntext", "--", "decimal(18, 0)", "float", "money", "--"];
        this.TypeSelectorItems = new Array(0);
        var holder = this.jF(".Holder_Items").html("");
        for (var i = 0; i < typesArr.length; i++){
            this.TypeSelectorItems[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem();
            this.TypeSelectorItems[i].set_Model(typesArr[i]);
            this.TypeSelectorItems[i].Instantiate();
            this.TypeSelectorItems[i].OnChange.After.AddHandler(this, "Item_OnChange", 1);
            holder.append(this.TypeSelectorItems[i].jRoot);
        }
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.prototype.DelayClose = function (){
    var thisObj = this;
    if (this.MouseIsOver)
        eval("setTimeout(function(){ thisObj.Close(); }, 150);");
    else
        this.Close();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.prototype.Item_OnChange = function (value){
    this.set_Model(value);
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.GetCssRoot = function (){
    return "\r\n                .ColumnsRow_TypeSelector { width: 10em; background: #f5f5f5; border: 1px solid #99bbf2; box-shadow: 1px 1px 5px #555; }\r\n                .ColumnsRow_TypeSelector .Holder_Items { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Holder_Items\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ColumnsRow_TypeSelectorItem jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    if (this.get_Model() != "--")
        this.jF(".ItemTS").html(this.get_Model());
    else {
        this.jF(".ItemTS").hide();
        this.jF(".Divider").show();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.prototype.ItemTS_Click = function (){
    this.OnChange.After.Fire1(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.GetCssRoot = function (){
    return "\r\n                .ColumnsRow_TypeSelectorItem { }\r\n                .ColumnsRow_TypeSelectorItem .ItemTS { font-size: .8em; padding-left: .65em; cursor: pointer; }\r\n                .ColumnsRow_TypeSelectorItem .ItemTS:hover { background: #397bd2; color: #fff; }\r\n                .ColumnsRow_TypeSelectorItem .Divider { display:none; background: #dedede; line-height: .8em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'ItemTS\' On_Click=\'ItemTS_Click\'></div>\r\n                <div class=\'Divider\'>&nbsp;</div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelectorItem, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Objs.AppPropertiesInfo = function (){
    this.Columns = null;
    this.DropdownListItems = null;
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow = function (){
    this.ColumnInfo = null;
    this.IsIdentity = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'PrimaryKeyRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    if (this.get_Model().Identity != null){
        this.IsIdentity = true;
        this.jF(".Txt_Increment").val(this.get_Model().Identity.Increment);
        this.jF(".Txt_Seed").val(this.get_Model().Identity.Seed);
    }
    var thisObj = this;
    var jRootObj = this.jRoot;
    eval("jRootObj.find(\'.Txt_Seed\').on(\'input\', function(){ thisObj.IdentityPropertyChanged(); });");
    eval("jRootObj.find(\'.Txt_Increment\').on(\'input\', function(){ thisObj.IdentityPropertyChanged(); });");
    this.UpdateUI();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.IdentityPropertyChanged = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.UpdateUI = function (){
    this.ColumnInfo = null;
    var allColumns = this.get_ViewModel().TableStructure.Columns;
    for (var i = 0; i < allColumns.length; i++)
        if (allColumns[i].ColumnName.toLowerCase() == this.get_Model().ColumnName.toLowerCase()){
            this.ColumnInfo = allColumns[i];
            i = allColumns.length + 1;
        }
    var select = this.jF(".Select_PrimaryKeyFields").html("<option value=\'\'></option>");
    for (var i = 0; i < allColumns.length; i++){
        var tmp = allColumns[i].ColumnName;
        select.append("<option value=\'" + tmp + "\'>" + tmp + "</option>");
    }
    select.val(this.get_Model().ColumnName);
    var dataType = "";
    if (this.ColumnInfo != null)
        dataType = this.ColumnInfo.DataType;
    this.jF(".Txt_DataType").html(dataType);
    this.HideIdentityUI();
    if (dataType == "int" || dataType == "bigint"){
        this.jF(".Div_IsIdentity").show();
        if (this.IsIdentity){
            this.jF(".Div_IsIdentity").addClass("Div_IsIdentity_On");
            this.jF(".Checkbox_IsIdentity").attr("checked", true);
            this.jF(".Div_IdentityProperties").show();
        }
        else {
            this.jF(".Div_IsIdentity").removeClass("Div_IsIdentity_On");
            this.jF(".Checkbox_IsIdentity").removeAttr("checked");
            this.jF(".Div_IdentityProperties").hide();
        }
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.HasValue = function (){
    var value = this.jF(".Select_PrimaryKeyFields").val();
    if (value != null && value != "")
        return true;
    return false;
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.HideIdentityUI = function (){
    this.jF(".Div_IsIdentity").hide();
    this.jF(".Div_IdentityProperties").hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.ShowIdentityUI = function (){
    if (this.ColumnInfo != null)if (this.ColumnInfo.DataType == "int"){
        this.IsIdentity = false;
        this.UpdateUI();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.GetModel = function (){
    if (!this.HasValue())
        return null;
    var rtn = new ASPdatabaseNET.DbInterfaces.TableObjects.PrimaryKeyColumn();
    rtn.ColumnName = this.jF(".Select_PrimaryKeyFields").val();
    rtn.Identity = null;
    if (this.IsIdentity){
        var increment = 1;
        var seed = 1;
        try{
            increment = 1 * this.jF(".Txt_Increment").val();
            seed = 1 * this.jF(".Txt_Seed").val();
        }
        catch($$e3){
        }
        rtn.Identity = new ASPdatabaseNET.DbInterfaces.TableObjects.Identity();
        rtn.Identity.ConnectionId = this.get_ViewModel().ConnectionId;
        rtn.Identity.Schema = this.get_ViewModel().TableStructure.Schema;
        rtn.Identity.TableName = this.get_ViewModel().TableStructure.TableName;
        rtn.Identity.ColumnName = rtn.ColumnName;
        rtn.Identity.Increment = increment;
        rtn.Identity.Seed = seed;
    }
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.Select_PrimaryKeyFields_Change = function (){
    this.get_Model().ColumnName = this.jF(".Select_PrimaryKeyFields").val();
    this.UpdateUI();
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.Div_IsIdentity_Click = function (){
    this.IsIdentity = !this.IsIdentity;
    this.UpdateUI();
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.GetCssRoot = function (){
    return "\r\n                .PrimaryKeyRow { }\r\n                .PrimaryKeyRow td { line-height: 3em; background: #e5e5ea; border-bottom: .3em solid #fff; padding-left: 1em; }\r\n                .PrimaryKeyRow .PKTD1 { width: 14.5em; }\r\n                .PrimaryKeyRow .PKTD2 { font-size: .8em; width: 8em; padding-top: .3em; color: #777; }\r\n                .PrimaryKeyRow .PKTD3 { width: 6em; }\r\n                .PrimaryKeyRow .PKTD4 { width: 15em; font-size: .8em; line-height: 1.5em; padding-right: 1em; }\r\n\r\n                .PrimaryKeyRow .Select_PrimaryKeyFields { font-size: .85em; width: 16em; }\r\n\r\n                .PrimaryKeyRow .Div_IsIdentity { font-size: .8em; margin-top: 0.5em; padding: 0em .7em; line-height: 2.65625em; cursor:pointer; }\r\n                .PrimaryKeyRow .Div_IsIdentity:hover { background: #b4b4b4; color: #fff; }\r\n                .PrimaryKeyRow .Div_IsIdentity_On { background: #859dc0; color: #fff; }\r\n                .PrimaryKeyRow .Div_IsIdentity .Checkbox_IsIdentity { }\r\n\r\n                .PrimaryKeyRow .Div_IdentityProperties { margin-top: .2em; }\r\n                .PrimaryKeyRow .Div_IdentityProperties input { width: 3em; border: 1px solid #859dc0; text-align:center; margin: .2em 0em; padding: 0em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'PKTD1\'>\r\n                    <select class=\'Select_PrimaryKeyFields\' On_Change=\'Select_PrimaryKeyFields_Change\'></select>\r\n                </td>\r\n                <td class=\'PKTD2 Txt_DataType\'>\r\n                </td>\r\n                <td class=\'PKTD3\'>\r\n                    <div class=\'Div_IsIdentity\' On_Click=\'Div_IsIdentity_Click\'>\r\n                        <input type=\'checkbox\' class=\'Checkbox_IsIdentity\' />\r\n                        Identity\r\n                    </div>\r\n                </td>\r\n                <td class=\'PKTD4\'>\r\n                    <div class=\'Div_IdentityProperties\'>\r\n                        <input type=\'text\' class=\'Txt_Seed\' value=\'1\' /> Identity Seed\r\n                        <br />\r\n                        <input type=\'text\' class=\'Txt_Increment\' value=\'1\' /> Identity Increment\r\n                        <br />\r\n                    </div>\r\n                </td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Users) == "undefined")
    ASPdatabaseNET.UI.PageParts.Users = {};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI = function (){
    this.IsOn = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'MenuItemUI jRoot\'>");
    this.jRoot.append(this.get_Model().DisplayName);
    var t = this;
    var j = this.jRoot;
    eval("j.click(function(){ t.Click(); });");
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.prototype.TurnOn = function (){
    this.jRoot.addClass("MenuItemUI_On");
    this.IsOn = true;
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.prototype.TurnOff = function (){
    this.jRoot.removeClass("MenuItemUI_On");
    this.IsOn = false;
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.prototype.Click = function (){
    this.OnChange.After.Fire1(this);
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.GetCssRoot = function (){
    return "\r\n                .MenuItemUI { border-bottom: 1px solid #f9f9f9; line-height: 2.2em; cursor: pointer; font-size: .75em; padding: 0em .5em; white-space:nowrap; }\r\n                .MenuItemUI:hover { background: #777; color: #ccc; }\r\n                .MenuItemUI b { font-weight:normal; color: #1161ca; }\r\n                .MenuItemUI:hover b { color: #c3daf8; }\r\n                .MenuItemUI_On { background: #555; color: #ddd; }\r\n                .MenuItemUI_On b { color: #c3daf8; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.prototype.GetHtmlRoot = function (){
    return "\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.MenuItemUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Users.Objs) == "undefined")
    ASPdatabaseNET.UI.PageParts.Users.Objs = {};
ASPdatabaseNET.UI.PageParts.Users.Objs.GroupInfo = function (){
    this.GroupId = 0;
    this.GroupName = null;
    this.Active = false;
    this.TimeCreated_Str = null;
    this.Permissions = null;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.Permission = function (){
    this.PermissionType = 0;
    this.PermissionId = 0;
    this.GroupId = 0;
    this.ConnectionId = 0;
    this.ConnectionName = null;
    this.Schema = null;
    this.TableId = 0;
    this.TableName = null;
    this.View = false;
    this.Edit = false;
    this.Insert = false;
    this.Delete = false;
    this.SubPermissions = null;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.Permission = function (permissionType, permissionId, groupId){
    this.PermissionType = 0;
    this.PermissionId = 0;
    this.GroupId = 0;
    this.ConnectionId = 0;
    this.ConnectionName = null;
    this.Schema = null;
    this.TableId = 0;
    this.TableName = null;
    this.View = false;
    this.Edit = false;
    this.Insert = false;
    this.Delete = false;
    this.SubPermissions = null;
    this.PermissionType = permissionType;
    this.PermissionId = permissionId;
    this.GroupId = groupId;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.Permission.prototype.Set_PermissionType = function (permissionType_SingleCharacter){
    this.PermissionType = 0;
    switch (permissionType_SingleCharacter){
        case "C":
            this.PermissionType = 1;
            break;
        case "S":
            this.PermissionType = 2;
            break;
        case "T":
            this.PermissionType = 3;
            break;
    }
};
ASPdatabaseNET.UI.PageParts.Users.Objs.Permission.prototype.Get_UniqueKey = function (){
    var rtn = null;
    switch (this.PermissionType){
        case 1:
            rtn = "C_" + this.ConnectionId;
            break;
        case 2:
            rtn = "S_" + this.ConnectionId + "_[" + this.Schema + "]";
            break;
        case 3:
            rtn = "T_" + this.ConnectionId + "_[" + this.Schema + "]_[" + this.TableId + "]";
            break;
    }
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.Permission.prototype.IsEqual = function (permission){
    if (this.PermissionType != permission.PermissionType)
        return false;
    if (this.GroupId != permission.GroupId)
        return false;
    if (this.ConnectionId != permission.ConnectionId)
        return false;
    if (this.Schema != permission.Schema)
        return false;
    if (this.TableId != permission.TableId)
        return false;
    if (this.View != permission.View)
        return false;
    if (this.Edit != permission.Edit)
        return false;
    if (this.Insert != permission.Insert)
        return false;
    if (this.Delete != permission.Delete)
        return false;
    return true;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.UserInfo = function (){
    this.UserId = 0;
    this.Username = null;
    this.FirstName = null;
    this.LastName = null;
    this.Email = null;
    this.Active = false;
    this.TimeCreated_Str = null;
    this.LastLoginTime_Str = null;
    this.RequirePasswordReset = false;
    this.IsAdmin = false;
    this.UserGroups = null;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.UsersMenuInfo = function (){
    this.UserSubscriptions_Total = 0;
    this.UserSubscriptions_Active = 0;
    this.UserSubscriptions_Message = "";
    this.Users_Active = null;
    this.Users_Inactive = null;
    this.Groups_Active = null;
    this.Groups_Inactive = null;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.UsersMenuItem = function (){
    this.MenuType = 0;
    this.Id = -1;
    this.DisplayName = null;
    this.Active = false;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.UsersViewModel = function (){
    this.CurrentId = -1;
    this.SaveJustHappened = false;
    this.CurrentTabId = -1;
    this.LastMenuItem = null;
};
ASPdatabaseNET.UI.PageParts.Users.Objs.UserToGroup_Assignment = function (){
    this.UserId = 0;
    this.GroupId = 0;
    this.GroupName = null;
    this.IsMember = false;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI = function (){
    this.ConnectionItems = null;
    this.PermissionItems = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'Panel_GroupUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.Open_Sub = function (){
    this.jF(".Left").hide();
    this.jF(".Right").hide();
    this.jF(".TablePermissionsTable").hide();
    this.jF(".Loading").show();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetGroup_Return").Users__GetGroup(this.get_ViewModel().CurrentId);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.GetGroup_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.BindUI();
    this.get_Model().Active = !this.get_Model().Active;
    this.ActiveBttn_Click();
    var holder_ConnectionItems = this.jF(".Holder_ConnectionItems").html("");
    this.ConnectionItems = new Array(0);
    if (this.get_Model().Permissions != null)
        for (var i = 0; i < this.get_Model().Permissions.length; i++){
            this.ConnectionItems[i] = new ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem();
            this.ConnectionItems[i].set_ViewModel(this.get_ViewModel());
            this.ConnectionItems[i].set_Model(this.get_Model().Permissions[i]);
            this.ConnectionItems[i].Instantiate();
            this.ConnectionItems[i].OnChange.After.AddHandler(this, "ConnectionItem_Click", 1);
            holder_ConnectionItems.append(this.ConnectionItems[i].jRoot);
        }
    this.jF(".Holder_PermissionItems").html("");
    this.PermissionItems = new Array(0);
    this.jF(".Loading").hide();
    this.jF(".Left").show();
    this.jF(".Right").show();
    this.jF(".TablePermissionsTable").show();
    if (this.get_Model().GroupId < 0)
        this.jF(".GroupId").html("");
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.SaveBttn_Click = function (){
    this.get_Model().GroupName = this.jF(".T_GroupName").val();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "SaveGroup_Return").Users__SaveGroup(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.SaveGroup_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().CurrentId = ajaxResponse.ReturnObj;
    this.OnChange.After.Fire();
    alert("Saved");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.DeleteBttn_Click = function (){
    if (prompt("Are you certain? \n\nIf so, type \"delete group\"") == "delete group"){
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "DeleteGroup_Return").Users__DeleteGroup(this.get_Model().GroupId);
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.DeleteGroup_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().CurrentId = -1;
    this.get_Model().GroupId = -1;
    this.Close();
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.CancelBttn_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.ActiveBttn_Click = function (){
    this.get_Model().Active = !this.get_Model().Active;
    if (this.get_Model().Active){
        this.jF(".ActiveBttn").addClass("ActiveBttn_On");
        this.jF(".C_Active").attr("checked", true);
    }
    else {
        this.jF(".ActiveBttn").removeClass("ActiveBttn_On");
        this.jF(".C_Active").removeAttr("checked");
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.ConnectionItem_Click = function (connectionItem){
    for (var i = 0; i < this.ConnectionItems.length; i++)
        this.ConnectionItems[i].RemoveClass__Item_On();
    var connectionRoot = null;
    for (var i = 0; i < this.get_Model().Permissions.length; i++)
        if (this.get_Model().Permissions[i].ConnectionId == connectionItem.get_Model().ConnectionId)
            connectionRoot = this.get_Model().Permissions[i];
    var holder_PermissionItems = this.jF(".Holder_PermissionItems").html("");
    this.PermissionItems = new Array(0);
    if (connectionRoot != null){
        var i = 0;
        this.PermissionItems[i] = new ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem();
        this.PermissionItems[i].set_Model(connectionRoot);
        i++;
        if (connectionRoot.SubPermissions != null)
            for (var j = 0; j < connectionRoot.SubPermissions.length; j++){
                this.PermissionItems[i] = new ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem();
                this.PermissionItems[i].set_Model(connectionRoot.SubPermissions[j]);
                i++;
                if (connectionRoot.SubPermissions[j].SubPermissions != null)
                    for (var k = 0; k < connectionRoot.SubPermissions[j].SubPermissions.length; k++){
                        this.PermissionItems[i] = new ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem();
                        this.PermissionItems[i].set_Model(connectionRoot.SubPermissions[j].SubPermissions[k]);
                        i++;
                    }
            }
    }
    for (var i = 0; i < this.PermissionItems.length; i++){
        this.PermissionItems[i].set_ViewModel(this.get_ViewModel());
        this.PermissionItems[i].Instantiate();
        holder_PermissionItems.append(this.PermissionItems[i].jRoot);
    }
    holder_PermissionItems.scrollTop(0);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.GetCssRoot = function (){
    return "\r\n                .Panel_GroupUI { }\r\n\r\n                .Panel_GroupUI .MainForm { margin-top: 2.1875em; padding: 0em 1.4em; background: #f8f8f8; border-left: 1px solid #fff; }\r\n                .Panel_GroupUI .MainForm .Loading {  line-height: 3.25em; text-align: center; color: #777; }\r\n                .Panel_GroupUI .MainForm .Left {  display:none; float:left; width: 13em; }\r\n                .Panel_GroupUI .MainForm .Right { display:none; float:right; width: 16em; }\r\n                \r\n                .Panel_GroupUI .MainForm .ActiveBttn { font-size: .8em; position:relative; height: 2.265625em; color: #a1a1a1; cursor:pointer; }\r\n                .Panel_GroupUI .MainForm .ActiveBttn:hover { background: #6a6e73; color: #fff; }\r\n                .Panel_GroupUI .MainForm .ActiveBttn_On { background: #eb640a; color: #fff; }\r\n                .Panel_GroupUI .MainForm .ActiveBttn input { position:absolute; top: 0.625em; left: 1.25em; }\r\n                .Panel_GroupUI .MainForm .ActiveBttn span { position:absolute; top: 0.46875em; left: 3.75em; }\r\n\r\n                .Panel_GroupUI .MainForm .Label0 { font-size: .7em; line-height: 1.3em; color: #a1a1a1; }\r\n                .Panel_GroupUI .MainForm .Label1 { font-size: .7em; line-height: 2.25em; color: #a1a1a1; }\r\n                .Panel_GroupUI .MainForm .Label1 span { color: #1161ca; }\r\n                \r\n                .Panel_GroupUI .MainForm .Label2 { font-size: .8em; line-height: 1.484375em; color: #a1a1a1; margin-top: 1.2em; }\r\n                \r\n                .Panel_GroupUI .MainForm input[type=text] { font-size: .9em; width: 13.944444em; border: 1px solid #3d7bcc; background: #fff; color: #3d7bcc; margin-bottom: 1.1em; line-height: 1.5em; padding: .25em; }\r\n                \r\n                .Panel_GroupUI .MainForm .BttnsTable { width: 100%; }\r\n                .Panel_GroupUI .MainForm .BttnsTable td { font-size: .8em; width: 33%; text-align:center; line-height: 2.265625em; color: #fff; cursor:pointer; }\r\n                .Panel_GroupUI .MainForm .BttnsTable .SaveBttn { background: #14498f; }\r\n                .Panel_GroupUI .MainForm .BttnsTable .SaveBttn:hover { background: #6a6e73; }\r\n                .Panel_GroupUI .MainForm .BttnsTable .Bttn1 { background: #3d7bcc; border-left: 1px solid #fff; }\r\n                .Panel_GroupUI .MainForm .BttnsTable .Bttn1:hover { background: #6a6e73; }\r\n\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable { width: 100%; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable td { }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td1 { font-size: .8em; color: #a1a1a1; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td2 { font-size: .8em; color: #a1a1a1; padding: 0em 2em 0em .8em; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td3 { background: #fff; border-top: 1px solid #aac5e9; width: 10.75em; border-right: 0.25em solid #f8f8f8; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td4 { background: #fff; border-top: 1px solid #aac5e9; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td2 .RightLabel { float: right; font-size: .7em; width: 4.1em; text-align:center; color: #333; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td3 .Holder_ConnectionItems { min-height: 8em; }\r\n                .Panel_GroupUI .MainForm .TablePermissionsTable .Td4 .Holder_PermissionItems { }\r\n                .Panel_GroupUI .MainForm .MarginBottom { line-height: 0.6875em; }\r\n                \r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'MainForm\'>\r\n                    <div class=\'Loading\'>Loading . . .</div>\r\n                    <div class=\'Left\'>\r\n                        <div class=\'ActiveBttn\' On_Click=\'ActiveBttn_Click\'>\r\n                            <input type=\'checkbox\' class=\'C_Active\' />\r\n                            <span>Active</span>\r\n                            &nbsp;\r\n                        </div>\r\n                        <div class=\'Label2\'>Group Name</div>\r\n                        <input type=\'text\' class=\'T_GroupName\' ModelKey=\'GroupName\' />\r\n                    </div>\r\n                    <div class=\'Right\'>\r\n                        <table class=\'BttnsTable\'><tr>\r\n                            <td class=\'SaveBttn\'   On_Click=\'SaveBttn_Click\'  >Save</td>\r\n                            <td class=\'Bttn1\'      On_Click=\'DeleteBttn_Click\'>Delete</td>\r\n                            <td class=\'Bttn1\'      On_Click=\'CancelBttn_Click\'>Cancel</td>\r\n                        </tr></table>\r\n                        <div class=\'Label0\'>&nbsp;</div>\r\n                        <div class=\'Label1\'>GroupId : <span class=\'GroupId\' ModelKey=\'GroupId\'></span></div>\r\n                        <div class=\'Label1\'>Time Created : <span ModelKey=\'TimeCreated_Str\'></span></div>\r\n                    </div>\r\n                    <div class=\'clear\'></div>\r\n                    <table class=\'TablePermissionsTable\'>\r\n                        <tr>\r\n                            <td class=\'Td1\'>Connections</td>\r\n                            <td class=\'Td2\'>\r\n                                Permissions\r\n                                <div class=\'RightLabel\'>Delete</div>\r\n                                <div class=\'RightLabel\'>Insert</div>\r\n                                <div class=\'RightLabel\'>Edit</div>\r\n                                <div class=\'RightLabel\'>View</div>\r\n                                <div class=\'clear\'></div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\'Td3\'>\r\n                                <div class=\'Holder_ConnectionItems\'></div>\r\n                            </td>\r\n                            <td class=\'Td4\'>\r\n                                <div class=\'Holder_PermissionItems AutoResize\'></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <div class=\'MarginBottom\'>&nbsp;</div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'Panel_GroupUI_ConnectionItem jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    this.jF(".Item").attr("title", this.get_Model().ConnectionName + " (Id: " + this.get_Model().ConnectionId + ")");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.prototype.Click = function (){
    this.OnChange.After.Fire1(this);
    this.jF(".Item").addClass("Item_On");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.prototype.RemoveClass__Item_On = function (){
    this.jF(".Item").removeClass("Item_On");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.GetCssRoot = function (){
    return "\r\n                .Panel_GroupUI_ConnectionItem { border-bottom: 1px solid #aac5e9; }\r\n                .Panel_GroupUI_ConnectionItem .Item { font-size: .7em; padding-left: .6em; line-height: 1.7857em; overflow:hidden; white-space:nowrap; color: #14498f; cursor:pointer; }\r\n                .Panel_GroupUI_ConnectionItem .Item:hover { background: #14498f; color: #fff; }\r\n                .Panel_GroupUI_ConnectionItem .Item_On { background: #dee9f6; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Item\' ModelKey=\'ConnectionName\' On_Click=\'Click\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_ConnectionItem, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'Panel_GroupUI_PermissionItem jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var name = "";
    var itemClass = "";
    var holderClass = "";
    var titleTag = "";
    switch (this.get_Model().PermissionType){
        case 1:
            name = this.get_Model().ConnectionName;
            itemClass = "Item_C";
            holderClass = "Holder_C";
            titleTag = "CONNECTION : " + name;
            break;
        case 2:
            name = this.get_Model().Schema;
            itemClass = "Item_S";
            holderClass = "Holder_S";
            titleTag = "SCHEMA : " + name;
            break;
        case 3:
            name = this.get_Model().TableName;
            itemClass = "Item_T";
            holderClass = "Holder_T";
            titleTag = "TABLE : " + name;
            break;
    }
    this.jF(".Item").html(name).addClass(itemClass).attr("title", titleTag);
    this.jF(".Holder_Checkboxes").addClass(holderClass);
    this.Click_HELPER(this.get_Model().View, "View");
    this.Click_HELPER(this.get_Model().Edit, "Edit");
    this.Click_HELPER(this.get_Model().Insert, "Insert");
    this.Click_HELPER(this.get_Model().Delete, "Delete");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.Click_HELPER = function (isClicked, name){
    if (isClicked){
        this.jF(".Div_" + name).addClass("DivItem_On");
        this.jF(".C_" + name).attr("checked", true);
    }
    else {
        this.jF(".Div_" + name).removeClass("DivItem_On");
        this.jF(".C_" + name).removeAttr("checked");
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.Click_View = function (){
    this.get_Model().View = !this.get_Model().View;
    this.Click_HELPER(this.get_Model().View, "View");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.Click_Edit = function (){
    this.get_Model().Edit = !this.get_Model().Edit;
    this.Click_HELPER(this.get_Model().Edit, "Edit");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.Click_Insert = function (){
    this.get_Model().Insert = !this.get_Model().Insert;
    this.Click_HELPER(this.get_Model().Insert, "Insert");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.Click_Delete = function (){
    this.get_Model().Delete = !this.get_Model().Delete;
    this.Click_HELPER(this.get_Model().Delete, "Delete");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.GetCssRoot = function (){
    return "\r\n                .Panel_GroupUI_PermissionItem { position:relative; border-bottom: 1px solid #aac5e9; }\r\n                .Panel_GroupUI_PermissionItem .Item { font-size: .7em; padding-left: .6em; line-height: 1.7857em; overflow:hidden; white-space:nowrap; color: #14498f; }\r\n                .Panel_GroupUI_PermissionItem .Item_C { background: #dee9f6; padding-left: 0.6em; }\r\n                .Panel_GroupUI_PermissionItem .Item_S { background: #fdfcd7; padding-left: 1.2em; }\r\n                .Panel_GroupUI_PermissionItem .Item_T { background: #fff;    padding-left: 1.8em; color: #3d7bcc; }\r\n\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes { position:absolute; top: 0em; left: 10.5em; }\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .DivItem { float:left; width: 2.25em; text-align:center; cursor:pointer; padding-top: 0em; border-right: 1px solid #fff; }\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .DivItem:hover { background: #4d8cde; }\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .DivItem input { cursor:pointer; }\r\n\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .Div_View { border-left: 1px solid #fff; }\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .Div_Edit { }\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .Div_Insert { }\r\n                .Panel_GroupUI_PermissionItem .Holder_Checkboxes .Div_Delete { }\r\n\r\n                .Panel_GroupUI_PermissionItem .Holder_C .DivItem  { background: #dee9f6; }\r\n                .Panel_GroupUI_PermissionItem .Holder_S .DivItem  { background: #fdfcd7; }\r\n                .Panel_GroupUI_PermissionItem .Holder_T .DivItem  { background: #fff;    }\r\n\r\n                .Panel_GroupUI_PermissionItem .Holder_C .DivItem_On  { background: #8eb8ee; }\r\n                .Panel_GroupUI_PermissionItem .Holder_S .DivItem_On  { background: #8eb8ee; }\r\n                .Panel_GroupUI_PermissionItem .Holder_T .DivItem_On  { background: #8eb8ee; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Item\'></div>\r\n                <div class=\'Holder_Checkboxes\'>\r\n                    <div class=\'DivItem Div_View\'   On_Click=\'Click_View\'  ><input type=\'checkbox\' class=\'C_View\'   /></div>\r\n                    <div class=\'DivItem Div_Edit\'   On_Click=\'Click_Edit\'  ><input type=\'checkbox\' class=\'C_Edit\'   /></div>\r\n                    <div class=\'DivItem Div_Insert\' On_Click=\'Click_Insert\'><input type=\'checkbox\' class=\'C_Insert\' /></div>\r\n                    <div class=\'DivItem Div_Delete\' On_Click=\'Click_Delete\'><input type=\'checkbox\' class=\'C_Delete\' /></div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI_PermissionItem, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI = function (){
    this.ResetPasswordUI = null;
    this.GroupItems = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'Panel_UserUI jRoot AutoResize\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.ResetPasswordUI = new ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword();
    this.ResetPasswordUI.set_ViewModel(this.get_ViewModel());
    this.ResetPasswordUI.Instantiate();
    this.ResetPasswordUI.Close();
    this.ResetPasswordUI.OnClose.After.AddHandler(this, "ResetPasswordUI_Close", 0);
    this.jF(".Holder_ResetPassword").html("").append(this.ResetPasswordUI.jRoot);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.Open_Sub = function (){
    if (this.ResetPasswordUI.IsOpen)
        this.ResetPasswordUI.Close();
    this.jF(".Left").hide();
    this.jF(".Right").hide();
    this.jF(".Loading").show();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetUser_Return").Users__GetUser(this.get_ViewModel().CurrentId);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.GetUser_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.BindUI();
    this.get_Model().Active = !this.get_Model().Active;
    this.ActiveBttn_Click();
    this.get_Model().IsAdmin = !this.get_Model().IsAdmin;
    this.AdminBttn_Click();
    var holder_PermissionGroups = this.jF(".Holder_PermissionGroups").html("");
    this.GroupItems = new Array(0);
    if (this.get_Model().UserGroups != null)
        for (var i = 0; i < this.get_Model().UserGroups.length; i++){
            this.GroupItems[i] = new ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem();
            this.GroupItems[i].set_ViewModel(this.get_ViewModel());
            this.GroupItems[i].set_Model(this.get_Model().UserGroups[i]);
            this.GroupItems[i].Instantiate();
            holder_PermissionGroups.append(this.GroupItems[i].jRoot);
        }
    this.jF(".Loading").hide();
    this.jF(".Left").show();
    this.jF(".Right").show();
    if (this.get_Model().UserId < 0){
        this.jF(".UserId").html("");
        this.jF(".ResetPasswordBttn").hide();
    }
    else
        this.jF(".ResetPasswordBttn").show();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.SaveBttn_Click = function (){
    this.get_Model().Username = this.jF(".T_Username").val();
    this.get_Model().Email = this.jF(".T_Email").val();
    this.get_Model().FirstName = this.jF(".T_FirstName").val();
    this.get_Model().LastName = this.jF(".T_LastName").val();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "SaveUser_Return").Users__SaveUser(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.SaveUser_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().CurrentId = ajaxResponse.ReturnObj;
    this.OnChange.After.Fire();
    alert("Saved");
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.DeleteBttn_Click = function (){
    if (prompt("Are you certain? \n\nIf so, type \"delete user\"") == "delete user"){
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "DeleteUser_Return").Users__DeleteUser(this.get_Model().UserId);
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.DeleteUser_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().CurrentId = -1;
    this.get_Model().UserId = -1;
    this.Close();
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.CancelBttn_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.ActiveBttn_Click = function (){
    this.get_Model().Active = !this.get_Model().Active;
    if (this.get_Model().Active){
        this.jF(".ActiveBttn").addClass("ActiveBttn_On");
        this.jF(".C_Active").attr("checked", true);
    }
    else {
        this.jF(".ActiveBttn").removeClass("ActiveBttn_On");
        this.jF(".C_Active").removeAttr("checked");
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.AdminBttn_Click = function (){
    this.get_Model().IsAdmin = !this.get_Model().IsAdmin;
    if (this.get_Model().IsAdmin){
        this.jF(".AdminBttn").addClass("AdminBttn_On");
        this.jF(".C_Admin").attr("checked", true);
    }
    else {
        this.jF(".AdminBttn").removeClass("AdminBttn_On");
        this.jF(".C_Admin").removeAttr("checked");
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.ResetPasswordBttn_Click = function (){
    this.jF(".MainForm").hide();
    this.ResetPasswordUI.set_Model(this.get_Model());
    this.ResetPasswordUI.Open();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.ResetPasswordUI_Close = function (){
    this.jF(".MainForm").show();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.GetCssRoot = function (){
    return "\r\n                .Panel_UserUI { }\r\n                .Panel_UserUI .MainForm { margin-top: 2.1875em; padding: 0em 1.4em; background: #f8f8f8; border-left: 1px solid #fff; }\r\n                .Panel_UserUI .MainForm .Loading {  line-height: 3.25em; text-align: center; color: #777; }\r\n                .Panel_UserUI .MainForm .Left {  display:none; float:left; width: 13em; }\r\n                .Panel_UserUI .MainForm .Right { display:none; float:right; width: 16em; }\r\n\r\n                .Panel_UserUI .MainForm .ActiveBttn { font-size: .8em; position:relative; height: 2.265625em; color: #a1a1a1; cursor:pointer; }\r\n                .Panel_UserUI .MainForm .ActiveBttn:hover { background: #6a6e73; color: #fff; }\r\n                .Panel_UserUI .MainForm .ActiveBttn_On { background: #eb640a; color: #fff; }\r\n                .Panel_UserUI .MainForm .ActiveBttn input { position:absolute; top: 0.625em; left: 1.25em; }\r\n                .Panel_UserUI .MainForm .ActiveBttn span { position:absolute; top: 0.46875em; left: 3.75em; }\r\n\r\n                .Panel_UserUI .MainForm .AdminBttn { font-size: .8em; position:relative; height: 2.265625em; color: #a1a1a1; cursor:pointer; margin-top: 1em; }\r\n                .Panel_UserUI .MainForm .AdminBttn:hover { background: #6a6e73; color: #fff; }\r\n                .Panel_UserUI .MainForm .AdminBttn_On { background: #eb640a; color: #fff; }\r\n                .Panel_UserUI .MainForm .AdminBttn input { position:absolute; top: 0.625em; left: 1.25em; }\r\n                .Panel_UserUI .MainForm .AdminBttn span { position:absolute; top: 0.46875em; left: 3.75em; }\r\n\r\n                .Panel_UserUI .MainForm .Label1 { font-size: .8em; line-height: 3.90625em; color: #a1a1a1; }\r\n                .Panel_UserUI .MainForm .Label1 .UserId { color: #1161ca; }\r\n\r\n                .Panel_UserUI .MainForm .Label2 { font-size: .8em; line-height: 1.484375em; color: #a1a1a1; }\r\n\r\n                .Panel_UserUI .MainForm input[type=text] { font-size: .9em; width: 13.944444em; border: 1px solid #3d7bcc; background: #fff; color: #3d7bcc; margin-bottom: 1.1em; line-height: 1.5em; padding: .25em; }\r\n\r\n                .Panel_UserUI .MainForm .ResetPasswordBttn { font-size: .8em; line-height: 2.265625em; background: #3d7bcc; color: #fff; text-align:center; cursor:pointer; margin-bottom: 1.2em; }\r\n                .Panel_UserUI .MainForm .ResetPasswordBttn:hover { background: #6a6e73; }\r\n\r\n                .Panel_UserUI .MainForm .Label3 { font-size: .6em; line-height: 2.5em; color: #a1a1a1; white-space:nowrap; }\r\n                .Panel_UserUI .MainForm .Label3 span { color: #1161ca; }\r\n\r\n                .Panel_UserUI .MainForm .BttnsTable { width: 100%; }\r\n                .Panel_UserUI .MainForm .BttnsTable td { font-size: .8em; width: 33%; text-align:center; line-height: 2.265625em; color: #fff; cursor:pointer; }\r\n                .Panel_UserUI .MainForm .BttnsTable .SaveBttn { background: #14498f; }\r\n                .Panel_UserUI .MainForm .BttnsTable .SaveBttn:hover { background: #6a6e73; }\r\n                .Panel_UserUI .MainForm .BttnsTable .Bttn1 { background: #3d7bcc; border-left: 1px solid #fff; }\r\n                .Panel_UserUI .MainForm .BttnsTable .Bttn1:hover { background: #6a6e73; }\r\n\r\n                .Panel_UserUI .MainForm .Label_PermissionGroups { font-size: 1em; line-height: 1.875em; margin-top: 2.4375em; color: #a1a1a1; }\r\n                .Panel_UserUI .MainForm .Holder_PermissionGroups { border-top: 1px solid #aac5e9; background: #fff; min-height: 21em; margin-bottom: 0.75em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'MainForm\'>\r\n                    <div class=\'Loading\'>Loading ...</div>\r\n                    <div class=\'Left\'>\r\n                        <div class=\'ActiveBttn\' On_Click=\'ActiveBttn_Click\'>\r\n                            <input type=\'checkbox\' class=\'C_Active\' />\r\n                            <span>Active</span>\r\n                            &nbsp;\r\n                        </div>\r\n                        <div class=\'AdminBttn\' On_Click=\'AdminBttn_Click\'>\r\n                            <input type=\'checkbox\' class=\'C_Admin\' />\r\n                            <span>Admin</span>\r\n                            &nbsp;\r\n                        </div>\r\n                        <div class=\'Label1\'>UserId : <span class=\'UserId\' ModelKey=\'UserId\'></span></div>\r\n\r\n                        <div class=\'Label2\'>Username</div>\r\n                        <input type=\'text\' class=\'T_Username\' ModelKey=\'Username\' />\r\n\r\n                        <div class=\'Label2\'>Email</div>\r\n                        <input type=\'text\' class=\'T_Email\' ModelKey=\'Email\' />\r\n\r\n                        <div class=\'Label2\'>First Name</div>\r\n                        <input type=\'text\' class=\'T_FirstName\' ModelKey=\'FirstName\' />\r\n\r\n                        <div class=\'Label2\'>Last Name</div>\r\n                        <input type=\'text\' class=\'T_LastName\' ModelKey=\'LastName\' />\r\n\r\n                        <div class=\'ResetPasswordBttn\' On_Click=\'ResetPasswordBttn_Click\'>Reset Password</div>\r\n\r\n                        <div class=\'Label3\'>Time Created : <span ModelKey=\'TimeCreated_Str\'></span></div>\r\n                        <div class=\'Label3\'>Last Login : <span ModelKey=\'LastLoginTime_Str\'></span></div>\r\n                    </div>\r\n                    <div class=\'Right\'>\r\n                        <table class=\'BttnsTable\'><tr>\r\n                            <td class=\'SaveBttn\'   On_Click=\'SaveBttn_Click\'  >Save</td>\r\n                            <td class=\'Bttn1\'      On_Click=\'DeleteBttn_Click\'>Delete</td>\r\n                            <td class=\'Bttn1\'      On_Click=\'CancelBttn_Click\'>Cancel</td>\r\n                        </tr></table>\r\n                        <div class=\'Label_PermissionGroups\'>Permission Groups</div>\r\n                        <div class=\'Holder_PermissionGroups\'></div>\r\n                    </div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'Holder_ResetPassword\'>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'Panel_UserUI_GroupItem jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    this.get_Model().IsMember = !this.get_Model().IsMember;
    this.Click();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.prototype.Click = function (){
    this.get_Model().IsMember = !this.get_Model().IsMember;
    if (this.get_Model().IsMember){
        this.jF(".Item").addClass("Item_On");
        this.jF(".C_IsMember").attr("checked", true);
    }
    else {
        this.jF(".Item").removeClass("Item_On");
        this.jF(".C_IsMember").removeAttr("checked");
    }
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.GetCssRoot = function (){
    return "\r\n                .Panel_UserUI_GroupItem { border-bottom: 1px solid #aac5e9; }\r\n                .Panel_UserUI_GroupItem .Item { position:relative; line-height: 1.625em; padding: 0em 1em 0em 2.5em; overflow:hidden; white-space:nowrap; cursor:pointer; }\r\n                .Panel_UserUI_GroupItem .Item:hover { background: #3d7bcc; color: #fff; }\r\n                .Panel_UserUI_GroupItem .Item_On { background: #dee9f6; }\r\n                .Panel_UserUI_GroupItem .Item input { position:absolute; top: 0.375em; left: .9em; }\r\n                .Panel_UserUI_GroupItem .Item div { font-size: .8em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Item\' On_Click=\'Click\'>\r\n                    <div ModelKey=\'GroupName\'></div>\r\n                    <input type=\'checkbox\' class=\'C_IsMember\' />\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_GroupItem, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'Panel_UserUI_ResetPassword jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.prototype.Open_Sub = function (){
    this.BindUI();
    this.jF(".P1").focus();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.prototype.Save_Click = function (){
    var p1 = this.jF(".P1").val();
    var p2 = this.jF(".P2").val();
    if (p1 != p2){
        alert("Passwords don\'t match.");
        this.jF(".P1").focus();
        return;
    }
    if (p1.length < 8){
        alert("Passwords must be at least 8 characters.");
        this.jF(".P1").focus();
        return;
    }
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "SavePassword_Return").Users__SavePassword(this.get_Model().UserId, p1);
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.prototype.SavePassword_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse)){
        this.jF(".P1").focus();
        return;
    }
    alert("Password Saved");
    this.Close();
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.GetCssRoot = function (){
    return "\r\n                .Panel_UserUI_ResetPassword { width: 13.125em; padding: 2em 0em 0em 3em; }\r\n                .Panel_UserUI_ResetPassword .Head1 { color: #3d7bcc; font-size: 1.5em; margin-bottom: 0.9375em; }\r\n                .Panel_UserUI_ResetPassword .Label1 { font-size: .8em; line-height: 2em; color: #a1a1a1; }\r\n                .Panel_UserUI_ResetPassword .Label1 span { color: #1161ca; }\r\n                .Panel_UserUI_ResetPassword input  { font-size: .9em; width: 13.944444em; border: 1px solid #3d7bcc; background: #fff; color: #3d7bcc; \r\n                                                     margin-bottom: 1.5em; line-height: 1.5em; padding: .25em; }\r\n                .Panel_UserUI_ResetPassword .BttnsTable1 { width: 100%; }\r\n                .Panel_UserUI_ResetPassword .BttnsTable1 td { width: 50%; font-size: .8em; text-align:center; line-height: 2.265625em; color: #fff; cursor:pointer; }\r\n                .Panel_UserUI_ResetPassword .BttnsTable1 .Td1 { background: #14498f; }\r\n                .Panel_UserUI_ResetPassword .BttnsTable1 .Td2 { background: #3d7bcc; border-left: 1px solid #fff; }\r\n                .Panel_UserUI_ResetPassword .BttnsTable1 td:hover { background: #6a6e73; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head1\'>Reset Password</div>\r\n                <div class=\'Label1\'>UserId : <span ModelKey=\'UserId\'></span></div>\r\n                <div class=\'Label1\'>Username : <span ModelKey=\'Username\'></span></div>\r\n                <br />\r\n                <div class=\'Label1\'>New Password</div>\r\n                <input type=\'password\' class=\'P1\' />\r\n                <div class=\'Label1\'>Repeat New Password</div>\r\n                <input type=\'password\' class=\'P2\' />\r\n                <table class=\'BttnsTable1\'>\r\n                    <tr>\r\n                        <td class=\'Td1\' On_Click=\'Save_Click\'>Save</td>\r\n                        <td class=\'Td2\' On_Click=\'Close\'>Cancel</td>\r\n                    </tr>\r\n                </table>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI_ResetPassword, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.DataObjects) == "undefined")
    ASPdatabaseNET.DataObjects = {};
if (typeof(ASPdatabaseNET.DataObjects.CustomizeView) == "undefined")
    ASPdatabaseNET.DataObjects.CustomizeView = {};
ASPdatabaseNET.DataObjects.CustomizeView.CustomizeView_ViewModel = function (){
    this.Mode = 0;
};
if (typeof(ASPdatabaseNET.DataObjects.DatabaseConnections) == "undefined")
    ASPdatabaseNET.DataObjects.DatabaseConnections = {};
ASPdatabaseNET.DataObjects.DatabaseConnections.DatabaseConnectionResponse = function (){
    this.ResponseType = 0;
    this.ActiveConnections = null;
    this.HiddenConnections = null;
    this.SingleConnectionInfo = null;
    this.SaveSuccess = false;
    this.SaveOnSuccess = false;
    this.TestConnection_Passed = false;
    this.TestConnection_Message = "";
    this.DeleteSuccess = false;
};
ASPdatabaseNET.DataObjects.DatabaseConnections.DatabaseShortInfo = function (){
    this.ConnectionId = 0;
    this.ConnectionName = null;
};
if (typeof(ASPdatabaseNET.DataObjects.ManageAssets) == "undefined")
    ASPdatabaseNET.DataObjects.ManageAssets = {};
ASPdatabaseNET.DataObjects.ManageAssets.BasicAssetInfo = function (){
    this.ConnectionId = -1;
    this.AssetType = 0;
    this.GenericId = -1;
    this.Schema = "";
    this.GenericName = "";
    this.Active = true;
    this.UseSquareBrackets_Schema = false;
    this.UseSquareBrackets_GenericName = false;
    ASPdatabaseNET.AjaxService.ASPdatabaseService.GetSetVal();
};
ASPdatabaseNET.DataObjects.ManageAssets.BasicAssetInfo = function (active, assetType){
    this.ConnectionId = -1;
    this.AssetType = 0;
    this.GenericId = -1;
    this.Schema = "";
    this.GenericName = "";
    this.Active = true;
    this.UseSquareBrackets_Schema = false;
    this.UseSquareBrackets_GenericName = false;
    ASPdatabaseNET.AjaxService.ASPdatabaseService.GetSetVal();
    this.Active = active;
    this.AssetType = assetType;
};
ASPdatabaseNET.DataObjects.ManageAssets.AssetsLists = function (){
    this.ConnectionId = 0;
    this.ConnectionName = null;
    this.Tables_Active = null;
    this.Tables_Hidden = null;
    this.AppViews_Active = null;
    this.AppViews_Hidden = null;
    this.SqlViews_Active = null;
    this.SqlViews_Hidden = null;
    this.Schemas = null;
};
ASPdatabaseNET.DataObjects.ManageAssets.ManageAssetResponse = function (){
    this.ResponseType = 0;
    this.AssetsListsInfo = null;
};
if (typeof(ASPdatabaseNET.DataObjects.Nav) == "undefined")
    ASPdatabaseNET.DataObjects.Nav = {};
ASPdatabaseNET.DataObjects.Nav.NavDatabaseInfo = function (){
    this.ConnectionId = 0;
    this.ConnectionName = null;
    this.Section_Tables = null;
    this.Section_Views = null;
    this.IsOpen = false;
};
ASPdatabaseNET.DataObjects.Nav.NavSectionInfo = function (){
    this.SectionType = 0;
    this.SectionName = null;
    this.Items = null;
    this.IsOpen = false;
};
ASPdatabaseNET.DataObjects.Nav.NavSectionItemInfo = function (){
    this.Id = 0;
    this.Schema = null;
    this.Name = null;
    this.URL = "#";
};
ASPdatabaseNET.DataObjects.Nav.NavSiteInfo = function (){
    this.Databases = null;
    this.IsInDemoMode = false;
};
if (typeof(ASPdatabaseNET.DataObjects.SQLObjects) == "undefined")
    ASPdatabaseNET.DataObjects.SQLObjects = {};
ASPdatabaseNET.DataObjects.SQLObjects.ASPdb_Connection = function (){
    this.ConnectionId = -1;
    this.SiteId = 1;
    this.ConnectionName = "";
    this.ConnectionType = "NotSet";
    this.ParametersType = "NotSet";
    this.Active = true;
    this.DateTimeCreated = null;
    this.CreatedByUserId = -1;
    this.Param_ServerAddress = "";
    this.Param_DatabaseName = "";
    this.Param_U = "";
    this.Param_P = "";
    this.Param_ConnectionString = "";
    this.DateTimeCreated_String = "";
    this.CreatedByUsername = "";
    this.TableCount = null;
};
ASPdatabaseNET.DataObjects.SQLObjects.ASPdb_Connection.prototype.GetDuplicate = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.GetSetVal();
    return (function (){
        var $v1 = new ASPdatabaseNET.DataObjects.SQLObjects.ASPdb_Connection();
        $v1.ConnectionId = this.ConnectionId;
        $v1.SiteId = this.SiteId;
        $v1.ConnectionName = this.ConnectionName;
        $v1.ConnectionType = this.ConnectionType;
        $v1.ParametersType = this.ParametersType;
        $v1.Active = this.Active;
        $v1.DateTimeCreated = this.DateTimeCreated;
        $v1.DateTimeCreated_String = this.DateTimeCreated_String;
        $v1.CreatedByUserId = this.CreatedByUserId;
        $v1.CreatedByUsername = this.CreatedByUsername;
        $v1.Param_ServerAddress = this.Param_ServerAddress;
        $v1.Param_DatabaseName = this.Param_DatabaseName;
        $v1.Param_U = this.Param_U;
        $v1.Param_P = this.Param_P;
        $v1.Param_ConnectionString = this.Param_ConnectionString;
        $v1.TableCount = this.TableCount;
        return $v1;
    }).call(this);
};
if (typeof(ASPdatabaseNET.DataObjects.TableDesign) == "undefined")
    ASPdatabaseNET.DataObjects.TableDesign = {};
ASPdatabaseNET.DataObjects.TableDesign.TableDesignResponse = function (){
    this.ResponseType = 0;
    this.ConnectionId = 0;
    this.ConnectionName = null;
    this.Schema = null;
    this.TableId = 0;
    this.TableName = null;
    this.Schemas = null;
    this.AllTables_InDb = null;
    this.TableStructure = null;
};
ASPdatabaseNET.DataObjects.TableDesign.TableInfo_Brief = function (){
    this.ConnectiondId = 0;
    this.TableId = 0;
    this.Schema = null;
    this.TableName = null;
};
if (typeof(ASPdatabaseNET.UI.TableGrid) == "undefined")
    ASPdatabaseNET.UI.TableGrid = {};
ASPdatabaseNET.UI.TableGrid.ImportExportUI = function (){
    this.UploadExcel = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(new ASPdatabaseNET.UI.TableGrid.Objs.ImportExportViewModel());
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ImportExportUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.UploadExcel = new ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel();
    this.UploadExcel.set_ViewModel(this.get_ViewModel());
    this.UploadExcel.Instantiate();
    this.UploadExcel.Close();
    this.UploadExcel.OnClose.After.AddHandler(this, "UploadExcel_Close", 0);
    this.jF(".Holder_UploadExcel").append(this.UploadExcel.jRoot);
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.Open_Sub = function (){
    if (this.UploadExcel.IsOpen)
        this.UploadExcel.Close();
    var shiftRight = $(".Bttn_ViewOptions").outerWidth();
    this.jF(".Div_PA")[0].style.right = shiftRight + "px";
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.CloseClick1 = function (){
    if (!this.UploadExcel.IsOpen)
        this.Close();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.CloseClick2 = function (){
    if (this.UploadExcel.IsOpen)
        this.UploadExcel.Close();
    else
        this.Close();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.UploadExcel_Click = function (){
    this.jF(".MainBttns").hide();
    this.UploadExcel.Open();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.UploadExcel_Close = function (){
    this.jF(".MainBttns").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.DownloadExcel_Click = function (){
    var json = (new ASPdb.Ajax.AjaxHelper()).ToJson(this.get_ViewModel().GridRequest);
    var requestString = "";
    eval("requestString = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(json));");
    requestString = encodeURI(requestString);
    var randomString = ASPdb.Security.AESLogic.RandomBase64(30, 99);
    eval("randomString = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(randomString));");
    randomString = encodeURI(randomString);
    var url = "ASPdatabase.NET.aspx?Download=Excel&Key=" + requestString + "&Tag=" + randomString;
    window.location = url;
    this.Close();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.GetCssTree();
    rtn += ASPdatabaseNET.UI.TableGrid.ImportExportUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.GetCssRoot = function (){
    return "\r\n                .ImportExportUI {  }\r\n                .ImportExportUI .Div_BG { background: #464f5b; opacity: 0.65; position:fixed; width: 100%; height: 8000px; top: 0px; left: 0px; }\r\n\r\n                .ImportExportUI .Div_PR { position:relative; }\r\n                .ImportExportUI .Div_PR .Div_PA { position:absolute; top: 1px; right: 0px; background: #fff; color: #093a79; \r\n                                                  width_next: 30em; width: 18em; min-height: 8.4em; box-shadow: 0.125em 0.125em .2em #333; padding: .5em 1.2em; }\r\n\r\n                .ImportExportUI .Div_PR .Div_PA .Head { float:left; font-size: .9em; padding: .2em .4em; }\r\n                .ImportExportUI .Div_PR .Div_PA .CloseBttn { float:right; font-size: .9em; cursor:pointer; padding: .2em .4em; }\r\n                .ImportExportUI .Div_PR .Div_PA .CloseBttn:hover { background: #093a79; color: #fff; }\r\n\r\n                .ImportExportUI .Div_PR .Div_PA .Spacer1 { height: 2.5em; }\r\n\r\n\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_UploadExcel { float:left; position:relative; line-height: 2.1875em; background: #2d925c; color: #fff; \r\n                                                                    width: 14em; text-align: center; cursor:pointer; }\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_UploadExcel .Icon { position:absolute; height: 2.1875em; width: 2.5625em; background: #257e50;\r\n                                                                          background: url(\'ASPdatabase.NET.aspx?IMG=Sprite1\'); }\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_UploadExcel span { font-size: .9em; padding-left: 1.42em; }\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_UploadExcel:hover { background: #c8ecda; color: #135533; }\r\n\r\n\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_DownloadExcel { float:right; position:relative; line-height: 2.1875em; background: #6247a0; color: #fff; \r\n                                                                    width: 14em; text-align: center; cursor:pointer; }\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_DownloadExcel .Icon { position:absolute; height: 2.1875em; width: 2.5625em;\r\n                                                                          background: url(\'ASPdatabase.NET.aspx?IMG=Sprite1\') no-repeat 0px -35px; }\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_DownloadExcel span { font-size: .9em; padding-left: 1.42em; }\r\n                .ImportExportUI .Div_PR .Div_PA .Bttn_DownloadExcel:hover { background: #ede5fa; color: #352065; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Div_BG NoSelect\' On_Click=\'CloseClick1\'>&nbsp;</div>\r\n                <div class=\'Div_PR\'>\r\n                    <div class=\'Div_PA\'>\r\n                        <div class=\'Head\'>Export</div>\r\n                        <div class=\'CloseBttn\' On_Click=\'CloseClick2\'>Close</div>\r\n                        <div class=\'clear\'></div>\r\n                        <div class=\'Spacer1\'></div>\r\n\r\n                        <div class=\'MainBttns\'>\r\n                            <div class=\'Bttn_UploadExcel hide\' On_Click=\'UploadExcel_Click\'>\r\n                                <div class=\'Icon\'></div>\r\n                                <span>Upload Excel</span>\r\n                            </div>\r\n                            <div class=\'Bttn_DownloadExcel\' On_Click=\'DownloadExcel_Click\'>\r\n                                <div class=\'Icon\'></div>\r\n                                <span>Download Excel</span>\r\n                            </div>\r\n                            <div class=\'clear\'></div>\r\n                        </div>\r\n\r\n                        <div class=\'Holder_UploadExcel\'></div>\r\n\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.ImportExportUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ImportExportUI_UploadExcel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var thisObj = this;
    var jObj = this.jRoot;
    var dragFileHolder = this.jF(".DragFileHolder");
    eval("dragFileHolder[0].ondragover = function() { thisObj.DragFileHolder_ondragover(this); return false; };");
    eval("dragFileHolder[0].ondragleave = function() { thisObj.DragFileHolder_ondragend(this); return false; };");
    eval("dragFileHolder[0].ondragend = function() { thisObj.DragFileHolder_ondragend(this); return false; };");
    eval("dragFileHolder[0].ondrop = function (e) { e.preventDefault && e.preventDefault(); thisObj.DragFileHolder_ondrop(event); return false; };");
    eval("jObj.find(\'.FileInput\').change(function(){ thisObj.FileInput_Change(); });");
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Open_Sub = function (){
    if (this.get_ViewModel().IsInDemoMode){
        this.jF(".Screen").hide();
        this.jF(".Screen0").show();
        return;
    }
    this.set_Model(null);
    this.jF(".DropText").html(this.jF(".DropText").attr("HtmlText"));
    this.jF(".ProgressControl").hide();
    this.jF(".Screen").hide();
    this.jF(".Screen1").show();
    this.jF(".Bttn1").hide();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Guid_Return").Guid__GetNewGuidString();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Guid_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.get_ViewModel().GuidKey = ajaxResponse.ReturnObj;
    this.jF(".Bttn1").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Next1_Click = function (){
    this.jF(".Screen").hide();
    this.jF(".Screen2").show();
    this.jF(".ProgressControl").hide();
    this.jF(".SendingFile").hide();
    this.jF(".TwoOptionTable").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.DragFileHolder_ondragover = function (elementObj){
    this.jF(".DragFileHolder").addClass("DragFileHolder_Hover");
    this.jF(".DropText").html("&nbsp;");
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.DragFileHolder_ondragend = function (elementObj){
    this.jF(".DropText").html(this.jF(".DropText").attr("HtmlText"));
    this.jF(".DragFileHolder").removeClass("DragFileHolder_Hover");
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.DragFileHolder_ondrop = function (evt){
    this.jF(".DragFileHolder").removeClass("DragFileHolder_Hover");
    var file = null;
    eval("\r\n                if(evt.dataTransfer.files != null && evt.dataTransfer.files.length > 0)\r\n                    file = evt.dataTransfer.files[0];\r\n                ");
    this.SendFileData(file, this.get_ViewModel().GuidKey);
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.FileInput_Change = function (){
    var file = this.jF(".FileInput")[0].files[0];
    this.SendFileData(file, this.get_ViewModel().GuidKey);
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.SendFileData = function (file, guidKey){
    if (file == null){
        alert("File was not attached.");
        return;
    }
    var arr = file.name.split(".");
    var ext = arr[arr.length - 1].toLowerCase().trim();
    if (ext != "xlsx"){
        alert("Please attach an Excel file in the .xlsx format.");
        return;
    }
    var progress = this.jF(".ProgressControl");
    var thisObj = this;
    eval("\r\n            var formData = new FormData();\r\n            formData.append(\'file\', file);\r\n\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\'POST\', \'ASPdatabase.NET.aspx?Upload=Excel&Key=" + guidKey + "&TableId=" + this.get_ViewModel().GridRequest.Id + "\');\r\n\r\n            progress[0].value = 0;\r\n            progress.show();\r\n            xhr.upload.onprogress = function (event) \r\n            {\r\n                if (event.lengthComputable) \r\n                {\r\n                    var complete = (event.loaded / event.total * 100 | 0);\r\n                    progress[0].value = progress.innerHTML = complete;\r\n                }\r\n            };\r\n            xhr.onload = function () \r\n            {\r\n                progress[0].value = progress.innerHTML = 100;\r\n                if(xhr.status == 200)\r\n                    thisObj.UploadComplete();\r\n                else\r\n                    alert(\'An error occurred during upload. \\nxhr.status: \' + xhr.status);\r\n            };\r\n            xhr.send(formData);\r\n            ");
    this.jF(".TwoOptionTable").hide();
    this.jF(".SendingFile").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.UploadComplete = function (){
    this.jF(".Screen").hide();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetUploadedExcelInfo_Return").ImportExport__GetUploadedExcelInfo(this.get_ViewModel().GuidKey);
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.GetUploadedExcelInfo_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    if (this.get_Model().Worksheets.length < 1){
        alert("No worksheets were found in this Excel file");
        this.Close();
    }
    else if (this.get_Model().Worksheets.length > 1){
        this.Populate_Screen_SelectWorksheet();
        this.jF(".Screen_SelectWorksheet").show();
        this.jF(".Bttn_Prev3").show();
    }
    else {
        this.Populate_Screen_SelectKeys();
        this.jF(".Bttn_Prev3").hide();
        this.jF(".Screen_SelectKeys").show();
        this.get_ViewModel().SelectedWorksheet = this.get_Model().Worksheets[0];
    }
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Next2_Click = function (){
    this.Populate_Screen_SelectKeys();
    this.jF(".Screen").hide();
    this.jF(".Screen_SelectKeys").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Prev3_Click = function (){
    this.jF(".Screen").hide();
    this.jF(".Screen_SelectWorksheet").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Next3_Click = function (){
    this.jF(".Screen").hide();
    this.jF(".Screen_Mappings").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Prev4_Click = function (){
    this.jF(".Screen").hide();
    this.jF(".Screen_SelectKeys").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Next4_Click = function (){
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Populate_Screen_SelectWorksheet = function (){
    this.jF(".Bttn_Next2").hide();
    var div = this.jF(".WorksheetListDiv").html("");
    for (var i = 0; i < this.get_Model().Worksheets.length; i++){
        var item = this.get_Model().Worksheets[i];
        div.append(ASPdb.FrameworkUI.st.New("<div class=\'WorksheetItem\' Index=\'{0}\'>{1}</div>").Format2(i, item.WorksheetName).TheString);
    }
    var thisObj = this;
    eval("div.find(\'.WorksheetItem\').click(function(){ thisObj.WorksheetItem_Click(this); });");
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.WorksheetItem_Click = function (element){
    var worksheetItem = $(element);
    var index = worksheetItem.attr("Index");
    this.get_ViewModel().SelectedWorksheet = this.get_Model().Worksheets[index];
    this.jF(".WorksheetItem").removeClass("WorksheetItem_On");
    worksheetItem.addClass("WorksheetItem_On");
    this.jF(".Bttn_Next2").show();
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Populate_Screen_SelectKeys = function (){
    var div = this.jF(".SelectKeysList").html("");
    for (var i = 0; i < this.get_Model().TableColumns.length; i++){
        var item = this.get_Model().TableColumns[i];
        var onClass = "";
        if (item.IsSelectedAsUniqueKey)
            onClass = "KeyItem_On";
        div.append(ASPdb.FrameworkUI.st.New("<div class=\'KeyItem {0}\' Index=\'{1}\'>{2}</div>").Format3(onClass, i, item.ColumnName).TheString);
    }
    var thisObj = this;
    eval("div.find(\'.KeyItem\').click(function(){ thisObj.KeyItem_Click(this); });");
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.KeyItem_Click = function (element){
    var keyItem = $(element);
    var index = keyItem.attr("Index");
    var column = this.get_Model().TableColumns[index];
    column.IsSelectedAsUniqueKey = !column.IsSelectedAsUniqueKey;
    if (column.IsSelectedAsUniqueKey){
        keyItem.addClass("KeyItem_On");
    }
    else {
        keyItem.removeClass("KeyItem_On");
    }
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.Populate_Screen_Mappings = function (){
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.GetCssRoot = function (){
    return "\r\n                .ImportExportUI_UploadExcel { }\r\n\r\n\r\n                .ImportExportUI_UploadExcel .Label_UploadExcel { position:relative; line-height: 2.1875em; background: #2d925c; color: #fff; \r\n                                                                 text-align: center; cursor:default; }\r\n                .ImportExportUI_UploadExcel .Label_UploadExcel .Icon { position:absolute; height: 2.1875em; width: 2.5625em; background: #257e50;\r\n                                                                       background: url(\'ASPdatabase.NET.aspx?IMG=Sprite1\'); }\r\n                .ImportExportUI_UploadExcel .Label_UploadExcel span { font-size: .9em; padding-left: 1.42em; }\r\n\r\n                .ImportExportUI_UploadExcel .Bttn { cursor:pointer; background: #777; color: #fff; padding: 0em 1.5em; line-height: 2.1875em; }\r\n                .ImportExportUI_UploadExcel .Bttn:hover { background: #444; }\r\n                .ImportExportUI_UploadExcel .Bttn_Left { float:left; }\r\n                .ImportExportUI_UploadExcel .Bttn_Right { float:right; }\r\n\r\n                .ImportExportUI_UploadExcel .Screen { display:none; font-size: .8em; padding: 1em 0em; }\r\n                .ImportExportUI_UploadExcel .Screen1 { }\r\n                .ImportExportUI_UploadExcel .Screen2 { }\r\n\r\n\r\n\r\n                .ImportExportUI_UploadExcel .Screen2 { }\r\n                .ImportExportUI_UploadExcel .Screen2 table { width: 100%; height: 12em; }\r\n                .ImportExportUI_UploadExcel .Screen2 table td { }\r\n                .ImportExportUI_UploadExcel .Screen2 table .Td1 { width: 44%; }\r\n                .ImportExportUI_UploadExcel .Screen2 table .Td2 { width: 3%; font-size: 1px; }\r\n                .ImportExportUI_UploadExcel .Screen2 table .Td3 { width: 6%; text-align:center; vertical-align:middle; background: #b3e6cb; }\r\n                .ImportExportUI_UploadExcel .Screen2 table .Td4 { width: 3%; font-size: 1px; }\r\n                .ImportExportUI_UploadExcel .Screen2 table .Td5 { width: 44%; text-align:center; vertical-align:middle; background: #f3f3f3; }\r\n                .ImportExportUI_UploadExcel .Screen2 .DragFileHolder { border: .5em dashed #ccc; text-align:center; line-height: 12em; }\r\n                .ImportExportUI_UploadExcel .Screen2 .DragFileHolder .DropText { }\r\n                .ImportExportUI_UploadExcel .Screen2 .DragFileHolder_Hover { border-color: #3f6852; background: #eee; background: url(\'ASPdatabase.NET.aspx?IMG=Sprite1\') -45px -117px; }\r\n                .ImportExportUI_UploadExcel .Screen2 .FileInput { width: 200px; }\r\n                .ImportExportUI_UploadExcel .Screen2 progress { margin-top: 3em; margin-bottom: 3em; width: 100%; }\r\n\r\n                .ImportExportUI_UploadExcel .WorksheetListDiv { max-height: 15em; overflow-y: auto; }\r\n                .ImportExportUI_UploadExcel .WorksheetListDiv .WorksheetItem { background: #f4f4f4; border-bottom: .15em solid #fff; cursor:pointer; padding: .3em 1em; }\r\n                .ImportExportUI_UploadExcel .WorksheetListDiv .WorksheetItem:hover { background: #ddd; color: #000; }\r\n                .ImportExportUI_UploadExcel .WorksheetListDiv .WorksheetItem_On { background: #228fe1; color: #fff; }\r\n\r\n                .ImportExportUI_UploadExcel .SelectKeysList { max-height: 15em; overflow-y: auto; }\r\n                .ImportExportUI_UploadExcel .SelectKeysList .KeyItem { background: #f4f4f4; border-bottom: .15em solid #fff; cursor:pointer; padding: .3em 1em; }\r\n                .ImportExportUI_UploadExcel .SelectKeysList .KeyItem:hover { background: #ddd; color: #000; }\r\n                .ImportExportUI_UploadExcel .SelectKeysList .KeyItem_On { background: #228fe1; color: #fff; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Label_UploadExcel\'>\r\n                    <div class=\'Icon\'></div>\r\n                    <span>Upload Excel</span>\r\n                </div>\r\n\r\n                <div class=\'Screen Screen0\'>\r\n                    <br />\r\n                    This feature is disabled in demo mode.\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'Screen Screen1\'>\r\n                    Please make sure Excel file is in .xlsx format.<br />\r\n                    Older .xls format is not supported.<br />\r\n                    <br />\r\n                    The top row of Excel file should have the field names header for matching to this table.<br />\r\n                    <br />\r\n                    You can set custom mappings in one of the following steps.\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'Bttn Bttn_Right Bttn1\' On_Click=\'Next1_Click\'>Next &gt;&gt;</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'Screen Screen2\'>\r\n                    After your file is uploaded we\'ll show you some options before saving the Excel data.\r\n                    <br />\r\n                    <br />\r\n                    <table class=\'TwoOptionTable\'>\r\n                        <tr>\r\n                            <td class=\'Td1\'>\r\n                                <div class=\'DragFileHolder\'>\r\n                                    <div class=\'DropText\' HtmlText=\'Drop .xlsx File Here\'>&nbsp;</div>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\'Td2\'>&nbsp;</td>\r\n                            <td class=\'Td3\'>or</td>\r\n                            <td class=\'Td4\'>&nbsp;</td>\r\n                            <td class=\'Td5\'>\r\n                                <form enctype=\'multipart/form-data\'>\r\n                                    <input name=\'file\' type=\'file\' class=\'FileInput\' />\r\n                                </form>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div class=\'SendingFile\'>\r\n                        <br />\r\n                        <br />\r\n                        Sending Excel File . . .\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n\r\n                    <progress class=\'ProgressControl\'></progress>\r\n                    <div class=\'DivA\'></div>\r\n                </div>\r\n\r\n                <div class=\'Screen Screen_SelectWorksheet\'>\r\n                    Select Excel Worksheet\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'WorksheetListDiv\'></div>\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'Bttn Bttn_Next2 Bttn_Right\' On_Click=\'Next2_Click\'>Next &gt;&gt;</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'Screen Screen_SelectKeys\'>\r\n                    Select Unique Identifiers for Excel Import\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'SelectKeysList\'></div>\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'Bttn Bttn_Left Bttn_Prev3\' On_Click=\'Prev3_Click\'>&lt;&lt; Previous</div>\r\n                    <div class=\'Bttn Bttn_Right\' On_Click=\'Next3_Click\'>Next &gt;&gt;</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'Screen Screen_Mappings\'>\r\n                    Import Mappings\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'Bttn Bttn_Left\' On_Click=\'Prev4_Click\'>&lt;&lt; Previous</div>\r\n                    <div class=\'Bttn Bttn_Right\' On_Click=\'Next4_Click\'>Next &gt;&gt;</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'Screen Screen_Saving\'>\r\n                    \r\n                </div>\r\n                <div class=\'Screen Screen_Complete\'>\r\n                    \r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.ImportExportUI_UploadExcel, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.TableGrid.Objs) == "undefined")
    ASPdatabaseNET.UI.TableGrid.Objs = {};
ASPdatabaseNET.UI.TableGrid.Objs.FilterAndSort = function (){
    this.FilterFields = null;
    this.SortFields = null;
};
ASPdatabaseNET.UI.TableGrid.Objs.GridHeaderItem = function (){
    this.FieldName = null;
    this.IndexPosition = 0;
    this.DataType = 0;
    this.DataTypeName = "NotSet";
    this.IsPrimaryKey = false;
};
ASPdatabaseNET.UI.TableGrid.Objs.GridRequest = function (){
    this.TableType = 0;
    this.Id = -1;
    this.DisplayTopNRows = -1;
    this.FilterFields = null;
    this.SortFields = null;
};
ASPdatabaseNET.UI.TableGrid.Objs.GridResponse = function (){
    this.GridRequest = null;
    this.TableType = 0;
    this.ConnectionId = 0;
    this.Id = 0;
    this.Schema = null;
    this.TableName = null;
    this.TableName_FullNameLabel = null;
    this.TableName_FullSQLName = null;
    this.Count_DisplayItems = 0;
    this.Count_TotalItems = 0;
    this.PrimaryKeyNames = null;
    this.PriamryKeyIndexPositions = null;
    this.HeaderItems = null;
    this.Rows = null;
    this.UniqueKey_ForNewRecord = null;
    this.IsAdmin = false;
    this.PermissionValues = null;
    this.IsInDemoMode = false;
};
ASPdatabaseNET.UI.TableGrid.Objs.GridRow = function (){
    this.DisplayIndex = -1;
    this.UniqueKey = "";
    this.Values = null;
};
ASPdatabaseNET.UI.TableGrid.Objs.GridViewModel = function (){
    this.TableType = 0;
    this.Id = -1;
    this.DisplayTopNRows = 50;
    this.AllColumnNames = new Array(0);
    this.SelectionCount = 0;
    this.FilterAndSort = new ASPdatabaseNET.UI.TableGrid.Objs.FilterAndSort();
};
ASPdatabaseNET.UI.TableGrid.Objs.GridViewModel.prototype.get_LocalStorage_Key_ViewOptions = function (){
    return "ASPdatabaseNET.UI.TableGrid.ViewOptions__" + this.TableType + "_" + this.Id;
};
if (typeof(ASPdatabaseNET.DbInterfaces) == "undefined")
    ASPdatabaseNET.DbInterfaces = {};
if (typeof(ASPdatabaseNET.DbInterfaces.TableObjects) == "undefined")
    ASPdatabaseNET.DbInterfaces.TableObjects = {};
ASPdatabaseNET.DbInterfaces.TableObjects.Column = function (){
    this.ConnectionId = 0;
    this.Schema = null;
    this.TableName = null;
    this.OrdinalPosition = 0;
    this.ColumnName = "";
    this.ColumnName_Original = "";
    this.DataType = "";
    this.DataType_Name = "";
    this.MaxLength = 0;
    this.Precision = 0;
    this.Scale = 0;
    this.IsNumericType = false;
    this.AllowNulls = true;
    this.DefaultValue = null;
    this.IsPrimaryKey = false;
    this.IsIdentity = false;
    this.Identity = null;
    this.ChangeAction = 0;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Column.prototype.Populate__DataType_FullString = function (){
    this.IsNumericType_GetAndSet();
    var value = this.DataType_Name;
    if (value == null)
        value = "";
    switch (value.toLowerCase()){
        case "nvarchar":
            if (this.MaxLength == -1)
            value = System.String.Format$$String$$Object$Array("nvarchar(MAX)", new Array(0));
            else
            value = System.String.Format$$String$$Object("nvarchar({0})", this.MaxLength);
            break;
        case "decimal":
            value = System.String.Format$$String$$Object$$Object("decimal({0}, {1})", this.Precision, this.Scale);
            break;
        case "numeric":
            value = System.String.Format$$String$$Object$$Object("numeric({0}, {1})", this.Precision, this.Scale);
            break;
    }
    this.DataType = value;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Column.prototype.IsNumericType_GetAndSet = function (){
    this.IsNumericType = false;
    var value = this.DataType_Name_GetAndSet();
    if (value == null)
        value = "";
    var numericTypes = ["bigint", "binary", "bit", "decimal", "float", "int", "money", "numeric", "real", "smallint", "smallmoney", "tinyint"];
    if (System.Linq.Enumerable.Contains$1$$IEnumerable$1$$TSource(System.String.ctor, numericTypes, value.toLowerCase().trim()))
        this.IsNumericType = true;
    return this.IsNumericType;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Column.prototype.DataType_Name_GetAndSet = function (){
    if (System.String.IsNullOrEmpty(this.DataType_Name)){
        this.DataType_Name = System.Linq.Enumerable.First$1$$IEnumerable$1(System.String.ctor, this.DataType.Split$$Char$Array("(")).trim();
    }
    return this.DataType_Name;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Column.Clone = function (column){
    var rtn = new ASPdatabaseNET.DbInterfaces.TableObjects.Column();
    rtn.ConnectionId = column.ConnectionId;
    rtn.Schema = column.Schema;
    rtn.TableName = column.TableName;
    rtn.OrdinalPosition = column.OrdinalPosition;
    rtn.ColumnName = column.ColumnName;
    rtn.ColumnName_Original = column.ColumnName_Original;
    rtn.DataType = column.DataType;
    rtn.DataType_Name = column.DataType_Name;
    rtn.MaxLength = column.MaxLength;
    rtn.Precision = column.Precision;
    rtn.Scale = column.Scale;
    rtn.AllowNulls = column.AllowNulls;
    rtn.DefaultValue = column.DefaultValue;
    rtn.IsPrimaryKey = column.IsPrimaryKey;
    rtn.IsIdentity = column.IsIdentity;
    if (column.Identity != null)
        rtn.Identity = ASPdatabaseNET.DbInterfaces.TableObjects.Identity.Clone(column.Identity);
    rtn.ChangeAction = column.ChangeAction;
    return rtn;
};
ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKey = function (){
    this.ConnectionId = 0;
    this.RelationshipSide = 0;
    this.ConstraintName = null;
    this.ForeignKey_Schema = null;
    this.ForeignKey_TableName = null;
    this.PrimaryKey_Schema = null;
    this.PrimaryKey_TableName = null;
    this.Columns = null;
    this.DeleteRule = 0;
    this.UpdateRule = 0;
};
ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKeyColumn = function (){
    this.ForeignKey_ColumnName = "";
    this.PrimaryKey_ColumnName = "";
    this.OrdinalPosition = 0;
};
ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKeysPair = function (){
    this.InboundKeys = null;
    this.OutboundKeys = null;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Identity = function (){
    this.ConnectionId = 0;
    this.Schema = null;
    this.TableName = null;
    this.ColumnName = null;
    this.Seed = 0;
    this.Increment = 0;
    this.CurrentIdentity = 0;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Identity.Clone = function (identity){
    var rtn = new ASPdatabaseNET.DbInterfaces.TableObjects.Identity();
    rtn.ConnectionId = identity.ConnectionId;
    rtn.Schema = identity.Schema;
    rtn.TableName = identity.TableName;
    rtn.ColumnName = identity.ColumnName;
    rtn.Seed = identity.Seed;
    rtn.Increment = identity.Increment;
    rtn.CurrentIdentity = identity.CurrentIdentity;
    return rtn;
};
ASPdatabaseNET.DbInterfaces.TableObjects.Index = function (){
    this.ConnectionId = 0;
    this.Schema = null;
    this.TableName = null;
    this.IndexName = null;
    this.IsUnique = false;
    this.Columns = null;
};
ASPdatabaseNET.DbInterfaces.TableObjects.IndexColumn = function (){
    this.ColumnId = 0;
    this.ColumnName = null;
    this.SortDirection = 0;
};
ASPdatabaseNET.DbInterfaces.TableObjects.PrimaryKey = function (){
    this.ConnectionId = 0;
    this.TableId = 0;
    this.Schema = null;
    this.TableName = null;
    this.ConstraintName = null;
    this.Columns = null;
};
ASPdatabaseNET.DbInterfaces.TableObjects.PrimaryKeyColumn = function (){
    this.ColumnName = "";
    this.OrdinalPosition = -1;
    this.Identity = null;
};
ASPdatabaseNET.DbInterfaces.TableObjects.TableStructure = function (){
    this.ConnectionId = 0;
    this.ConnectionName = null;
    this.TableId = 0;
    this.Schema = null;
    this.TableName = null;
    this.StructureIsAView = false;
    this.Columns = null;
    this.PrimaryKey = null;
    this.ForeignKeys_FK = null;
    this.ForeignKeys_PK = null;
    this.Indexes = null;
};
ASPdatabaseNET.UI.GlobalParts.LeftNav = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'LeftNav jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var thisObj = this;
    var databaseBoxesHolder = this.jF(".DatabaseBoxesHolder");
    eval("databaseBoxesHolder.scroll(function(){ thisObj.Scroll(); });");
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetSiteNav_Return").Global__GetSiteNav(false);
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.GetSiteNav_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.Set_IsOpens_FromLocalStorage();
    if (this.get_Model().IsInDemoMode)
        $(".TopBarHolder .LogoLink").html("ASPdatabase.NET <span style=\'font-size: .6em;\'> ... (Click Here to Learn More)</span>");
    var holder = this.jF2(".DatabaseBoxesHolder");
    holder.html("");
    for (var i = 0; i < this.get_Model().Databases.length; i++){
        var databaseBox = new ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox();
        databaseBox.set_Model(this.get_Model().Databases[i]);
        databaseBox.Instantiate();
        databaseBox.OnChange.After.AddHandler(this, "DatabaseBox_OnChange", 0);
        holder.append(databaseBox.jRoot);
    }
    this.jRoot.show();
    this.CheckLocalStorage_Scroll();
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.Set_IsOpens_FromLocalStorage = function (){
    try{
        var json = localStorage.getItem("ASPdatabaseNET.UI.GlobalParts.LeftNav");
        var localSiteNav = (new ASPdb.Ajax.AjaxHelper()).FromJson(json);
        if (localSiteNav == null)
            return;
        var dict = new Array(0);
        for (var i = 0; i < localSiteNav.Databases.length; i++){
            var navDB = localSiteNav.Databases[i];
            var key = "C_" + navDB.ConnectionId;
            eval("dict[key] = navDB;");
        }
        for (var i = 0; i < this.get_Model().Databases.length; i++){
            var navDB1 = this.get_Model().Databases[i];
            var navDB2 = null;
            var key = "C_" + navDB1.ConnectionId;
            try{
                eval("navDB2 = dict[key];");
            }
            catch($$e4){
            }
            if (navDB2 != null){
                navDB1.IsOpen = navDB2.IsOpen;
                if (navDB1.Section_Tables != null && navDB2.Section_Tables != null)
                    navDB1.Section_Tables.IsOpen = navDB2.Section_Tables.IsOpen;
                if (navDB1.Section_Views != null && navDB2.Section_Views != null)
                    navDB1.Section_Views.IsOpen = navDB2.Section_Views.IsOpen;
            }
        }
    }
    catch($$e5){
    }
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.DatabaseBox_OnChange = function (){
    try{
        var json = (new ASPdb.Ajax.AjaxHelper()).ToJson(this.get_Model());
        localStorage.setItem("ASPdatabaseNET.UI.GlobalParts.LeftNav", json);
    }
    catch($$e6){
    }
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.Scroll = function (){
    var scrollTop = this.jF(".DatabaseBoxesHolder").scrollTop();
    try{
        localStorage.setItem("ASPdatabaseNET.UI.GlobalParts.LeftNav.ScrollTop", scrollTop);
    }
    catch($$e7){
    }
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.CheckLocalStorage_Scroll = function (){
    try{
        var scrollTop = localStorage.getItem("ASPdatabaseNET.UI.GlobalParts.LeftNav.ScrollTop");
        this.jF(".DatabaseBoxesHolder").scrollTop(scrollTop);
    }
    catch($$e8){
    }
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.DatabasesLabelBox_Click = function (){
    this.jRoot.hide();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetSiteNav_Return").Global__GetSiteNav(true);
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.LeftNav.GetCssRoot();
    rtn += ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.GetCssTree();
    rtn += ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.GetCssRoot = function (){
    return "\r\n            .LeftNav { background: #e4e4e4;  }\r\n            .LeftNav .DatabasesLabelBox { line-height: 2.8409em; padding-left: 1.25em; color: #000; font-size: 1.1em; color: #555; cursor:pointer; }\r\n            .LeftNav .DatabasesLabelBox:hover { background: #ccc; color: #000; }\r\n            ";
};
ASPdatabaseNET.UI.GlobalParts.LeftNav.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'DatabasesLabelBox\' On_Click=\'DatabasesLabelBox_Click\' title=\'Refresh Menu\'>\r\n                Connections\r\n            </div>\r\n            <div class=\'DatabaseBoxesHolder AutoResize\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.GlobalParts.LeftNav, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.GlobalParts.LeftNavParts) == "undefined")
    ASPdatabaseNET.UI.GlobalParts.LeftNavParts = {};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'DatabaseBox jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.get_Model().IsOpen)
        this.jF2(".DatabaseSubBox").show();
    var holder = this.jF2(".DatabaseSubBox");
    if (this.get_Model().Section_Tables != null){
        var section = new ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox();
        section.set_Model(this.get_Model().Section_Tables);
        section.Instantiate();
        section.OnChange.After.AddHandler(this, "SectionBox_OnChange", 0);
        holder.append(section.jRoot);
    }
    if (this.get_Model().Section_Views != null){
        var section = new ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox();
        section.set_Model(this.get_Model().Section_Views);
        section.Instantiate();
        section.OnChange.After.AddHandler(this, "SectionBox_OnChange", 0);
        holder.append(section.jRoot);
    }
    this.BindUI();
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.prototype.ConnectionNameBttn_Click = function (){
    if (this.get_Model().IsOpen)
        this.jF2(".DatabaseSubBox").hide();
    else
        this.jF2(".DatabaseSubBox").show();
    this.get_Model().IsOpen = !this.get_Model().IsOpen;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.prototype.SectionBox_OnChange = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.GetCssRoot = function (){
    return "\r\n            .DatabaseBox { font-size: .9em; }\r\n            .DatabaseBox .ConnectionNameBttn { background: #173a67; color: #fff; line-height: 2.222em; margin-bottom: 1px; padding-left: 1.52777em; border-top-left-radius:1.4em; }\r\n            .DatabaseBox .ConnectionNameBttn:hover { background: #000; cursor: pointer; }\r\n            .DatabaseBox .DatabaseSubBox { display: none; margin-left: 1.52777em; }\r\n            ";
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'ConnectionNameBttn\' On_Click=\'ConnectionNameBttn_Click\' ModelKey=\'ConnectionName\'></div>\r\n            <div class=\'DatabaseSubBox\'>\r\n            </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.GlobalParts.LeftNavParts.DatabaseBox, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'SectionBox jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.get_Model() != null && this.get_Model().IsOpen)
        this.jF2(".SectionLinks").show();
    var holder = this.jF2(".SectionLinks").html("");
    if (this.get_Model() != null && this.get_Model().Items != null){
        var previousSchema = "";
        var schemasCount = 0;
        for (var i = 0; i < this.get_Model().Items.length; i++)
            if (previousSchema != this.get_Model().Items[i].Schema){
                previousSchema = this.get_Model().Items[i].Schema;
                schemasCount++;
            }
        previousSchema = "";
        for (var i = 0; i < this.get_Model().Items.length; i++){
            var itemInfo = this.get_Model().Items[i];
            if (schemasCount > 1)if (previousSchema != itemInfo.Schema)
                holder.append("<div class=\'Schema\' title=\'Schema: [" + itemInfo.Schema + "]\'>" + itemInfo.Schema + "</div>");
            previousSchema = itemInfo.Schema;
            holder.append(ASPdb.FrameworkUI.JsStr.StrFormat2("<a href=\'{0}\'>{1}</a>", itemInfo.URL, itemInfo.Name));
        }
    }
    this.BindUI();
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.prototype.SectionNameBttn_Click = function (){
    if (this.get_Model().IsOpen)
        this.jF2(".SectionLinks").hide();
    else
        this.jF2(".SectionLinks").show();
    this.get_Model().IsOpen = !this.get_Model().IsOpen;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.GetCssRoot = function (){
    return "\r\n            .SectionBox { }\r\n            .SectionBox .SectionNameBttn { line-height: 1.52777em; padding-left: 0.83333em; background: #eb640a; color: #fff; margin-bottom: 1px; cursor: pointer; border-top-left-radius:.35em; }\r\n            .SectionBox .SectionNameBttn:hover { background: #111 }\r\n            .SectionBox .SectionLinks { display: none; font-size: 1em; border-left:1px solid #d9d9d9; }\r\n            .SectionBox .SectionLinks .Schema { border-bottom: 1px solid #c1c1c1; color: #aaa; line-height: 1.45833em; padding-left: 2px; }\r\n            .SectionBox .SectionLinks a { display: block; border-bottom: 1px solid #c1c1c1; color: blue; line-height: 1.45833em; padding-left: 2px; }\r\n            .SectionBox .SectionLinks a:hover { background: #fff; color: #000; }\r\n            ";
};
ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'SectionNameBttn\' On_Click=\'SectionNameBttn_Click\' ModelKey=\'SectionName\'></div>\r\n            <div class=\'SectionLinks\'>\r\n            </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.GlobalParts.LeftNavParts.SectionBox, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.GlobalParts.SettingsMenu = function (){
    this.MenuJustOpened = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'SettingsMenu jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.prototype.Open_Sub = function (){
    var userSession = ASPdatabaseNET.Users.UserSessionClient.Get();
    if (userSession.IsAdmin)
        this.jF(".AdminOnly").show();
    else
        this.jF(".AdminOnly").hide();
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.prototype.ShowHide_UserImpersonationLink = function (impersonation_IsAllowed, impersonation_IsOn){
    if (impersonation_IsAllowed){
        this.jF(".Link_UserImpersonation").show();
        if (impersonation_IsOn)
            this.jF(".Link_UserImpersonation").html("Turn Off User Impersonation").addClass("Link_UserImpersonation_On");
        else
            this.jF(".Link_UserImpersonation").html("Turn On User Impersonation").removeClass("Link_UserImpersonation_On");
    }
    else
        this.jF(".Link_UserImpersonation").hide();
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.prototype.Bttn_Settings_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.prototype.MenuLink_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.SettingsMenu.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.GetCssRoot = function (){
    return "\r\n                .SettingsMenu { display: none; position: absolute; top: 0px; right: 0px; }\r\n                .SettingsMenu .SettingsBttn { float:right; width: auto; padding: 4px 10px; line-height: 25px; font-size: .95em;\r\n                                              background: #fff; color: #14498f; box-shadow: 1px 1px 3px #000; cursor: pointer; }\r\n                .SettingsMenu .SettingsBttn:hover { background: #20579f; color: #fff; }\r\n                .SettingsMenu .ShadowHider { position: absolute; right:0px; top: 30px; height: 3px; width: 100%; background: #fff; z-index:4; }\r\n\r\n                .SettingsMenu .SettingsBox1 { position: absolute; right:0px; top: 33px; background: #fff; box-shadow: 1px 1px 3px #000; width: auto; }\r\n                .SettingsMenu .SettingsBox1 a { display:block; width: 240px; border: 0px solid #fff; margin: 0px; padding: 8px 15px; background: #ffffff; color: #333; }\r\n                .SettingsMenu .SettingsBox1 a:hover {                        border: 0px solid #fff; margin: 0px; padding: 8px 15px; background: #464f5b; color: #fff; }\r\n\r\n                .SettingsMenu .SettingsBox1 .Link_UserImpersonation { display:none; }\r\n                .SettingsMenu .SettingsBox1 .Link_UserImpersonation_On { background: #eee; }\r\n            ";
};
ASPdatabaseNET.UI.GlobalParts.SettingsMenu.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'SettingsBttn\' On_Click=\'Bttn_Settings_Click\'>Settings</div>\r\n                <div class=\'clear\'></div>\r\n                <div class=\'ShadowHider\'></div>\r\n                <div class=\'SettingsBox1\'>\r\n                    <a href=\'#00-Connections\'                On_Click=\'MenuLink_Click\' class=\'AdminOnly\' >Manage Connections</a>\r\n                    <a href=\'#00-Users\'                      On_Click=\'MenuLink_Click\' class=\'AdminOnly\' >Users & Permissions</a>\r\n                    <a href=\'ASPdatabase.NET.aspx?ToggleImpersonation\' On_Click=\'MenuLink_Click\' class=\'Link_UserImpersonation\'>Turn On User Impersonation</a>\r\n                    <a href=\'#00-Subscription\'               On_Click=\'MenuLink_Click\' class=\'AdminOnly\' >Product Subscription</a>\r\n                    <a href=\'#00-SendFeedback\'               On_Click=\'MenuLink_Click\'>Send Feedback</a>\r\n                    <a href=\'#00-About-ASPdatabase.NET\'      On_Click=\'MenuLink_Click\'>About ASPdatabase.NET</a>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.GlobalParts.SettingsMenu, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.GlobalParts.TopBar = function (){
    this.LogoBox = null;
    this.SettingsMenu = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TopBar jRoot NoSelect\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.LogoBox = new ASPdatabaseNET.UI.GlobalParts.LogoBox();
    this.LogoBox.Instantiate();
    this.jF(".Holder_LogoBox").append(this.LogoBox.jRoot);
    this.LogoBox.Open();
    this.SettingsMenu = new ASPdatabaseNET.UI.GlobalParts.SettingsMenu();
    this.jF2(".SettingsMenu_Holder").append(this.SettingsMenu.jRoot);
    var ajaxSender = ASPdb.Security.AjaxSender.GetObj();
    ajaxSender.OnReady.After.AddHandler(this, "AjaxSender_OnReady", 0);
    ajaxSender.Initialize();
    var thisObj = this;
    eval("$(document).click(function(){ thisObj.Document_Click(); });");
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.AjaxSender_OnReady = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetUserSession_Return").YesEncryption().Authentication__GetUserSession();
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.GetUserSession_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    var userSession = ajaxResponse.ReturnObj;
    ASPdatabaseNET.Users.UserSessionClient.Set(userSession);
    if (userSession == null || !userSession.IsLoggedIn)
        window.location = "ASPdatabase.NET.aspx?Logout";
    this.jF(".A_Username").html("(" + userSession.UserInfo.Username + ")").attr("title", "(" + userSession.UserInfo.Username + ")");
    this.SettingsMenu.ShowHide_UserImpersonationLink(userSession.Impersonation_IsAllowed, userSession.Impersonation_IsOn);
    if (userSession.Impersonation_IsAllowed && userSession.Impersonation_IsOn)
        this.Enable_Impersonation();
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.Enable_Impersonation = function (){
    this.jF(".SearchDiv").hide();
    this.jF(".ImpersonationDiv").show();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetImpersonationList_Return").YesEncryption().Authentication__GetImpersonationList();
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.GetImpersonationList_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    var usersList = ajaxResponse.ReturnObj;
    var userSession = ASPdatabaseNET.Users.UserSessionClient.Get();
    var select = this.jF(".Select_UserImpersonation");
    select.html("<option value=\'-1\'></option>");
    for (var i = 0; i < usersList.length; i++){
        var u = usersList[i];
        var name = "";
        if (u.LastName.length > 0 && u.FirstName.length > 0)
            name = u.LastName + ", " + u.FirstName;
        else
            name = u.LastName + " " + u.FirstName;
        var className = "";
        if (userSession.Impersonation_ActualUser.UserId == u.UserId)
            className = "Select_You";
        else if (!u.Active)
            className = "Select_Inactive";
        var inactiveLabel = "";
        if (!u.Active)
            inactiveLabel = "[Inactive]";
        select.append(ASPdb.FrameworkUI.JsStr.StrFormat5("<option value=\'{0}\' class=\'{1}\'>{2} ({3}) {4}</option>", u.UserId, className, name, u.Username, inactiveLabel));
    }
    select.val(userSession.UserInfo.UserId);
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.Document_Click = function (){
    if (this.SettingsMenu.IsOpen && !this.SettingsMenu.MenuJustOpened)
        this.SettingsMenu.Close();
    this.SettingsMenu.MenuJustOpened = false;
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.Bttn_Settings_Click = function (){
    this.SettingsMenu.Open();
    this.SettingsMenu.MenuJustOpened = true;
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.Select_UserImpersonation_Change = function (){
    var userId = this.jF(".Select_UserImpersonation").val();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "SetImpersonationUser_Return").Authentication__SetImpersonationUser(userId);
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.SetImpersonationUser_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    window.location = "ASPdatabase.NET.aspx";
};
ASPdatabaseNET.UI.GlobalParts.TopBar.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.TopBar.GetCssRoot();
    rtn += ASPdatabaseNET.UI.GlobalParts.SettingsMenu.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.GlobalParts.TopBar.GetCssRoot = function (){
    return "\r\n            .TopBar { height: 75px; line-height: 75px; background: #14498f; color: #fff; }\r\n            .TopBar .Holder_LogoBox { float:left; }\r\n\r\n            .TopBar .SearchDiv { float:left; }\r\n            .TopBar .SearchDiv .SearchBox { margin-left: 75px; width: 450px; border: 1px solid #6d8eba; background: #14498f; color: #6d8eba; padding: 3px 8px; }\r\n            \r\n            .TopBar .ImpersonationDiv { display:none; float:left; margin-left: 80px; font-size: .8em; }\r\n            .TopBar .ImpersonationDiv .Select_UserImpersonation { width: 250px; min-width: 250px; max-width: 250px; }\r\n            .TopBar .ImpersonationDiv .Select_UserImpersonation .Select_You { color: blue; }\r\n            .TopBar .ImpersonationDiv .Select_UserImpersonation .Select_Inactive { color: #bbb; }\r\n            \r\n            .TopBar .RightBttns { float: right; width: auto; margin-right: 25px; }\r\n            .TopBar .RightBttns a { float: left; color: #fff; display: block; margin-top: 21px; margin-left: 3px;\r\n                                    width: auto; padding: 4px 10px; line-height: 25px; font-size: .95em; background: #14498f; }\r\n            .TopBar .RightBttns a:hover { padding: 3px 9px; border: 1px solid #8fabd1; }\r\n            .TopBar .RightBttns .SettingsMenu_Holder { position: relative; z-index: 500; top: 21px; right: 75px; }\r\n            .TopBar .RightBttns .A_Username { max-width: 140px; overflow:hidden; white-space:nowrap; }\r\n\r\n            @media (max-width: 1180px) {\r\n                .TopBar .SearchDiv .SearchBox { margin-left: 40px; width: 350px; }\r\n            }\r\n            @media (max-width: 1050px) {\r\n                .TopBar .SearchDiv .SearchBox { margin-left: 30px; width: 280px; }\r\n            }\r\n            @media (max-width: 970px) {\r\n                .TopBar .SearchDiv .SearchBox { margin-left: 20px; width: 210px; font-size: .9em; }\r\n            }\r\n            @media (max-width: 890px) {\r\n                .TopBar { height: 50px; line-height: 50px; font-size: .85em; }\r\n                .TopBar .LogoText { }\r\n                .TopBar .LogoLink { margin-top: 6px; }\r\n                .TopBar .SearchDiv .SearchBox { display:none; }\r\n                .TopBar .RightBttns a { margin-top: 9px; }\r\n                .TopBar .RightBttns .SettingsMenu_Holder { top: 9px; right: 68px; }\r\n            }\r\n\r\n\r\n            @media (max-width: 1100px) {\r\n                .TopBar .ImpersonationDiv { display:none; float:left; margin-left: 40px; font-size: .8em; }\r\n                .TopBar .ImpersonationDiv .Select_UserImpersonation { width: 200px; min-width: 200px; max-width: 200px; }\r\n            }\r\n            @media (max-width: 1000px) {\r\n                .TopBar .ImpersonationDiv { display:none; float:left; margin-left: 20px; font-size: .8em; }\r\n                .TopBar .ImpersonationDiv .Select_UserImpersonation { width: 130px; min-width: 130px; max-width: 130px; }\r\n            }\r\n            @media (max-width: 890px) {\r\n                .TopBar .ImpersonationDiv { display:none; float:left; margin-left: 20px; font-size: .8em; }\r\n                .TopBar .Label_Impersonate { display:none; }\r\n                .TopBar .ImpersonationDiv .Select_UserImpersonation { width: 130px; min-width: 130px; max-width: 130px; }\r\n            }\r\n            ";
};
ASPdatabaseNET.UI.GlobalParts.TopBar.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'Holder_LogoBox\'></div>\r\n\r\n            <div class=\'SearchDiv\'>\r\n                <input type=\'text\' class=\'SearchBox\' value=\'\' placeholder=\'Google Web Search\' />\r\n            </div>            \r\n\r\n            <div class=\'ImpersonationDiv\'>\r\n                <span class=\'Label_Impersonate\'>Impersonate User</span>\r\n                <select class=\'Select_UserImpersonation\' On_Change=\'Select_UserImpersonation_Change\'>\r\n                    <option>Loading</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\'RightBttns\'>\r\n                <div class=\'SettingsMenu_Holder\'></div>\r\n                <a href=\'#00-Home\'>Home</a>  \r\n                <a href=\'#00-MyAccount\' class=\'A_Username\'>&nbsp;</a>\r\n                <a On_Click=\'Bttn_Settings_Click\'>Settings</a>\r\n                <a href=\'?Logout\'>Logout</a>\r\n            </div>\r\n            <div class=\'clear\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.GlobalParts.TopBar, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.ConnectionProperties) == "undefined")
    ASPdatabaseNET.UI.PageParts.ConnectionProperties = {};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns = function (){
    this.OnSave = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnDelete = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnRequestTest = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.IsNewConnection = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ConnectionPropertiesBttns jRoot NoSelect\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.Open_Sub = function (){
    this.jF2(".TestMenu").hide();
    this.jF2(".SaveMenu").hide();
    var deleteBttn = this.jF2(".DeleteBttn");
    if (this.IsNewConnection){
        deleteBttn.html("");
        deleteBttn.removeClass("Bttn");
        deleteBttn.addClass("Bttn_NoHover");
    }
    else {
        deleteBttn.html("Delete Connection");
        deleteBttn.removeClass("Bttn_NoHover");
        deleteBttn.addClass("Bttn");
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_TestConnection = function (){
    this.BttnClick_TestConnection2(false);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_TestConnection2 = function (saveOnSuccess){
    this.jF2(".TestMenu").show();
    this.jF2(".SaveMenu").hide();
    this.jF2(".BttnSave").hide();
    this.jF2(".TestResponse").html("Testing Connection ... Please Wait");
    this.OnRequestTest.After.Fire1(saveOnSuccess);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.Set_TestResponse = function (testConnection_Passed, testConnection_Message, saveOnSuccess){
    var html = "";
    if (testConnection_Passed){
        html += "<div class=\'Passed\'>Connection Success</div>";
        this.jF2(".BttnSave").show();
    }
    else {
        html += "<div class=\'Failed\'>Connection Did Not Work</div>";
        this.jF2(".BttnSave").hide();
    }
    html += "<div class=\'ScrollBox\'>" + testConnection_Message + "</div>";
    this.jF2(".TestResponse").html(html);
    if (testConnection_Passed && saveOnSuccess){
        alert("Connection successfully tested and will now be saved.");
        this.SaveMenuClick_SaveOnly();
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_Save = function (){
    this.jF2(".TestMenu").hide();
    this.jF2(".SaveMenu").show();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_Delete = function (){
    if (this.IsNewConnection)
        return;
    this.OnDelete.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_Cancel = function (){
    this.OnClose.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_Save2 = function (){
    this.SaveMenuClick_SaveOnly();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.BttnClick_Dismiss = function (){
    this.jF2(".TestMenu").hide();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.SaveMenuClick_TestAndSave = function (){
    this.BttnClick_TestConnection2(true);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.SaveMenuClick_SaveOnly = function (){
    this.BttnClick_Dismiss();
    this.OnSave.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.SaveMenuClick_Cancel = function (){
    this.jF2(".SaveMenu").hide();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.GetCssRoot = function (){
    return "\r\n                .ConnectionPropertiesBttns { }\r\n                .ConnectionPropertiesBttns .Bttn_NoHover { float: right; width: 7.08em; height: 4.166em; text-align: center; z-index: 3; position:relative;\r\n                                                           margin-left: 0.4166em; background: #e4e4e4; color: #fff; font-size: .75em; border-radius: 0.3333em; }\r\n                .ConnectionPropertiesBttns .Bttn { float: right; width: 7.08em; height: 4.166em; text-align: center; z-index: 3; position:relative; cursor: pointer;\r\n                                                   margin-left: 0.5555em; background: #14498f; color: #fff; font-size: .75em; border-radius: 0em; }\r\n                .ConnectionPropertiesBttns .Bttn_1Line { line-height: 3.75em; height: 3.75em; }\r\n                .ConnectionPropertiesBttns .Bttn_2Lines { padding-top: 0.625em; height: 3.125em; }\r\n                .ConnectionPropertiesBttns .Bttn:hover { background: #071f40; }\r\n\r\n                .ConnectionPropertiesBttns .TestBttn { z-index: 1; }\r\n                .ConnectionPropertiesBttns .SaveBttn { z-index: 1; }\r\n\r\n\r\n                .ConnectionPropertiesBttns .TestMenu { display:none; width: 7.08333em; font-size: .75em; position:absolute; top: 0px; right: 22.92em; z-index: 2; }\r\n                .ConnectionPropertiesBttns .TestMenu .LabelBttn1 { background: #235ca7; color: #678dc7; text-align: center; \r\n                                                                   padding-top: 0.8333em; height: 3.333em; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 { background: #235ca7; color: #fff; width: 25em; position:absolute; right: 0px; padding: 1.0833em 1.6666em; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestHead { display:none; letter-spacing: 0.0833333em; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestResponse { margin: 0.16666em 0em 2.5em; line-height: 1.5em; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestResponse .Passed { font-size: 1.5em; color: #57f25b; background: #4e7dbb; padding: 0.1111em 0.2777em 0.2222em; margin-bottom: 0.3333em; text-align: center; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestResponse .Failed { font-size: 1.5em; color: #c60606; background: #bed4f0; padding: 0.1666em 0.2777em 0.2222em; margin-bottom: 0.3333em; text-align: center; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestResponse .ScrollBox { overflow-y: auto; overflow-x: hidden; max-height: 27em; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestResponse .TableItem1 { font-size: .9em; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .TestResponse .TableItem1 span { color: #9cb8da; }\r\n\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .BttnSave { float: right; width: 12.5em; background: #1d5094; margin-right: 0.6666em;\r\n                                                                          line-height: 2.6666em; text-align: center; cursor: pointer; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .BttnSave:hover { background: #071f40; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .BttnDismiss { float: right; width: 7.5em; background: #1d5094;\r\n                                                                          line-height: 2.6666em; text-align: center; cursor: pointer; }\r\n                .ConnectionPropertiesBttns .TestMenu .Sub1 .BttnDismiss:hover { background: #071f40; }\r\n\r\n\r\n\r\n                .ConnectionPropertiesBttns .SaveMenu { display:none; width: 18.333em; font-size: .75em; position:absolute; top: 0px; right: 4em; z-index: 2; }\r\n                .ConnectionPropertiesBttns .SaveMenu .LabelBttn1 { background: #235ca7; color: #678dc7; text-align: center; \r\n                                                                     line-height: 4.1666em; width: 7.0833em; float: left; padding-bottom: 0.3333em; }\r\n                .ConnectionPropertiesBttns .SaveMenu .Sub1 { background: #235ca7; color: #fff; }\r\n                .ConnectionPropertiesBttns .SaveMenu .Sub1 .Bttn1 { line-height: 3.3333em; cursor: pointer; padding-left: 2.33333em; }\r\n                .ConnectionPropertiesBttns .SaveMenu .Sub1 .Bttn1:hover { background: #071f40; }\r\n                .ConnectionPropertiesBttns .SaveMenu .Sub1 .Bttn1 span { color: #7197cc; font-size: .8em; padding-left: 1.066em; }\r\n                .ConnectionPropertiesBttns .SaveMenu .Sub1 .Bttn1:hover span { color: #5477a9; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Bttn Bttn_1Line\'             On_Click=\'BttnClick_Cancel\'         >Cancel</div>\r\n                <div class=\'Bttn Bttn_2Lines DeleteBttn\' On_Click=\'BttnClick_Delete\'         >Delete Connection</div>\r\n                <div class=\'Bttn Bttn_1Line SaveBttn\'    On_Click=\'BttnClick_Save\'           >Save</div>\r\n                <div class=\'Bttn Bttn_2Lines TestBttn\'   On_Click=\'BttnClick_TestConnection\' >Test Connection</div>\r\n\r\n                <div class=\'TestMenu\'>\r\n                    <div class=\'LabelBttn1\'>Test Connection</div>\r\n                    <div class=\'Sub1\'>\r\n                        <div class=\'TestHead\'>Testing Connection</div>\r\n                        <div class=\'TestResponse YesSelect\'></div>\r\n                        <div class=\'BttnDismiss\' On_Click=\'BttnClick_Dismiss\'>Dismiss</div>\r\n                        <div class=\'BttnSave\'    On_Click=\'BttnClick_Save2\'>Save Connection</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\'SaveMenu\'>\r\n                    <div class=\'LabelBttn1\'>Save</div>\r\n                    <div class=\'clear\'>\r\n                    <div class=\'Sub1\'>\r\n                        <div class=\'Bttn1\' On_Click=\'SaveMenuClick_TestAndSave\' >Test & Save Connection</div>\r\n                        <div class=\'Bttn1\' On_Click=\'SaveMenuClick_SaveOnly\'    >Save Without Testing</div>\r\n                        <div class=\'Bttn1\' On_Click=\'SaveMenuClick_Cancel\'      >Cancel <span>(Closes Save Options)</span></div>\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI = function (){
    this.ConnectionId = -1;
    this.Temp_PasswordLength = 0;
    this.ConnectionPropertiesBttns = null;
    this.RadioMenu_ActiveStatus = null;
    this.RadioMenu_ConnectionTypes = null;
    this.RadioMenu_ParametersTypes = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.get_IsNewConnection = function (){
    return (this.ConnectionId < 0);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ConnectionPropertiesUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.ConnectionPropertiesBttns = new ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns();
    this.jF2(".Holder_TopBttnsBar").append(this.ConnectionPropertiesBttns.jRoot);
    this.ConnectionPropertiesBttns.OnRequestTest.After.AddHandler(this, "SubBttnClick_Test", 1);
    this.ConnectionPropertiesBttns.OnSave.After.AddHandler(this, "SubBttnClick_Save", 0);
    this.ConnectionPropertiesBttns.OnDelete.After.AddHandler(this, "SubBttnClick_Delete", 0);
    this.ConnectionPropertiesBttns.OnClose.After.AddHandler(this, "ExitPage", 0);
    this.RadioMenu_ActiveStatus = new ASPdb.FrameworkUI.Coms.RadioMenu("RadioMenu_ActiveStatus");
    this.jF2(".Holder_RadioMenu_ActiveStatus").append(this.RadioMenu_ActiveStatus.jRoot);
    this.RadioMenu_ActiveStatus.set_ViewModel(this.Get_RadioList_ActiveStatus());
    this.RadioMenu_ActiveStatus.Open();
    this.RadioMenu_ConnectionTypes = new ASPdb.FrameworkUI.Coms.RadioMenu("RadioMenu_ConnectionTypes");
    this.jF2(".Holder_RadioMenu_ConnectionTypes").append(this.RadioMenu_ConnectionTypes.jRoot);
    this.RadioMenu_ConnectionTypes.OnChange.After.AddHandler(this, "RadioMenu_ConnectionTypes_Change", 0);
    this.RadioMenu_ConnectionTypes.set_ViewModel(this.Get_RadioList_ConnectionTypes());
    this.RadioMenu_ConnectionTypes.Open();
    this.RadioMenu_ParametersTypes = new ASPdb.FrameworkUI.Coms.RadioMenu("RadioMenu_ParametersTypes");
    this.jF2(".Holder_RadioMenu_ParametersTypes").append(this.RadioMenu_ParametersTypes.jRoot);
    this.RadioMenu_ParametersTypes.OnChange.After.AddHandler(this, "RadioMenu_ParametersTypes_Change", 0);
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Get_RadioList_ActiveStatus = function (){
    var rtn = new ASPdb.FrameworkUI.MRB.GenericUIList();
    rtn.Add1("Active");
    rtn.Add1("Hidden");
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Get_RadioList_ConnectionTypes = function (){
    var rtn = new ASPdb.FrameworkUI.MRB.GenericUIList();
    rtn.Add2("SQLServer", "SQL Server");
    rtn.Add2("SQLServerAzure", "SQL Server Azure");
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Get_RadioList_ParametersTypes___SQLServer = function (){
    var rtn = new ASPdb.FrameworkUI.MRB.GenericUIList();
    rtn.Add2("WindowsIntegratedSecurity", "Connection with Windows Integrated Security (recommended)");
    rtn.Add2("SQLServerCredentials", "Connection with SQL Server Username & Password");
    rtn.Add2("ConnectionString", "Custom Connection String");
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Get_RadioList_ParametersTypes___SQLServerAzure = function (){
    var rtn = new ASPdb.FrameworkUI.MRB.GenericUIList();
    rtn.Add2("SQLServerCredentials", "Connection with SQL Server Username & Password");
    rtn.Add2("ConnectionString", "Custom Connection String");
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Get_RadioList_ParametersTypes___MySQL = function (){
    var rtn = new ASPdb.FrameworkUI.MRB.GenericUIList();
    rtn.Add2("???", "??? - Connection with Windows Integrated Security (recommended) - ???");
    rtn.Add2("MySQLCredentials", "Connection with MySQL Username & Password");
    rtn.Add2("ConnectionString", "Custom Connection String");
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Open_Sub = function (){
    try{
        this.ConnectionId = 1 * ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().PageParam2;
    }
    catch($$e9){
        this.ConnectionId = -1;
    }
    if (isNaN(this.ConnectionId))
        this.ConnectionId = -1;
    this.ConnectionPropertiesBttns.IsNewConnection = this.get_IsNewConnection();
    this.ConnectionPropertiesBttns.Open();
    this.jF2(".PleaseWait").hide();
    this.jF2(".HideInitially").hide();
    if (this.get_IsNewConnection()){
        this.set_Model(new ASPdatabaseNET.DataObjects.SQLObjects.ASPdb_Connection());
        this.Load_FromModel();
    }
    else {
        this.jF2(".PleaseWait").show();
        var thisObj = this;
        if (ASPdb.Security.AjaxSender.GetObj().IsReady)
            this.SendAjaxGet();
        else
            eval("setTimeout(function(){ thisObj.SendAjaxGet() }, 2500);");
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.SendAjaxGet = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Get_AjaxReturn").YesEncryption().DatabaseConnections__Get(this.ConnectionId);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Get_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj.SingleConnectionInfo);
    this.Load_FromModel();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Load_FromModel = function (){
    this.jF2(".PleaseWait").hide();
    this.jF2(".HideInitially").show();
    this.jF2(".Section_ConnectionMethod").hide();
    this.jF2(".Section_Properties").hide();
    this.BindUI();
    if (this.get_Model().Active)
        this.RadioMenu_ActiveStatus.set_Model("Active");
    else
        this.RadioMenu_ActiveStatus.set_Model("Hidden");
    this.RadioMenu_ConnectionTypes.set_Model(this.get_Model().ConnectionType);
    this.RadioMenu_ParametersTypes.set_Model(this.get_Model().ParametersType);
    this.RadioMenu_ConnectionTypes_Change();
    this.RadioMenu_ParametersTypes_Change();
    this.jF2(".Txt_ServerAddress").val(this.get_Model().Param_ServerAddress);
    this.jF2(".Txt_DatabaseName").val(this.get_Model().Param_DatabaseName);
    this.jF2(".Txt_Username").val(this.get_Model().Param_U);
    this.jF2(".Txt_Password").val(this.get_Model().Param_P);
    this.jF2(".Txt_ConnectionString").val(this.get_Model().Param_ConnectionString);
    this.Temp_PasswordLength = this.get_Model().Param_P.length;
    if (this.get_IsNewConnection() || !this.get_Model().Active){
        this.jF2(".InfoBox").hide();
        this.jF2(".Bttn_GoToAssetManager").hide();
    }
    else {
        this.jF2(".InfoBox").show();
        this.jF2(".Bttn_GoToAssetManager").show();
        this.jF2(".Bttn_GoToAssetManager").attr("href", "#00-ManageAssets-" + this.ConnectionId);
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Update_Model_FromUI = function (){
    this.get_Model().Active = (this.RadioMenu_ActiveStatus.get_Model() == "Active");
    this.get_Model().ConnectionName = this.jF2(".Txt_ConnectionName").val();
    this.get_Model().ConnectionType = this.RadioMenu_ConnectionTypes.get_Model();
    this.get_Model().ParametersType = this.RadioMenu_ParametersTypes.get_Model();
    this.get_Model().Param_ServerAddress = this.jF2(".Txt_ServerAddress").val();
    this.get_Model().Param_DatabaseName = this.jF2(".Txt_DatabaseName").val();
    this.get_Model().Param_U = this.jF2(".Txt_Username").val();
    this.get_Model().Param_P = this.jF2(".Txt_Password").val();
    this.get_Model().Param_ConnectionString = this.jF2(".Txt_ConnectionString").val();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.SubBttnClick_Test = function (saveOnSuccess){
    this.Update_Model_FromUI();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Test_AjaxReturn").YesEncryption().DatabaseConnections__Test(this.get_Model(), saveOnSuccess);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Test_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var obj = ajaxResponse.ReturnObj;
    this.ConnectionPropertiesBttns.Set_TestResponse(obj.TestConnection_Passed, obj.TestConnection_Message, obj.SaveOnSuccess);
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.SubBttnClick_Save = function (){
    var txt_ConnectionName = this.jF2(".Txt_ConnectionName");
    if (txt_ConnectionName.val().length < 1){
        alert("Please give this connection a name.");
        txt_ConnectionName.focus();
        return;
    }
    this.OnChange.Before.Fire();
    this.Update_Model_FromUI();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_AjaxReturn").YesEncryption().DatabaseConnections__Save(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Save_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnChange.After.Fire();
    this.ExitPage();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.SubBttnClick_Delete = function (){
    if (confirm("Are you sure you want to delete this connection?\n\nThere is no undo for this!")){
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Delete_AjaxReturn").YesEncryption().DatabaseConnections__Delete(this.ConnectionId);
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Delete_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.ExitPage();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.ExitPage = function (){
    if (ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().PageParam3 == "MA" && !this.get_IsNewConnection())
        window.location.href = "#00-ManageAssets-" + this.ConnectionId;
    else
        window.location.href = "#00-Connections";
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Txt_Password_OnFocus = function (){
    var txt_Password = this.jF2(".Txt_Password");
    var value = txt_Password.val();
    value = ASPdb.FrameworkUI.JsStr.Replace(value, "#", "");
    if (value.length < 1)
        txt_Password.val("");
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.Txt_Password_OnBlur = function (){
    var txt_Password = this.jF2(".Txt_Password");
    var value = txt_Password.val();
    value = ASPdb.FrameworkUI.JsStr.Replace(value, "#", "");
    if (value.length < 1){
        var s = "";
        for (var i = 0; i < this.Temp_PasswordLength; i++)
            s += "#";
        txt_Password.val(s);
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.RadioMenu_ConnectionTypes_Change = function (){
    var hideParameters = false;
    switch (this.RadioMenu_ConnectionTypes.get_Model()){
        case "SQLServer":
            this.RadioMenu_ParametersTypes.set_ViewModel(this.Get_RadioList_ParametersTypes___SQLServer());
            break;
        case "SQLServerAzure":
            this.RadioMenu_ParametersTypes.set_ViewModel(this.Get_RadioList_ParametersTypes___SQLServerAzure());
            break;
        case "MySQL":
            this.RadioMenu_ParametersTypes.set_ViewModel(this.Get_RadioList_ParametersTypes___MySQL());
            break;
        default:
            hideParameters = true;
            break;
    }
    this.jF2(".Section_Properties").hide();
    if (hideParameters){
        this.jF2(".Section_ConnectionMethod").hide();
    }
    else {
        this.jF2(".Section_ConnectionMethod").show();
        this.RadioMenu_ParametersTypes.Open();
        this.RadioMenu_ParametersTypes.set_Model(this.get_Model().ParametersType);
        this.RadioMenu_ParametersTypes_Change();
    }
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.RadioMenu_ParametersTypes_Change = function (){
    this.jF2(".Element_X").hide();
    this.jF2(".Section_Properties").show();
    if (this.RadioMenu_ParametersTypes.GetSelectedValue() == null)
        this.jF2(".Section_Properties").hide();
    var flags = new Int32Array([0, 0, 0, 0, 0]);
    switch (this.RadioMenu_ParametersTypes.get_Model()){
        case "WindowsIntegratedSecurity":
            flags = new Int32Array([1, 1, 0, 0, 0]);
            break;
        case "SQLServerCredentials":
            flags = new Int32Array([1, 1, 1, 1, 0]);
            break;
        case "ConnectionString":
            flags = new Int32Array([0, 0, 0, 0, 1]);
            break;
        case "MySQLCredentials":
            flags = new Int32Array([1, 1, 1, 1, 0]);
            break;
        default:
            this.jF2(".Section_Properties").hide();
            break;
    }
    if (flags[0] == 1)
        this.jF2(".Element_ServerAddress").show();
    if (flags[1] == 1)
        this.jF2(".Element_ConnectionName").show();
    if (flags[2] == 1)
        this.jF2(".Element_Username").show();
    if (flags[3] == 1)
        this.jF2(".Element_Password").show();
    if (flags[4] == 1)
        this.jF2(".Element_ConnectionString").show();
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesBttns.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.GetCssRoot = function (){
    return "\r\n                .ConnectionPropertiesUI { }\r\n                .ConnectionPropertiesUI .PleaseWait { margin: 1.5em 1em; }\r\n                .ConnectionPropertiesUI .Holder_TopBttnsBar { position: relative; top: -55px; right: 0px; width: 47.5em; }\r\n\r\n                .ConnectionPropertiesUI .LeftColumn { float: left; width: 32em; }\r\n                .ConnectionPropertiesUI .RightColumn { float: left; width: 10em; margin-left: .9em; }\r\n\r\n\r\n                .ConnectionPropertiesUI .LeftColumn .Label1 { color: #14498f; font-size: 1.15em; margin-bottom: .2em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Txt_ConnectionName { background: #becada; color: #173a67; line-height: 2em; height: 2em; font-size: 1.3em;\r\n                                                                          width: 22em; padding: 0em .8em; border: .125em solid #173a67; }\r\n                .ConnectionPropertiesUI .LeftColumn .Txt_ConnectionName:focus { background: #fff; }\r\n                .ConnectionPropertiesUI .LeftColumn .Label2 { color: #959595; font-size: .58em; margin-top: 2px; margin-right: 7em; text-align: right; }\r\n\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType { margin-top: 1.1875em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType .SectionHead1 { position: relative; top: 1px;\r\n                                                                                          background: #929292; color: #fff; line-height: 1.69117em; font-size: .85em;\r\n                                                                                          width: 13em; text-align: center; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType .SectionBody1 { border: 1px solid #d4d4d4; background: #ededed; padding: 0.5625em 0.2em 0.5625em 0.6875em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType .SectionBody1 .Left1 { float: left; width: 11em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType .SectionBody1 .Right1 { float: left; width: 26em; margin-left: 1.2em; padding: 0.35em 0.89em; color: #14498f; \r\n                                                                                                    font-size: .65em; cursor:pointer; line-height: 1.60714em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType .SectionBody1 .Right1:hover { background: #aaa; color: #fff; }\r\n\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionType .SectionBody1 .Left1 .Item { font-size: .8em; }\r\n\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionMethod { font-size: .9em; border: 1px solid #d4d4d4; background: #ededed; padding: 0.625em 0.76em; margin-top: 2em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionMethod .Label { color: #173a67; margin-bottom: 0.5555em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_ConnectionMethod .Item { font-size: .9em; }\r\n\r\n\r\n                .ConnectionPropertiesUI .LeftColumn .Section_Properties { font-size: .9em; border: 1px solid #d4d4d4; background: #ededed; padding: 1.04em 0.76em 0.347em 2.7em; margin: 2.08em 0em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_Properties .Label { color: #173a67; font-size: .9em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_Properties input { width: 30em; margin-bottom: 1.04166em; border: 1px solid #b7b7b7; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_Properties textarea { width: 30em; height: 4.75em; margin-bottom: 1.04166em; border: 1px solid #b7b7b7; }\r\n\r\n                .ConnectionPropertiesUI .LeftColumn .Section_Properties .Txt_Password { margin-bottom: 0.35em; }\r\n                .ConnectionPropertiesUI .LeftColumn .Section_Properties .SubLabel_Password { margin-bottom: 1.852em; font-size: .75em; }\r\n\r\n\r\n                .ConnectionPropertiesUI .RightColumn .Holder_RadioMenu_ActiveStatus { border: 1px solid #d4d4d4; background: #ededed; padding: .5em 0.6875em; margin-top: .25em; }\r\n\r\n                .ConnectionPropertiesUI .RightColumn .InfoBox { margin: 0.9375em 0em 0em 1.625em; }\r\n                .ConnectionPropertiesUI .RightColumn .InfoBox .Label { color: #929292; font-size: 0.64em; }\r\n                .ConnectionPropertiesUI .RightColumn .InfoBox .Data { color: #173a67; font-size: .8em; margin: 0em 0em 0.9375em 0.85em; }\r\n\r\n                .ConnectionPropertiesUI .RightColumn .Bttn_GoToAssetManager { display:block; border: 1px solid #d4d4d4; line-height: 1.875em; \r\n                                                                              text-align: center; color: #14498f; \r\n                                                                              font-size: .7em; cursor: pointer; }\r\n                .ConnectionPropertiesUI .RightColumn .Bttn_GoToAssetManager:hover { background: #d4d4d4; }\r\n\r\n\r\n\r\n                .ConnectionPropertiesUI .Coms_RadioMenu .Item { cursor:pointer; line-height: 1.44em; padding-left: .75em; font-size: .95em; border-radius: 0.19em; }\r\n                .ConnectionPropertiesUI .Coms_RadioMenu .Item:hover { background: #5f5f5f; color: #fff; }\r\n                .ConnectionPropertiesUI .Coms_RadioMenu .Item input { margin-right: 1px; cursor: pointer; }\r\n                .ConnectionPropertiesUI .Coms_RadioMenu .Selected { background: #d3d3d3; }\r\n\r\n\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>Modify Database Connection</div>\r\n                <div class=\'Main\'>\r\n                    <div class=\'PleaseWait\'>\r\n                        Loading ... Please Wait\r\n                    </div>\r\n                    <div class=\'Holder_TopBttnsBar HideInitially\'>\r\n                    </div>\r\n\r\n                    <div class=\'LeftColumn HideInitially\'>\r\n                        <div class=\'Label1\'>Database Connection Name</div>\r\n                        <input type=\'text\' class=\'Txt_ConnectionName\' ModelKey=\'ConnectionName\' />\r\n                        <div class=\'Label2\'>The name as vou would like it displayed in the ASPdatabase.NET application.</div>\r\n\r\n                        <div class=\'Section_ConnectionType\'>\r\n                            <div class=\'SectionHead1\'>Database Type</div>\r\n                            <div class=\'SectionBody1\'>\r\n                                <div class=\'Left1 Holder_RadioMenu_ConnectionTypes\'>\r\n                                </div>\r\n                                <a class=\'Right1\' href=\'#00-SendFeedback\'>\r\n                                    Would you like to connect to other types of databases? \r\n                                    If so CLICK HERE to send your feedback.\r\n                                </a>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\'Section_ConnectionMethod\'>\r\n                            <div class=\'Label\'>How would you like to connect to your database?</div>\r\n                            <div class=\'Holder_RadioMenu_ParametersTypes\'></div>\r\n                        </div>\r\n\r\n                        <div class=\'Section_Properties\'>\r\n                            <div class=\'Label Element_X Element_ServerAddress\'>\r\n                            Server Address</div>\r\n                            <input class=\'Element_X Element_ServerAddress Txt_ServerAddress\' type=\'text\' />\r\n\r\n                            <div class=\'Label Element_X Element_ConnectionName\'>\r\n                            Database Name</div>\r\n                            <input class=\'Element_X Element_ConnectionName Txt_DatabaseName\' type=\'text\' />\r\n\r\n                            <div class=\'Label Element_X Element_Username\'>\r\n                            Username</div>\r\n                            <input class=\'Element_X Element_Username Txt_Username\' type=\'text\' />\r\n\r\n                            <div class=\'Label Element_X Element_Password\'>\r\n                            Password</div>\r\n                            <input class=\'Element_X Element_Password Txt_Password\' type=\'password\' \r\n                                On_Focus=\'Txt_Password_OnFocus\' \r\n                                On_Blur=\'Txt_Password_OnBlur\' />\r\n                            <div class=\'Element_X Element_Password SubLabel_Password\'>\r\n                                Passwords are stored using machine-specific encryption.<br />\r\n                                If you move this application to a different web server you will need to reenter this password.\r\n                                Industry standards are used for encryption; however, ASPdatabase.NET is not responsible for any security breach on your system.\r\n                            </div>\r\n\r\n                            <div class=\'Label Element_X Element_ConnectionString\'>\r\n                            Connection String</div>\r\n                            <textarea class=\'Element_X Element_ConnectionString Txt_ConnectionString\'></textarea>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\'RightColumn HideInitially\'>\r\n                        <div class=\'Holder_RadioMenu_ActiveStatus\'>\r\n                        </div>\r\n                        <div class=\'InfoBox\'>\r\n                            <div class=\'Label\'>Connection Id</div>\r\n                            <div class=\'Data\' ModelKey=\'ConnectionId\'></div>\r\n\r\n                            <div class=\'Label\'>Date Created</div>\r\n                            <div class=\'Data\' ModelKey=\'DateTimeCreated_String\'></div>\r\n\r\n                            <div class=\'hide\'>\r\n                            <div class=\'Label\'>Created By</div>\r\n                            <div class=\'Data\' ModelKey=\'CreatedByUsername\'></div>\r\n\r\n                            <div class=\'Label\'>Table Count</div>\r\n                            <div class=\'Data\' ModelKey=\'TableCount\'></div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <a class=\'HideInitially Bttn_GoToAssetManager\'>Go to Asset Manager</a>\r\n                    </div>\r\n                    \r\n\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.EditViewSettings) == "undefined")
    ASPdatabaseNET.UI.PageParts.EditViewSettings = {};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow = function (){
    this.IsPK = false;
    this.OrdinalPosition = -1;
    this.DisplayOrder = -1;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'ViewSettings_ColumnRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    this.jF2(".td1").html(":: &nbsp; <span>" + this.DisplayOrder + "</span> &nbsp; ↑ &nbsp; ↓");
    if (this.IsPK)
        this.jF2(".PK").show();
    this.jF2(".td3").html(this.OrdinalPosition);
    if (this.OrdinalPosition == 2){
        this.jF2(".Txt_Sort").val("1");
        this.jF2(".SortArrow").html("↑");
        this.jF2(".SortArrow").addClass("SortArrow_On");
    }
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.prototype.TdClick_SetAltName = function (){
    this.jF2(".Txt_AltColumnName").show();
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.GetCssRoot = function (){
    return "\r\n                .ViewSettings_ColumnRow { line-height: 25px; }\r\n                .ViewSettings_ColumnRow td { border-bottom: 1px solid #d6d6d6; }\r\n                .ViewSettings_ColumnRow .td1 { }\r\n                .ViewSettings_ColumnRow .td2 { text-align: center; }\r\n                .ViewSettings_ColumnRow .td3 { text-align: center; }\r\n                .ViewSettings_ColumnRow .td4 { }\r\n                .ViewSettings_ColumnRow .td5 { text-align: center; font-size: .7em; line-height: 12px; color: #7996cf; cursor: pointer; }\r\n                .ViewSettings_ColumnRow .td6 { text-align: center; }\r\n                .ViewSettings_ColumnRow .td7 { text-align: left; padding-left: 21px; }\r\n                .ViewSettings_ColumnRow .td8 { }\r\n                .ViewSettings_ColumnRow .td9 { }\r\n\r\n                .ViewSettings_ColumnRow .td1 span { color: #bbb; }\r\n\r\n                .ViewSettings_ColumnRow .PK { display:none; width: 25px; border: 1px solid #7fa7dd; background: #d6e1f0;\r\n                                              line-height: 17px; margin: 3px 0px 0px 5px; font-size: .9em; }\r\n                .ViewSettings_ColumnRow .Txt_AltColumnName { display:none; width: 258px; border: 1px solid #555; }\r\n                .ViewSettings_ColumnRow .td5:hover { color: #3e5b92; background: #dbe3f3; }\r\n                .ViewSettings_ColumnRow .Checkbox_Hide { }\r\n                .ViewSettings_ColumnRow .Txt_Sort { width: 25px; border: 1px solid #85a3cb; line-height: 12px; height: 12px;\r\n                                                    margin-top: 3px; text-align: center; font-size: .85em; }\r\n                .ViewSettings_ColumnRow .SortArrow { padding: 0px 8px 2px; margin: 0px 7px; font-size: 1.2em; }\r\n                .ViewSettings_ColumnRow .SortArrow_On:hover { background: #666; color: #fff; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'td1\'>::</td>\r\n                <td class=\'td2\'>\r\n                    <div class=\'PK\'>PK</div>\r\n                </td>\r\n                <td class=\'td3\'></td>\r\n                <td class=\'td4\'>\r\n                    <div>Column Name 001</div>\r\n                    <input type=\'text\' class=\'Txt_AltColumnName\' />\r\n                </td>\r\n                <td class=\'td5\' On_Click=\'TdClick_SetAltName\'>Set Alt<br />Name</td>\r\n                <td class=\'td6\'><input type=\'checkbox\' class=\'Checkbox_Hide\' /></td>\r\n                <td class=\'td7\'><input type=\'text\' class=\'Txt_Sort\' /><span class=\'SortArrow\'>&nbsp;</span></td>\r\n                <td class=\'td8\'></td>\r\n                <td class=\'td9\'></td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow = function (){
    this.DisplayOrder = -1;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'ViewSettings_SectionRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    this.jF2(".td1").html(":: &nbsp; <span>" + this.DisplayOrder + "</span> &nbsp; ↑ &nbsp; ↓");
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow.GetCssRoot = function (){
    return "\r\n                .ViewSettings_SectionRow { line-height: 25px; }\r\n                .ViewSettings_SectionRow td { background: #3e74bb; color: #fff; border-top: 3px solid #12325d; vertical-align: middle; }\r\n                .ViewSettings_SectionRow .td1 { }\r\n                .ViewSettings_SectionRow .td2 { }\r\n\r\n                .ViewSettings_SectionRow .td1 span { color: #89acda; }\r\n\r\n                .ViewSettings_SectionRow .Label1 { float: right; width: 145px; padding-right: 15px; \r\n                                                   text-align: center; line-height: 50px; font-size: 1.2em; }\r\n                .ViewSettings_SectionRow .Div_SectionName { float: right; width: 295px; margin-bottom: 3px; }\r\n                .ViewSettings_SectionRow .Div_SectionName .Label2 { font-size: .8em; line-height: 17px; }\r\n                .ViewSettings_SectionRow .Div_SectionName .Txt_SectionName { width: 260px; line-height: 15px; font-size: 1.2em; }\r\n\r\n                .ViewSettings_SectionRow .Div_CheckboxOptions { float: right; width: 165px; font-size: .8em; line-height: 12px; margin: 2px 0px 4px; }\r\n                .ViewSettings_SectionRow .Div_CheckboxOptions div { }\r\n\r\n                .ViewSettings_SectionRow .Bttn { float: right; background: #14498f; cursor: pointer; text-align: center; \r\n                                                 font-size: .9em; padding: 8px 17px; margin: 4px 5px 0px 0px; }\r\n                .ViewSettings_SectionRow .Bttn:hover { background: #333; }\r\n                .ViewSettings_SectionRow .Bttn_Permissions { }\r\n                .ViewSettings_SectionRow .Bttn_Delete { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'td1\'>::</td>\r\n                \r\n                <td class=\'td2\' colspan=\'8\'>\r\n                    <div class=\'Bttn Bttn_Delete\'>X Delete</div>\r\n                    <div class=\'Bttn Bttn_Permissions\'>Permissions</div>\r\n                    <div class=\'Div_CheckboxOptions\'>\r\n                        <div><input type=\'checkbox\' /> Hide on Grid</div>\r\n                        <div><input type=\'checkbox\' /> Hide on Record Editor</div>\r\n                        <div title=\'Collapsed by Default in Record Editor\'><input type=\'checkbox\' /> Collapsed by Default</div>\r\n                    </div>\r\n                    <div class=\'Div_SectionName\'>\r\n                        <div class=\'Label2\'>Section Name</div>\r\n                        <input type=\'text\' class=\'Txt_SectionName\' />\r\n                    </div>\r\n                    <div class=\'Label1\'>Column Section</div>\r\n                    <div class=\'clear\'></div>\r\n                </td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Login) == "undefined")
    ASPdatabaseNET.UI.PageParts.Login = {};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI = function (){
    this.LogoBox = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.DoPing();
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.DoPing = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "DoPing_Return").PingServerTime();
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.DoPing_Return = function (){
    var thisObj = this;
    eval("setTimeout(function(){ thisObj.DoPing(); }, 90000);");
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'LoginMainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.LogoBox = new ASPdatabaseNET.UI.GlobalParts.LogoBox();
    this.LogoBox.Instantiate();
    this.jF(".TopBar").append(this.LogoBox.jRoot);
    this.LogoBox.Open();
    var thisObj = this;
    var u = this.jF(".Txt_Username");
    var p = this.jF(".Txt_Password");
    eval("u.keydown(function(event) { thisObj.OnKeyDown(event) });");
    eval("p.keydown(function(event) { thisObj.OnKeyDown(event) });");
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.Open_Sub = function (){
    this.jF(".MessageDiv").hide();
    this.jF(".FormDiv").show();
    this.jF(".Txt_Username").focus();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "IsInDemoMode_Return").Authentication__IsInDemoMode();
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.IsInDemoMode_Return = function (ajaxResponse){
    try{
        if (ajaxResponse.ReturnObj == true){
            this.jF(".Txt_Username").val("demo");
            this.jF(".Txt_Password").val("1234Demo1234");
        }
    }
    catch($$e10){
    }
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.OnKeyDown = function (evt){
    this.jF(".ErrorMessage").hide();
    switch (evt.keyCode){
        case 37:
            break;
        case 38:
            break;
        case 39:
            break;
        case 40:
            break;
        case 13:
            this.LoginBttn_Click();
            break;
    }
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.LoginBttn_Click = function (){
    var ajaxSender = ASPdb.Security.AjaxSender.GetObj();
    ajaxSender.OnReady.After.AddHandler(this, "LoginBttn_Step2", 0);
    if (!ajaxSender.IsReady){
        this.jF(".ErrorMessage").hide();
        this.jF(".MessageDiv").show().html("Loading Security Keys");
        this.jF(".FormDiv").hide();
        ajaxSender.Initialize();
    }
    else {
        this.LoginBttn_Step2();
    }
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.LoginBttn_Step2 = function (){
    this.jF(".ErrorMessage").hide();
    this.jF(".MessageDiv").show().html("Authenticating");
    this.jF(".FormDiv").hide();
    var u = this.jF(".Txt_Username").val();
    var p = this.jF(".Txt_Password").val();
    this.jF(".Txt_Password").val("");
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Login_Return").YesEncryption().Authentication__Login(u, p);
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.Login_Return = function (ajaxResponse){
    this.jF(".MessageDiv").hide();
    this.jF(".FormDiv").show();
    if (ajaxResponse.Error != null){
        this.jF(".ErrorMessage").html(ajaxResponse.Error.Message).show();
        this.jF(".Txt_Username").focus();
        return;
    }
    this.jF(".FormDiv").hide();
    var userInfo = ajaxResponse.ReturnObj;
    var hash = window.location.hash;
    if (userInfo.UserId > -1)
        window.location = ("ASPdatabase.NET.aspx" + hash);
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.GlobalParts.LogoBox.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.GetCssRoot = function (){
    return "\r\n                .LoginMainUI { }\r\n                .LoginMainUI .TopBar { height: 75px; line-height: 75px; background: #14498f; color: #fff; }\r\n                .LoginMainUI .TopBar .LogoLink { float: left; display:block; width: auto; line-height: 40px; margin-top: 18px; \r\n                                                 margin-left: 15px; padding: 0px 14px; font-size: 1.25em; color:#fff; }\r\n                .LoginMainUI .TopBar .LogoLink:hover { background: #0f366b; }\r\n\r\n                .LoginMainUI .LoginBoxWrap { margin: auto; width: 400px; max-width: 400px; min-width: 400px; }\r\n                .LoginMainUI .LoginBorderBox { border: 1px solid #e4e4e4; margin: 50px 0px; box-shadow: 1px 1px 17px #ddd; }\r\n                .LoginMainUI .MessageDiv { display:block; margin: 15px; }\r\n                .LoginMainUI .FormDiv { display:none; margin: 50px 60px 50px 80px; color: #888; font-size: .8em; }\r\n\r\n                .LoginMainUI .Txt { border: 1px solid #14498f; width: 240px; padding: 3px; margin: 0px; font-size: 1.5em; margin-bottom: 20px; }\r\n                .LoginMainUI .Bttn_Login { background: #14498f; color: #fff; font-size: 1.2em; }\r\n                .LoginMainUI .Bttn_Login:hover { background: #787e86; }\r\n\r\n                .LoginMainUI .ErrorMessage { display:none; margin-top: 30px; color: red; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopBar\'>\r\n                    \r\n                </div>\r\n\r\n                <div class=\'LoginBoxWrap\'>\r\n                    <div class=\'LoginBorderBox\'>\r\n\r\n                        <div class=\'MessageDiv\'>Loading</div>\r\n                        <div class=\'FormDiv\'>\r\n                            Username\r\n                            <br />\r\n                            <input type=\'text\' class=\'Txt Txt_Username\' value=\'\' autocomplete=\'off\' autocapitalize=\'off\' />\r\n                            <br />\r\n                            Password\r\n                            <br />\r\n                            <input type=\'password\' class=\'Txt Txt_Password\' value=\'\' />\r\n                            <br />\r\n                            <input type=\'button\' class=\'Bttn_Login\' value=\'Login\' On_Click=\'LoginBttn_Click\' />\r\n                            <div class=\'ErrorMessage\'></div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Login.LoginMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.ManageAssets) == "undefined")
    ASPdatabaseNET.UI.PageParts.ManageAssets = {};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'SchemasPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.OnModel_Set = function (){
    this.Refresh();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.Refresh = function (){
    var table = this.jF2(".MenuTable");
    table.find(".jRoot").remove();
    if (this.get_Model() != null){
        for (var i = 0; i < this.get_Model().length; i++){
            var menuRow = new ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow();
            menuRow.set_Model(this.get_Model()[i]);
            menuRow.Instantiate();
            menuRow.OnChange.After.AddHandler(this, "SubItem_Changed", 0);
            table.append(menuRow.jRoot);
        }
    }
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.BttnClick_NewSchema = function (){
    this.jF2(".NewSchemaBox").show();
    this.jF2(".Txt_NewSchemaName").focus();
    this.jF2(".Txt_NewSchemaName").val("");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.BttnClick_SaveNewSchema = function (){
    this.jF2(".NewSchemaBox").hide();
    this.jF2(".NewSchemaBox_PleaseWait").show();
    var newSchemaName = this.jF2(".Txt_NewSchemaName").val();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Response").ManageAssets__Schemas__SaveNew(this.get_ViewModel(), newSchemaName);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.Save_Response = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.jF2(".NewSchemaBox_PleaseWait").hide();
    this.jF2(".Txt_NewSchemaName").val("");
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.BttnClick_CancelNewSchema = function (){
    this.jF2(".NewSchemaBox").hide();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.SubItem_Changed = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.GetCssRoot = function (){
    return "\r\n                .SchemasPanel { padding-top: 0px; }\r\n\r\n                .SchemasPanel .BttnsBar { margin: 12px 0px; position:relative; }\r\n                .SchemasPanel .BttnsBar .Bttn { float:right; background: #14498f; color: #fff; line-height: 28px;\r\n                                               padding: 0px 20px; cursor: pointer; margin-left: 20px; font-size: .9em; }\r\n                .SchemasPanel .BttnsBar .Bttn:hover { background: #1d2d42; }\r\n\r\n                .SchemasPanel .BttnsBar .NewSchemaBox { display:none; position:absolute; right: 0px; width: 500px; color: #fff; \r\n                                                        background: #14498f; font-size: .8em; padding: 9px 14px; }\r\n                .SchemasPanel .BttnsBar .NewSchemaBox input { width: 190px; margin-left: 11px; }\r\n                .SchemasPanel .BttnsBar .NewSchemaBox .Bttn1 { float:right; width:auto; cursor:pointer; border: 1px solid #6185b4;\r\n                                                               margin-left: 9px; padding: 1px 8px; }\r\n                .SchemasPanel .BttnsBar .NewSchemaBox .Bttn1:hover { background: #000; border: 1px solid #000; }\r\n                .SchemasPanel .BttnsBar .NewSchemaBox_PleaseWait { display:none; position:absolute; right: 0px; width: 500px; color: #fff; \r\n                                                        background: #14498f; font-size: .8em; padding: 9px 14px;  }\r\n\r\n\r\n                .SchemasPanel .MenuTable { width: 100%; }\r\n                .SchemasPanel .MenuTable th { font-weight: normal; color: #878787; font-size: .65em; border-bottom: 1px solid #c3c3c3; \r\n                                             text-align: left; padding: 0px 0px 1px 5px; }\r\n                .SchemasPanel .MenuTable .th1 { }\r\n                .SchemasPanel .MenuTable .th2 { text-align: center; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.prototype.GetHtmlRoot = function (){
    return "\r\n\r\n                <div class=\'BttnsBar\'>\r\n                    <div class=\'NewSchemaBox\'>\r\n                        New Schema Name\r\n                        <input type=\'text\' class=\'Txt_NewSchemaName\' />\r\n                        <div class=\'Bttn1 Bttn_CancelNewSchema\' On_Click=\'BttnClick_CancelNewSchema\'>Cancel</div>\r\n                        <div class=\'Bttn1 Bttn_SaveNewSchema\' On_Click=\'BttnClick_SaveNewSchema\'>Save</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'NewSchemaBox_PleaseWait\'>Please Wait</div>\r\n                    <div class=\'Bttn\' On_Click=\'BttnClick_NewSchema\'>+ New Schema</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'AutoResize\'>\r\n                    <table class=\'MenuTable\'>\r\n                        <tr>\r\n                            <th class=\'th1\'>Schema Name</th>\r\n                            <th class=\'th2\'>(Only if Schema is empty)</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                \r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'SchemasPanel_MenuRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.get_Model() != null){
        this.jF2(".Label_SchemaName").html(this.get_Model().Schema);
    }
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.prototype.BttnClick_Name = function (){
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.prototype.BttnClick_Delete = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Delete_Response").ManageAssets__Schemas__Delete(this.get_Model().ConnectionId, this.get_Model().Schema);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.prototype.Delete_Response = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.GetCssRoot = function (){
    return "\r\n                .SchemasPanel_MenuRow { font-size: .9em; }\r\n                .SchemasPanel_MenuRow td { border: 1px solid #c3c3c3; border-top-width: 0px; line-height: 40px; }\r\n                .SchemasPanel_MenuRow .td1 { border-left-width: 0px; padding-left: 10px; }\r\n                .SchemasPanel_MenuRow .td2 { width: 165px; }\r\n                .SchemasPanel_MenuRow .Bttn { color: #14498f; text-align:center; font-size: .78em; cursor: pointer; }\r\n                .SchemasPanel_MenuRow .Bttn:hover { background: #888; color:#fff; }\r\n\r\n                .SchemasPanel_MenuRow:hover { background: #ececec; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'td1 Label_SchemaName\' On_Click=\'BttnClick_Name\'></td>\r\n                <td class=\'td2 Bttn\' On_Click=\'BttnClick_Delete\' >Delete</td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel_MenuRow, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel = function (holdsHiddenItems){
    this.HoldsHiddenItems = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.HoldsHiddenItems = holdsHiddenItems;
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'SQLViewsPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.OnModel_Set = function (){
    this.Refresh();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.Refresh = function (){
    var table = this.jF2(".MenuTable");
    table.find(".jRoot").remove();
    if (this.get_Model() != null){
        for (var i = 0; i < this.get_Model().length; i++){
            var menuRow = new ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow(this.HoldsHiddenItems);
            menuRow.set_Model(this.get_Model()[i]);
            menuRow.Instantiate();
            menuRow.OnChange.After.AddHandler(this, "SubItem_Changed", 0);
            table.append(menuRow.jRoot);
        }
    }
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.BttnClick_NewSQLView = function (){
    alert("+ New SQL View");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.SubItem_Changed = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.GetCssRoot = function (){
    return "\r\n                .SQLViewsPanel { padding-top: 0px; }\r\n\r\n                .SQLViewsPanel .BttnsBar { margin: 12px 0px; }\r\n                .SQLViewsPanel .BttnsBar .Bttn { float:right; background: #14498f; color: #fff; line-height: 28px;\r\n                                               padding: 0px 20px; cursor: pointer; margin-left: 20px; font-size: .9em; }\r\n                .SQLViewsPanel .BttnsBar .Bttn:hover { background: #1d2d42; }\r\n                \r\n                .SQLViewsPanel .MenuTable { width: 100%; }\r\n                .SQLViewsPanel .MenuTable th { font-weight: normal; color: #878787; font-size: .65em; border-bottom: 1px solid #c3c3c3; \r\n                                             text-align: left; padding: 0px 0px 1px 5px; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.prototype.GetHtmlRoot = function (){
    return "\r\n\r\n                <div class=\'BttnsBar\'>\r\n                    <div class=\'Bttn hide\' On_Click=\'BttnClick_NewSQLView\'>+ New SQL View</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'AutoResize\'>\r\n                    <table class=\'MenuTable\'>\r\n                        <tr>\r\n                            <th>[Schema].[View Name]</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow = function (holdsHiddenItems){
    this.HoldsHiddenItems = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.HoldsHiddenItems = holdsHiddenItems;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'SQLViewsPanel_MenuRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.get_Model() != null){
        this.jF2(".Label_SQLViewName").html(this.GetDisplayName());
    }
    if (this.HoldsHiddenItems)
        this.jF2(".td2").html("Unhide");
    else
        this.jF2(".td2").html("Hide");
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.GetDisplayName = function (){
    var rtn = "";
    if (this.get_Model().UseSquareBrackets_Schema)
        rtn += "[" + this.get_Model().Schema + "].";
    else
        rtn += this.get_Model().Schema + ".";
    if (this.get_Model().UseSquareBrackets_GenericName)
        rtn += "[<span>" + this.get_Model().GenericName + "</span>]";
    else
        rtn += "<span>" + this.get_Model().GenericName + "</span>";
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.BttnClick_Name = function (){
    alert("BttnClick_Name: " + this.get_Model().Schema + "." + this.get_Model().GenericName);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.BttnClick_Hide = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Views_ShowHide_Response").ManageAssets__Views_ShowHide(this.get_Model().ConnectionId, this.get_Model().GenericId, !this.HoldsHiddenItems);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.Views_ShowHide_Response = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.BttnClick_Permissions = function (){
    alert("02");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.BttnClick_Rename = function (){
    var newName = prompt("New View Name", this.get_Model().GenericName);
    if (newName != null)
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Rename_Return").ManageAssets__Views_Rename(this.get_Model().ConnectionId, this.get_Model().GenericId, newName);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.Rename_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.BttnClick_EditSQL = function (){
    alert("03");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.BttnClick_Delete = function (){
    alert("04");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.GetCssRoot = function (){
    return "\r\n                .SQLViewsPanel_MenuRow { font-size: .9em; }\r\n                .SQLViewsPanel_MenuRow td { border: 1px solid #c3c3c3; border-top-width: 0px; line-height: 40px; }\r\n                .SQLViewsPanel_MenuRow .td1 { color: #aaa; border-left-width: 0px; padding-left: 10px; } \r\n                .SQLViewsPanel_MenuRow .td1 span { color: #222; }\r\n                .SQLViewsPanel_MenuRow .td2 { width: 60px; }\r\n                .SQLViewsPanel_MenuRow .td3 { width: 100px; }\r\n                .SQLViewsPanel_MenuRow .td4 { width: 70px; }\r\n                .SQLViewsPanel_MenuRow .td5 { width: 80px; }\r\n                .SQLViewsPanel_MenuRow .td6 { width: 70px; }\r\n                .SQLViewsPanel_MenuRow .Bttn { color: #14498f; text-align:center; font-size: .78em; cursor: pointer; }\r\n                .SQLViewsPanel_MenuRow .Bttn:hover { background: #888; color:#fff; }\r\n\r\n                .SQLViewsPanel_MenuRow:hover { background: #ececec; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'td1 Label_SQLViewName\' On_Click=\'BttnClick_Name\'></td>\r\n                <td class=\'td2 Bttn\' On_Click=\'BttnClick_Hide\'        >Hide</td>\r\n                <td class=\'td4 Bttn\' On_Click=\'BttnClick_Rename\'      >Rename</td>\r\n                <td class=\'td5 Bttn hide\' On_Click=\'BttnClick_EditSQL\'     >Edit SQL</td>\r\n                <td class=\'td6 Bttn hide\' On_Click=\'BttnClick_Delete\'      >Delete</td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel_MenuRow, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel = function (holdsHiddenItems){
    this.HoldsHiddenItems = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.HoldsHiddenItems = holdsHiddenItems;
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TablesPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.OnModel_Set = function (){
    this.Refresh();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.Refresh = function (){
    var table = this.jF2(".MenuTable");
    table.find(".jRoot").remove();
    if (this.get_Model() != null){
        for (var i = 0; i < this.get_Model().length; i++){
            var menuRow = new ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow(this.HoldsHiddenItems);
            menuRow.set_Model(this.get_Model()[i]);
            menuRow.Instantiate();
            menuRow.OnChange.After.AddHandler(this, "SubItem_Changed", 0);
            table.append(menuRow.jRoot);
        }
    }
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.Bttn_CreateTable_Click = function (){
    var url = "#00-TableDesign-New-" + this.get_ViewModel();
    eval("window.location = url;");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.Bttn_ImportTable_Click = function (){
    alert("+ Import Table");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.SubItem_Changed = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.GetCssRoot = function (){
    return "\r\n                .TablesPanel { }\r\n\r\n                .TablesPanel .BttnsBar { margin: 12px 0px; }\r\n                .TablesPanel .BttnsBar .Bttn { float:right; background: #14498f; color: #fff; line-height: 28px;\r\n                                               padding: 0px 20px; cursor: pointer; margin-left: 20px; font-size: .9em; }\r\n                .TablesPanel .BttnsBar .Bttn:hover { background: #1d2d42; }\r\n                \r\n                .TablesPanel .MenuTable { width: 100%; }\r\n                .TablesPanel .MenuTable th { font-weight: normal; color: #878787; font-size: .65em; border-bottom: 1px solid #c3c3c3; \r\n                                             text-align: left; padding: 0px 0px 1px 5px; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.prototype.GetHtmlRoot = function (){
    return "\r\n\r\n                <div class=\'BttnsBar\'>\r\n                    <div class=\'Bttn hide\' On_Click=\'Bttn_ImportTable_Click\'>+ Import Table</div>\r\n                    <div class=\'Bttn\' On_Click=\'Bttn_CreateTable_Click\'>+ Create Table</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'AutoResize\'>\r\n                    <table class=\'MenuTable\'>\r\n                        <tr>\r\n                            <th>[Schema].[Table Name]</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow = function (holdsHiddenItems){
    this.HoldsHiddenItems = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.HoldsHiddenItems = holdsHiddenItems;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'TablesPanel_MenuRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.get_Model() != null){
        this.jF2(".Label_TableName").html(this.GetDisplayName());
        this.jF2(".A_DesignStructure").attr("href", "#00-TableDesign-" + this.get_Model().GenericId);
        this.jF2(".A_Permissions").attr("href", "#00-TablePermissions-" + this.get_Model().GenericId);
    }
    if (this.HoldsHiddenItems)
        this.jF2(".Bttn_ShowHide").html("Unhide");
    else
        this.jF2(".Bttn_ShowHide").html("Hide");
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.GetDisplayName = function (){
    var rtn = "";
    if (this.get_Model().UseSquareBrackets_Schema)
        rtn += "[" + this.get_Model().Schema + "].";
    else
        rtn += this.get_Model().Schema + ".";
    if (this.get_Model().UseSquareBrackets_GenericName)
        rtn += "[<span>" + this.get_Model().GenericName + "</span>]";
    else
        rtn += "<span>" + this.get_Model().GenericName + "</span>";
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.TablesMethod_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.BttnClick_Name = function (){
    window.location = ("#00-Table-" + this.get_Model().GenericId);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.BttnClick_Hide = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "TablesMethod_Return").ManageAssets__Tables_ShowHide(this.get_Model().ConnectionId, this.get_Model().GenericId, !this.HoldsHiddenItems);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.BttnClick_Rename = function (){
    var newName = prompt("New Table Name", this.get_Model().GenericName);
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "TablesMethod_Return").ManageAssets__Tables_Rename(this.get_Model().ConnectionId, this.get_Model().GenericId, newName);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.BttnClick_Delete = function (){
    if (prompt("Are you sure?\n\nIf so, type \"delete table\"") == "delete table")
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "TablesMethod_Return").ManageAssets__Tables_Delete(this.get_Model().ConnectionId, this.get_Model().GenericId);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.BttnClick_Export = function (){
    alert("Export: " + this.get_Model().GenericId);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.GetCssRoot = function (){
    return "\r\n                .TablesPanel_MenuRow { font-size: .9em; }\r\n                .TablesPanel_MenuRow td { border: 1px solid #c3c3c3; border-top-width: 0px; line-height: 40px; }\r\n                .TablesPanel_MenuRow .td1 { color: #aaa; border-left-width: 0px; padding-left: 10px; }\r\n                .TablesPanel_MenuRow .td1 span { color: #222; }\r\n                .TablesPanel_MenuRow .td2 { width: 55px; }\r\n                .TablesPanel_MenuRow .td3 { width: 68px; }\r\n                .TablesPanel_MenuRow .td4 { width: 85px; }\r\n                .TablesPanel_MenuRow .td5_a { width: 61px; }\r\n                .TablesPanel_MenuRow .td6 { width: 65px; line-height: 16px; padding-top: 3px; }\r\n                .TablesPanel_MenuRow .td7 { width: 51px; }\r\n                .TablesPanel_MenuRow .Bttn { color: #14498f; text-align:center; font-size: .78em; cursor: pointer; }\r\n                .TablesPanel_MenuRow .Bttn:hover { background: #888; color:#fff; }\r\n                .TablesPanel_MenuRow .Bttn .a4 { color: #14498f; display:block; line-height: 16px; padding: 3px 0px 5px; }\r\n                .TablesPanel_MenuRow .Bttn .a5 { color: #14498f; display:block; line-height: inherit; }\r\n                .TablesPanel_MenuRow .Bttn a:hover { background: #888; color:#fff; }\r\n\r\n                .TablesPanel_MenuRow .td4:hover { cursor: default; background: #ececec; color: #14498f; }\r\n                .TablesPanel_MenuRow .td5:hover { cursor: default; background: #ececec; color: #14498f; }\r\n\r\n                .TablesPanel_MenuRow:hover { background: #ececec; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'td1 Label_TableName\' On_Click=\'BttnClick_Name\'></td>\r\n                <td class=\'td2 Bttn Bttn_ShowHide\' On_Click=\'BttnClick_Hide\'>Hide</td>\r\n                <td class=\'td3 Bttn\'>\r\n                    <a class=\'a4 A_DesignStructure\' href=\'#\'>Design<br />Structure</a>\r\n                </td>\r\n                <td class=\'td5_a Bttn\' On_Click=\'BttnClick_Rename\'       >Rename</td>\r\n                <td class=\'td6 Bttn\' On_Click=\'BttnClick_Delete\' >Delete<br />Table</td>\r\n                <td class=\'td7\'>&nbsp;</td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel_MenuRow, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.SendFeedback) == "undefined")
    ASPdatabaseNET.UI.PageParts.SendFeedback = {};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'SendFeedbackMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.Open_Sub = function (){
    this.jF(".Main1").hide();
    this.jF(".Main2").hide();
    this.jF(".HideOnAnonymous").show();
    this.jF(".DivCheckbox").removeClass("DivCheckbox_On");
    this.jF("input[type=text]").val("");
    this.jF("input[type=checkbox]").removeAttr("checked");
    this.jF("textarea").val("");
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").Feedback__GetInfo();
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.GetInfo_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.BindUI();
    this.jF(".Main1").show();
    this.jF(".T_Name").focus();
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.D_RequestFollowup_Click = function (){
    this.get_Model().RequestFollowup = !this.get_Model().RequestFollowup;
    if (this.get_Model().RequestFollowup){
        this.jF(".D_RequestFollowup").addClass("DivCheckbox_On");
        this.jF(".C_RequestFollowup").attr("checked", true);
    }
    else {
        this.jF(".D_RequestFollowup").removeClass("DivCheckbox_On");
        this.jF(".C_RequestFollowup").removeAttr("checked");
    }
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.D_SendAnonymously_Click = function (){
    this.get_Model().Anonymous = !this.get_Model().Anonymous;
    if (this.get_Model().Anonymous){
        this.jF(".D_SendAnonymously").addClass("DivCheckbox_On");
        this.jF(".C_SendAnonymously").attr("checked", true);
        this.jF(".HideOnAnonymous").hide();
    }
    else {
        this.jF(".D_SendAnonymously").removeClass("DivCheckbox_On");
        this.jF(".C_SendAnonymously").removeAttr("checked");
        this.jF(".HideOnAnonymous").show();
    }
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.B_SendFeedBack_Click = function (){
    this.get_Model().Name = "";
    this.get_Model().Email = "";
    if (!this.get_Model().Anonymous){
        this.get_Model().Name = this.jF(".T_Name").val();
        this.get_Model().Email = this.jF(".T_Email").val();
    }
    this.get_Model().Message = this.jF(".T_Message").val();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Send_Return").Feedback__Send(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.Send_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.jF(".Main1").hide();
    this.jF(".Main2").show().html(ajaxResponse.ReturnObj);
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.B_Cancel_Click = function (){
    window.location = "ASPdatabase.NET.aspx#00-Home";
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.GetCssRoot = function (){
    return "\r\n                .SendFeedbackMainUI { }\r\n                .SendFeedbackMainUI a { font-size: .7em; font-style: italic; }\r\n                .SendFeedbackMainUI a:hover { background: #ddd; }\r\n                .SendFeedbackMainUI input[type=text] { border:1px solid #2c5eab; width: 16em; }\r\n                .SendFeedbackMainUI .T_Name { }\r\n                .SendFeedbackMainUI .T_Email { }\r\n                .SendFeedbackMainUI .D_AppVersion { border:1px solid #2c5eab; width: 16em; background: #e0e0e0; line-height: 1.375em; padding: 0em 0.1875em; }\r\n                .SendFeedbackMainUI .C_RequestFollowup { }\r\n                .SendFeedbackMainUI .C_SendAnonymously { }\r\n                .SendFeedbackMainUI .T_Message { width: 35em; height: 9.5em; }\r\n                .SendFeedbackMainUI .B_SendFeedBack { float:left; padding: .2em .9em; background: #134084; color: #fff; cursor:pointer; }\r\n                .SendFeedbackMainUI .B_SendFeedBack:hover { background: #444; }\r\n\r\n                .SendFeedbackMainUI .Bttn { float:left; padding: .2em .9em; background: #134084; color: #fff; cursor:pointer; margin-left: 1em; }\r\n                .SendFeedbackMainUI .Bttn:hover { background: #444; }\r\n\r\n                .SendFeedbackMainUI .DivCheckbox { float:left; padding: .2em 1em; width: 14em; border: 1px solid #fff; border-radius: .4em; cursor:pointer; }\r\n                .SendFeedbackMainUI .DivCheckbox:hover { border-color: #888; background: #bbb; }\r\n                .SendFeedbackMainUI .DivCheckbox_On { border-color: #134083; background: #5f8cd0; color: #fff; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>Send Feedback to Michael Tanner <a href=\'https://www.aspdatabase.net/\' target=\'_blank\'>(of ASPdatabase.NET LLC)</a></div>\r\n                <div class=\'Main Main1\'>\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'HideOnAnonymous\'>\r\n                        Name <br />\r\n                        <input type=\'text\' class=\'T_Name\' ModelKey=\'Name\' />\r\n                        <br />\r\n                        <br />\r\n                        Email <br />\r\n                        <input type=\'text\' class=\'T_Email\' ModelKey=\'Email\' />\r\n                        <br />\r\n                        <br />\r\n                        AppVersion <br />\r\n                        <div class=\'D_AppVersion\' ModelKey=\'AppVersion\'>&nbsp;</div>\r\n                        <br />\r\n                        <br />\r\n\r\n                        <div class=\'D_RequestFollowup DivCheckbox\' On_Click=\'D_RequestFollowup_Click\'>\r\n                            <input type=\'checkbox\' class=\'C_RequestFollowup\' />\r\n                            Request Followup\r\n                        </div>\r\n                        <div class=\'clear\'></div>\r\n                        <br />\r\n                    </div>\r\n\r\n                    <div class=\'D_SendAnonymously DivCheckbox\' On_Click=\'D_SendAnonymously_Click\'>\r\n                        <input type=\'checkbox\' class=\'C_SendAnonymously\' />\r\n                        Send Anonymously\r\n                    </div>\r\n                    <div class=\'clear\'></div>\r\n                    <br />\r\n\r\n                    Message <br />\r\n                    <textarea class=\'T_Message\'></textarea>\r\n                    <br />\r\n                    <br />\r\n                    <div class=\'B_SendFeedBack\' On_Click=\'B_SendFeedBack_Click\'>Send Feedback</div>\r\n                    <div class=\'Bttn\' On_Click=\'B_Cancel_Click\'>Cancel</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'Main Main2\'>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.HomePage) == "undefined")
    ASPdatabaseNET.UI.PageParts.HomePage = {};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'HomePageMainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
    if (this.jF(".S_Welcome").html() == "Welcome")
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").HomePage__GetInfo();
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.prototype.GetInfo_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null)
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.jF(".S_Welcome").html("Welcome " + this.get_Model().FirstName);
    this.jF(".Column2").html(this.get_Model().HomeHTML);
    this.BindUI();
    if (this.get_Model().UserIsAdmin){
        this.jF(".Box2a").show();
        this.jF(".Box2b").hide();
    }
    else {
        this.jF(".Box2a").hide();
        this.jF(".Box2b").show();
        this.jF(".Column2").html("");
    }
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.prototype.Feedback_Click = function (){
    window.location = "ASPdatabase.NET.aspx#00-SendFeedback";
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.prototype.About_Click = function (){
    window.location = "ASPdatabase.NET.aspx#00-About-ASPdatabase.NET";
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.GetCssRoot = function (){
    return "\r\n                .HomePageMainUI { padding: 3.0625em 0em 0em 3.0625em; }\r\n                .HomePageMainUI .Column1 { float:left; width: 18.75em; margin-right: 0.3125em; }\r\n                .HomePageMainUI .Column2 { float:left; width: 22.5em; background: #f5f5f5; border-top: 0.6875em solid #e0e0e0; border-top-right-radius:4em; }\r\n\r\n                .HomePageMainUI .Box1 { background: #2568c2; color: #fff; line-height: 6.875em; margin-bottom: 0.3125em; text-align:center; border-top-left-radius:2em; }\r\n                .HomePageMainUI .Box1 span { font-size: 1.2em; }\r\n\r\n                .HomePageMainUI .Box2 { background: #f96d49; color: #fff; line-height: 2.2375em; margin-bottom: 0.3125em; padding: 1.2em 0em 1.2em 1.1em; }\r\n                .HomePageMainUI .Box2:hover { background: #e84a22; }                \r\n                .HomePageMainUI .Box2 span { font-size: .8em; }\r\n                .HomePageMainUI .Box2b { display:none; }\r\n\r\n                .HomePageMainUI .Box3 { font-size: .7em; color: #555; background: #e4e4e4; line-height: 2em; margin-bottom: 0.3125em; text-align:center; cursor:pointer; }\r\n                .HomePageMainUI .Box3:hover { background: #555; color: #fff; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Column1\'>\r\n                    <div class=\'Box1\'>\r\n                        <span class=\'S_Welcome\'>Welcome</span>\r\n                    </div>\r\n                    <div class=\'Box2 Box2a\' On_Click=\'Feedback_Click\'>\r\n                        <span On_Click=\'Feedback_Click\'>\r\n                        How can we improve ASPdatabase.NET? <br />\r\n                        Send your Feedback & Questions >>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\'Box2 Box2b\'>\r\n                        <span>\r\n                            &nbsp;\r\n                        </span>\r\n                    </div>\r\n                    <div class=\'Box3\' On_Click=\'About_Click\'>\r\n                        ASPdatabase.NET <span class=\'Copy\' ModelKey=\'Version\'></span>\r\n                        <div class=\'Copy\' ModelKey=\'CopyrightLine\'></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\'Column2 AutoResize\'>\r\n                    &nbsp;\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel = function (viewModel){
    this.ColumnsRows = null;
    this.OnHasPendingChanges = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnGotoTab = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnSaved = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.TotalCoumnsInUI_Min = 50;
    this.TotalCoumnsInUI_MinEmpty = 10;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(viewModel);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ColumnsPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.Open_Sub = function (){
    var saveBttn = this.jF2(".SaveBttn");
    var holder_ColumnRows = this.jF2(".Holder_ColumnRows");
    holder_ColumnRows.html("").scrollTop();
    if (this.get_ViewModel().IsCreateNew)
        this.jF(".PK_OnlyNew").show();
    else
        this.jF(".PK_OnlyNew").hide();
    saveBttn.hide();
    this.ColumnsRows = new Array(0);
    if (!this.get_ViewModel().IsCreateNew){
        for (var i = 0; i < this.get_Model().Columns.length; i++){
            this.ColumnsRows[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow(this.get_Model().Columns[i], this.get_ViewModel());
            this.ColumnsRows[i].get_Model().ColumnName_Original = this.ColumnsRows[i].get_Model().ColumnName;
            this.ColumnsRows[i].get_Model().ChangeAction = 3;
            this.Instantiate_AndAttachEvents(this.ColumnsRows[i]);
            holder_ColumnRows.append(this.ColumnsRows[i].jRoot);
        }
        saveBttn.show().removeClass("SaveBttn_Active");
    }
    this.Build_ColumnsRows();
    var thisObj = this;
    eval("holder_ColumnRows.sortable({ update: function(event, ui) { thisObj.PositionChanged_ViaMouse(event, ui); } });");
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.EnableSaveBttn = function (){
    if (!this.jF2(".SaveBttn").hasClass("SaveBttn_Active"))
        this.jF2(".SaveBttn").addClass("SaveBttn_Active");
    this.OnHasPendingChanges.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.SaveToModel = function (){
    this.get_Model().Columns = new Array(0);
    for (var i = 0; i < this.ColumnsRows.length; i++){
        this.get_Model().Columns[i] = this.ColumnsRows[i].SaveToModel();
    }
    return this.get_Model();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.AddEmptyColumnToUI = function (columnPosition, insertAtBottom, or_InsertBeforeThisElement){
    var rtn = new ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow(new ASPdatabaseNET.DbInterfaces.TableObjects.Column(), this.get_ViewModel());
    rtn.get_Model().OrdinalPosition = columnPosition;
    rtn.get_Model().ChangeAction = 1;
    this.Instantiate_AndAttachEvents(rtn);
    if (insertAtBottom)
        this.jF2(".Holder_ColumnRows").append(rtn.jRoot);
    else
        rtn.jRoot.insertBefore(or_InsertBeforeThisElement);
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.Instantiate_AndAttachEvents = function (columnsRow){
    columnsRow.Instantiate();
    columnsRow.OnInsertBefore.After.AddHandler(this, "OnInsertBefore", 1);
    columnsRow.OnRequestRemove.After.AddHandler(this, "OnRequestRemove", 1);
    columnsRow.OnColumnPositionChange.After.AddHandler(this, "PositionChanged_ViaTextBox", 1);
    columnsRow.OnGotoTab.After.AddHandler(this, "OnGotoTab_Method", 1);
    columnsRow.OnColumnNameBlur.After.AddHandler(this, "OnColumnNameBlur_Method", 0);
    columnsRow.OnChange.After.AddHandler(this, "OnColumnsRowChange", 0);
    columnsRow.OnUpOrDownArrow.After.AddHandler(this, "OnColumn_UpOrDownArrow", 2);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.Build_ColumnsRows = function (){
    var insertCounter1 = this.TotalCoumnsInUI_Min - this.jF2(".ColumnsRow").length;
    if (insertCounter1 > 0)
        for (var i = 0; i < insertCounter1; i++)
            this.AddEmptyColumnToUI(0, true, null);
    var insertCounter2 = this.TotalCoumnsInUI_MinEmpty - this.HowManyBottomColumnsAreEmpty();
    if (insertCounter2 > 0)
        for (var i = 0; i < insertCounter2; i++)
            this.AddEmptyColumnToUI(0, true, null);
    this.ColumnsRows = new Array(0);
    var elements = this.jF2(".ColumnsRow");
    for (var i = 0; i < elements.length; i++){
        this.ColumnsRows[i] = ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.Get_UIObject(elements[i]);
        this.ColumnsRows[i].set_ColumnPosition_Property(i + 1);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.HowManyBottomColumnsAreEmpty = function (){
    var rtn = 0;
    var elements = this.jF2(".ColumnsRow");
    for (var i = elements.length - 1; i >= 0; i--){
        var columnsRow = ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.Get_UIObject(elements[i]);
        if (ASPdb.FrameworkUI.JsStr.S(columnsRow.get_ColumnName_Property()).Trim().String.length < 1)
            rtn++;
        else
            i = -1;
    }
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.OnInsertBefore = function (columnsRow){
    var new_ColumnsRow = this.AddEmptyColumnToUI(columnsRow.get_ColumnPosition_Property(), false, columnsRow.jRoot);
    this.Build_ColumnsRows();
    this.EnableSaveBttn();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.OnRequestRemove = function (columnsRow){
    columnsRow.jRoot.detach();
    this.Build_ColumnsRows();
    this.EnableSaveBttn();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.OnGotoTab_Method = function (tabType){
    this.OnGotoTab.After.Fire1(tabType);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.OnColumnNameBlur_Method = function (){
    this.Build_ColumnsRows();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.OnColumnsRowChange = function (){
    this.EnableSaveBttn();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.OnColumn_UpOrDownArrow = function (indexRow, classNameToFocus){
    if (indexRow >= 0 && indexRow < this.ColumnsRows.length)
        this.ColumnsRows[indexRow].PutFocusOn(classNameToFocus);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.PositionChanged_ViaMouse = function (jQ_Event, ui){
    var elements = this.jF2(".ColumnsRow");
    for (var i = 0; i < elements.length; i++){
        var new_ColumnPosition = i + 1;
        var columnsRow = ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.Get_UIObject(elements[i]);
        if (columnsRow != null){
            columnsRow.set_ColumnPosition_Property(new_ColumnPosition);
        }
    }
    this.Build_ColumnsRows();
    this.EnableSaveBttn();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.PositionChanged_ViaTextBox = function (columnsRow){
    columnsRow.jRoot.detach();
    var old_Position = columnsRow.get_Model().OrdinalPosition;
    var new_Position = columnsRow.get_ColumnPosition_Property();
    if (new_Position < 1)
        new_Position = 1;
    if (new_Position > old_Position)
        new_Position++;
    var index_ToInsertBefore = new_Position - 1;
    if (index_ToInsertBefore < this.ColumnsRows.length)
        columnsRow.jRoot.insertBefore(this.ColumnsRows[index_ToInsertBefore].jRoot);
    else {
        columnsRow.set_ColumnPosition_Property(this.ColumnsRows.length + 1);
        columnsRow.jRoot.insertAfter(this.ColumnsRows[this.ColumnsRows.length - 1].jRoot);
    }
    this.Build_ColumnsRows();
    this.EnableSaveBttn();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.SaveBttn_Click = function (){
    if (!this.jF2(".SaveBttn").hasClass("SaveBttn_Active"))
        return;
    this.get_Model().Columns = new Array(0);
    for (var i = 0; i < this.ColumnsRows.length; i++){
        this.ColumnsRows[i].SaveToModel();
        this.get_Model().Columns[i] = this.ColumnsRows[i].get_Model();
    }
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_AjaxReturn").TableDesign__UpdateTable(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.Save_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnSaved.After.Fire1("Columns");
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.GetCssRoot = function (){
    return "\r\n                .ColumnsPanel { position:relative; background: #979aa5; }\r\n                .ColumnsPanel .TopCorrectiveLine { position:absolute; top: -1px; width: 100%; height: 3px; background: #979aa5; }\r\n\r\n                .ColumnsPanel .SaveBttn { display:block; position:absolute; background: #979aa5; color: #b9bcca; border: 1px solid #c9ccd7;\r\n                                          top: 9px; right: 8px; line-height: 35px; padding: 0px 33px; cursor: default; z-index: 400; }\r\n\r\n                .ColumnsPanel .SaveBttn_Active { background: #14498f; color: #fff; cursor: pointer; border-color: #fff; }\r\n                .ColumnsPanel .SaveBttn_Active:hover { background: #e14738; }\r\n\r\n                .ColumnsPanel .MainEditBox_Padding { padding: 27px 8px 20px 5px; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox { background: #fff; position:relative; }\r\n\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels { position:absolute; top: 0px; right: 0px; width: 881px; z-index: 300; overflow: visible;\r\n                                                                              color: #0c5eca; background: #fff; border-bottom: 2px solid #747474; font-size: .9em; font-weight: bold; line-height: 35px; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .Tip_PrimaryKey { position:absolute; font-size: .75em; background: #f26b0b; color: #fff; border-radius: .6em;\r\n                                                                                              left: 6.75em; top: -1em;\r\n                                                                                              font-weight: normal; line-height: 1.5em; padding: 0em .7em; z-index: 2; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .PK_Line1 { position:absolute; left: 7.7em; top: 0em; background: #f26b0b; width: 0.13888em; height: 2.3em; z-index: 1; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .PK_Line1  .PK_Line2 { position:absolute; bottom: 0.069444em; left: -0.069444em; width: 0.2777em; height: 0.138888em; background: #f26b0b; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .HeadLabel1 { width: auto; position:absolute; top: 2px; left: 22px;  font-size: .75em; text-align:center; line-height: 15px; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .HeadLabel2 { width: auto; position:absolute; top: 0px; left: 155px; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .HeadLabel3 { width: auto; position:absolute; top: 0px; left: 350px; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .HeadLabel4 { width: auto; position:absolute; top: 2px; left: 504px; font-size: .75em; text-align:center; line-height: 15px; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .HeadLabels .HeadLabel5 { width: auto; position:absolute; top: 0px; left: 567px; }\r\n\r\n\r\n\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .Spacer1 { height: 37px; background: #979aa5; }\r\n                .ColumnsPanel .MainEditBox_Padding .MainEditBox .Holder_ColumnRows { padding-top: 0px; overflow-y: scroll; height: 200px; background: #979aa5; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopCorrectiveLine\'></div>\r\n                <div class=\'SaveBttn SaveBttn_Active\' On_Click=\'SaveBttn_Click\'>Save Changes</div>\r\n                <div class=\'MainEditBox_Padding\'>\r\n                    <div class=\'MainEditBox\'>\r\n                        <div class=\'HeadLabels\'>&nbsp;\r\n                            <div class=\'Tip_PrimaryKey PK_OnlyNew\'>Primary Key</div>\r\n                            <div class=\'PK_Line1 PK_OnlyNew\'><div class=\'PK_Line2\'><span></span></div></div>\r\n\r\n                            <div class=\'HeadLabel1\'>Column<br />Position</div>\r\n                            <div class=\'HeadLabel2\'>Column Name</div>\r\n                            <div class=\'HeadLabel3\'>Data Type</div>\r\n                            <div class=\'HeadLabel4\'>Allow<br />Nulls</div>\r\n                            <div class=\'HeadLabel5\'>Default Value</div>\r\n                            <div class=\'clear\'></div>\r\n                        </div>\r\n                        <div class=\'Spacer1\'></div>\r\n                        <ul class=\'Holder_ColumnRows AutoResize\' AutoResize_BottomSpace=\'20\'></ul>\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow = function (model, viewModel){
    this.OnInsertBefore = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnColumnPositionChange = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnRequestRemove = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnGotoTab = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnColumnNameBlur = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnUpOrDownArrow = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.Original_ColumnValues = null;
    this.TypeSelector = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_Model(model);
    this.set_ViewModel(viewModel);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.IsInt = function (value){
    if (isNaN(value) || (" " + value).split(".").length > 1)
        return false;
    return true;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.get_ColumnPosition_Property = function (){
    var value = this.jF2(".Txt_ColumnPosition").val();
    if (!this.IsInt(value))
        this.set_ColumnPosition_Property(this.get_Model().OrdinalPosition);
    value = this.jF2(".Txt_ColumnPosition").val();
    return value;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.set_ColumnPosition_Property = function (value){
    if (this.IsInt(value)){
        this.jF2(".Txt_ColumnPosition").val(value);
        if (this.get_Model() != null)
            this.get_Model().OrdinalPosition = value;
        this.jRoot[0].style.zIndex = (10000 - value);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.get_ColumnName_Property = function (){
    return this.jF2(".Txt_ColumnName").val();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.set_ColumnName_Property = function (value){
    this.jF2(".Txt_ColumnName").val(value);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.get_DataType_Property = function (){
    return this.jF2(".Txt_DataType").val();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.set_DataType_Property = function (value){
    this.jF2(".Txt_DataType").val(value);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.get_AllowNulls_Property = function (){
    if (this.jF2(".CheckBox_AllowNulls").attr("checked") == "checked")
        return true;
    else
        return false;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.set_AllowNulls_Property = function (value){
    if (value)
        this.jF2(".CheckBox_AllowNulls").attr("checked", "checked");
    else
        this.jF2(".CheckBox_AllowNulls").attr("checked", false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.get_DefaultValue_Property = function (){
    return this.jF2(".Txt_DefaultValue").val();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.set_DefaultValue_Property = function (value){
    this.jF2(".Txt_DefaultValue").val(value);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.Get_UIObject = function (htmlElement){
    var rtn = null;
    try{
        eval("rtn = htmlElement.UIObject;");
    }
    catch($$e11){
    }
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<li class=\'ColumnsRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var tmpJRoot = this.jRoot;
    var thisObj = this;
    eval("tmpJRoot[0].UIObject = thisObj;");
    this.Original_ColumnValues = ASPdatabaseNET.DbInterfaces.TableObjects.Column.Clone(this.get_Model());
    if (this.get_ViewModel().IsCreateNew){
        this.jF2(".PK_CheckBox").show();
        this.jF2(".Txt_ColumnPosition").val(this.get_Model().OrdinalPosition);
        this.jF2(".Txt_ColumnName").val("");
        this.jF2(".Txt_DataType").val("");
        this.jF2(".Txt_DefaultValue").val("");
    }
    else {
        if (this.get_Model().IsPrimaryKey)
            this.jF2(".PK_Selected").show();
        else
            this.jF2(".PK_Empty").show();
        this.set_AllowNulls_Property(this.get_Model().AllowNulls);
        this.set_DefaultValue_Property(this.get_Model().DefaultValue);
        var str_FK_Counts = this.IfHas_ForeignKey_ReturnCounts();
        if (str_FK_Counts != null)
            this.jF2(".FK_Icon").show().attr("title", str_FK_Counts);
        var str_IX_Counts = this.IfHas_Index_ReturnCount();
        if (str_IX_Counts != null)
            this.jF2(".IX_Icon").show().attr("title", str_IX_Counts);
    }
    this.TypeSelector = new ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector();
    this.TypeSelector.set_ViewModel(this.get_ViewModel());
    this.TypeSelector.Instantiate();
    this.TypeSelector.OnChange.After.AddHandler(this, "TypeSelector_OnChange", 0);
    this.TypeSelector.Close();
    this.jF(".Holder_TypeSelector").append(this.TypeSelector.jRoot);
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.ConnectEvents_Sub = function (){
    ASPdb.FrameworkUI.Evt.Attach_ToElement("mousedown", this, this.jRoot[0], "OnMouseDown", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("mouseup", this, this.jRoot[0], "OnMouseUp", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("blur", this, this.jF2(".Txt_ColumnPosition")[0], "ColumnPosition_Blur", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("blur", this, this.jF2(".Txt_ColumnName")[0], "ColumnName_Blur", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("focus", this, this.jF2(".Txt_DataType")[0], "Txt_DataType_Focus", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("blur", this, this.jF2(".Txt_DataType")[0], "Txt_DataType_Blur", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("blur", this, this.jF2(".CheckBox_AllowNulls")[0], "AnyField_Blur", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("click", this, this.jF2(".CheckBox_AllowNulls")[0], "AnyField_Blur", null);
    ASPdb.FrameworkUI.Evt.Attach_ToElement("blur", this, this.jF2(".Txt_DefaultValue")[0], "AnyField_Blur", null);
    var thisObj = this;
    var jRootObj = this.jRoot;
    eval("jRootObj.find(\'.Txt_ColumnPosition\').keydown(function(event) { thisObj.OnKeyDown_Generic(event, \'.Txt_ColumnPosition\') });");
    eval("jRootObj.find(\'.Txt_ColumnName\').keydown(function(event) { thisObj.OnKeyDown_Generic(event, \'.Txt_ColumnName\') });");
    eval("jRootObj.find(\'.Txt_DataType\').keydown(function(event) { thisObj.OnKeyDown_Generic(event, \'.Txt_DataType\'); thisObj.Txt_DataType_Changed(); });");
    eval("jRootObj.find(\'.Txt_DefaultValue\').keydown(function(event) { thisObj.OnKeyDown_Generic(event, \'.Txt_DefaultValue\') });");
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.IfHas_ForeignKey_ReturnCounts = function (){
    var counter_PK = 0;
    var counter_FK = 0;
    if (this.get_Model() == null || this.get_ViewModel() == null || this.get_ViewModel().TableStructure == null)
        return null;
    var pk_List = this.get_ViewModel().TableStructure.ForeignKeys_PK;
    if (pk_List != null)
        for (var i = 0; i < pk_List.length; i++){
            var cols = pk_List[i].Columns;
            for (var j = 0; j < cols.length; j++)
                if (cols[j].PrimaryKey_ColumnName == this.get_Model().ColumnName)
                    counter_PK++;
        }
    var fk_List = this.get_ViewModel().TableStructure.ForeignKeys_FK;
    if (fk_List != null)
        for (var i = 0; i < fk_List.length; i++){
            var cols = fk_List[i].Columns;
            for (var j = 0; j < cols.length; j++)
                if (cols[j].ForeignKey_ColumnName == this.get_Model().ColumnName)
                    counter_FK++;
        }
    if (counter_PK + counter_FK == 0)
        return null;
    else
        return "PK Count: " + counter_PK + "\nFK Count: " + counter_FK + "";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.IfHas_Index_ReturnCount = function (){
    var counter = 0;
    if (this.get_Model() == null || this.get_ViewModel() == null || this.get_ViewModel().TableStructure == null || this.get_ViewModel().TableStructure.Indexes == null)
        return null;
    var ix_List = this.get_ViewModel().TableStructure.Indexes;
    for (var i = 0; i < ix_List.length; i++){
        var cols = ix_List[i].Columns;
        for (var j = 0; j < cols.length; j++)
            if (cols[j].ColumnName == this.get_Model().ColumnName)
                counter++;
    }
    if (counter == 0)
        return null;
    else
        return "Index Count: " + counter + "";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.HasValidContent = function (){
    var rtn = true;
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.SaveToModel = function (){
    this.get_Model().OrdinalPosition = this.get_ColumnPosition_Property();
    this.get_Model().ColumnName = this.get_ColumnName_Property();
    this.get_Model().DataType = this.get_DataType_Property();
    this.get_Model().AllowNulls = this.get_AllowNulls_Property();
    var seed = 1,increment = 1;
    if ((this.get_Model().DataType).toLowerCase().indexOf("identity") > -1){
        try{
            var arr1 = (this.get_Model().DataType).split("(");
            var arr2 = arr1[1].split(")")[0].split(",");
            seed = arr2[0].trim();
            increment = arr2[1].trim();
        }
        catch($$e12){
        }
        if ((this.get_Model().DataType).toLowerCase().indexOf("bigint") > -1)
            this.get_Model().DataType = "id64";
        else
            this.get_Model().DataType = "id";
    }
    if (this.get_Model().DataType == "id"){
        this.get_Model().DataType = "int";
        this.get_Model().IsIdentity = true;
        this.get_Model().Identity = new ASPdatabaseNET.DbInterfaces.TableObjects.Identity();
        this.get_Model().Identity.ColumnName = this.get_Model().ColumnName;
        this.get_Model().Identity.Seed = seed;
        this.get_Model().Identity.Increment = increment;
    }
    else if (this.get_Model().DataType == "id64"){
        this.get_Model().DataType = "bigint";
        this.get_Model().IsIdentity = true;
        this.get_Model().Identity = new ASPdatabaseNET.DbInterfaces.TableObjects.Identity();
        this.get_Model().Identity.ColumnName = this.get_Model().ColumnName;
        this.get_Model().Identity.Seed = seed;
        this.get_Model().Identity.Increment = increment;
    }
    this.get_Model().DefaultValue = null;
    if (this.get_DefaultValue_Property().length > 0)
        this.get_Model().DefaultValue = this.get_DefaultValue_Property();
    return this.get_Model();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.PK_CheckBox_Click = function (){
    this.get_Model().IsPrimaryKey = true;
    this.jF2(".PK_CheckBox").hide();
    this.jF2(".PK_Selected").show();
    this.jF2(".Txt_ColumnName").focus();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.IconClici_PK = function (){
    if (this.get_ViewModel().IsCreateNew){
        this.get_Model().IsPrimaryKey = false;
        this.jF2(".PK_Selected").hide();
        this.jF2(".PK_CheckBox").show();
        this.jF2(".PK_CheckBoxInput").attr("checked", false);
        this.jF2(".Txt_ColumnName").focus();
    }
    else
        this.OnGotoTab.After.Fire1("PK");
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.IconClici_FK = function (){
    this.OnGotoTab.After.Fire1("FK");
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.IconClici_IX = function (){
    this.OnGotoTab.After.Fire1("IX");
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.BttnInsert_Click = function (){
    this.OnInsertBefore.After.Fire1(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.BttnDelete_Click_1 = function (){
    if (this.get_Model().ChangeAction == 1)
        this.OnRequestRemove.After.Fire1(this);
    else {
        this.get_Model().ChangeAction = 2;
        this.jF2(".DeleteBttn").hide();
        this.jF2(".DeleteBttn_Clicked").show();
        this.jF2(".IconsWrapper").hide();
        this.OnChange.After.Fire();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.BttnDelete_Click_2 = function (){
    this.get_Model().ChangeAction = 3;
    this.jF2(".DeleteBttn_Clicked").hide();
    this.jF2(".DeleteBttn").show();
    this.jF2(".IconsWrapper").show();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.OnMouseDown = function (){
    this.jRoot.addClass("ColumnsRow_MouseDown");
    $(".GlobalClass_ColumnsRow_InsertBttn").addClass("BttnInsert_Faded");
    this.jF2(".LeftPadding").hide();
    this.jF("input").blur();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.OnMouseUp = function (){
    this.jRoot.removeClass("ColumnsRow_MouseDown");
    $(".GlobalClass_ColumnsRow_InsertBttn").removeClass("BttnInsert_Faded");
    this.jF2(".LeftPadding").show();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.ColumnPosition_Blur = function (){
    if (this.get_ColumnPosition_Property() == this.get_Model().OrdinalPosition)
        return;
    else
        this.OnColumnPositionChange.After.Fire1(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.ColumnName_Blur = function (){
    this.OnColumnNameBlur.After.Fire();
    this.AnyField_Blur();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.AnyField_Blur = function (){
    var somethingChanged = false;
    if (this.get_ColumnName_Property() != this.Original_ColumnValues.ColumnName)
        somethingChanged = true;
    else if (this.get_DataType_Property() != this.Original_ColumnValues.DataType)
        somethingChanged = true;
    else if (this.get_AllowNulls_Property() != this.Original_ColumnValues.AllowNulls)
        somethingChanged = true;
    else if (this.get_DefaultValue_Property() != this.Original_ColumnValues.DefaultValue){
        if (this.get_DefaultValue_Property() == "" && this.Original_ColumnValues.DefaultValue == null){
        }
        else {
            somethingChanged = true;
        }
    }
    if (somethingChanged)
        this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.OnKeyDown_Generic = function (evt, className){
    switch (evt.keyCode){
        case 27:
            this.jF2(className).blur();
            break;
        case 37:
            break;
        case 38:
            this.OnUpOrDownArrow.After.Fire2(this.get_ColumnPosition_Property() - 2, className);
            break;
        case 39:
            break;
        case 40:
            this.OnUpOrDownArrow.After.Fire2(this.get_ColumnPosition_Property(), className);
            break;
        case 13:
            break;
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.PutFocusOn = function (className){
    this.jF2(className).focus();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.Txt_DataType_Focus = function (){
    this.TypeSelector.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.Txt_DataType_Blur = function (){
    this.AnyField_Blur();
    this.TypeSelector.DelayClose();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.Txt_DataType_Changed = function (){
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.TypeSelector_OnChange = function (){
    this.set_DataType_Property(this.TypeSelector.get_Model());
    this.AnyField_Blur();
    if (this.TypeSelector.IsOpen)
        this.TypeSelector.Close();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow_TypeSelector.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.GetCssRoot = function (){
    return "\r\n                .ColumnsRow { position:relative; line-height: 28px; border-bottom: 1px solid #d6d6d6; padding-left: 52px; background: #fff; }\r\n\r\n                .ColumnsRow .BttnInsert { position: absolute; left: 0px; top: 0px;\r\n                                          line-height: 15px; width: 47px; \r\n                                          border-radius: 7px;  border: 1px solid #6f7074;\r\n                                          font-size: .65em; text-align:center; background: #d7d8dc; color: #6f7074; cursor:pointer; z-index: 100; }\r\n                .ColumnsRow .BttnInsert:hover { background: #333; color: #fff; border-color: #333; }\r\n                .ColumnsRow .BttnInsert_Faded { opacity: .3; }\r\n\r\n\r\n                .ColumnsRow .LeftPadding { position:absolute; top: 0px; left: 0px; height: 30px; width:52px; background: #979aa5; z-index: 50; }\r\n\r\n                .ColumnsRow .PositionHandle { position:relative; float:left; width: 85px; color: #507bb3; cursor:pointer; }\r\n                .ColumnsRow .PositionHandle:hover { }\r\n                .ColumnsRow .PositionHandle .SixDots { width: 42px; text-align:center; }\r\n                .ColumnsRow .PositionHandle .Txt_ColumnPosition { position:absolute; top: 4px; right: 11px;\r\n                                                                  width:32px; line-height: 18px; height: 18px; color: #6d6d6d; padding: 0px; \r\n                                                                  border: 1px solid #e1e1e1; text-align: center; font-size: .75em; }\r\n\r\n                .ColumnsRow .PK_IconHolder { float:left; width: 55px; height: 28px; border-right: 1px solid #e8e8e8; text-align:center; font-size: .7em; }\r\n                .ColumnsRow .PK_IconHolder .PK_Empty { display:none; }\r\n                .ColumnsRow .PK_IconHolder .PK_Selected { display:none; line-height: 21px; height: 21px; width: 23px; margin:auto; margin-top: 4px; margin-bottom: 0px; \r\n                                                          background: #f26b0b; color: #fff; border-radius: 2px; cursor:pointer; }\r\n                .ColumnsRow .PK_IconHolder .PK_CheckBox { display:none; line-height: 21px; height: 21px; width: 27px; margin:auto; padding-top: 6px; }\r\n                .ColumnsRow .PK_IconHolder .PK_CheckBox .PK_CheckBoxInput { }\r\n\r\n                .ColumnsRow .Div_ColumnName { float:left; width: 195px; border-right: 1px solid #e8e8e8; }\r\n                .ColumnsRow .Div_ColumnName .Txt_ColumnName { width: 185px; line-height: 26px; height: 26px; padding: 0px 5px; font-size: .8em; }\r\n\r\n                .ColumnsRow .Div_DataType { position:relative; float:left; width: 154px; border-right: 1px solid #e8e8e8; }\r\n                .ColumnsRow .Div_DataType .Txt_DataType { width: 144px; line-height: 26px; height: 26px; padding: 0px 5px; font-size: .8em; }\r\n                .ColumnsRow .Div_DataType .Holder_TypeSelector { position:absolute; }\r\n\r\n                .ColumnsRow .Div_AllowNulls { float:left; width: 55px; border-right: 1px solid #e8e8e8; text-align: center; }\r\n                .ColumnsRow .Div_AllowNulls .CheckBox_AllowNulls {  }\r\n\r\n                .ColumnsRow .Div_DefaultValue { float:left; width: 190px; border-right: 1px solid #e8e8e8; }\r\n                .ColumnsRow .Div_DefaultValue .Txt_DefaultValue { width: 180px; line-height: 26px; height: 26px; padding: 0px 5px; font-size: .8em; }\r\n\r\n                .ColumnsRow .RightSideIcons { position:relative; float:right; font-size: .7em; text-align:center; }\r\n                .ColumnsRow .RightSideIcons .FK_Icon { display:none; position:absolute; top: 3px; right: 97px;\r\n                                                       line-height: 21px; height: 21px; width: 23px; \r\n                                                       background: #0b94da; color: #fff; border-radius: 2px; cursor:pointer; }\r\n                .ColumnsRow .RightSideIcons .IX_Icon { display:none; position:absolute; top: 3px; right: 68px; \r\n                                                       line-height: 21px; height: 21px; width: 23px; \r\n                                                       background: #6cc5aa; color: #fff; border-radius: 2px; cursor:pointer; }\r\n                .ColumnsRow .RightSideIcons .DeleteBttn { position:absolute; top: 7px; right: 5px; line-height: 13px; width: 52px; cursor:pointer;  \r\n                                                          color: #5d5d5d; border: 1px solid #ccc; border-radius: 7px; font-size: .9em; }\r\n                .ColumnsRow .RightSideIcons .DeleteBttn:hover { background: #194e8d; color: #fff; border-color: #194e8d; }\r\n                .ColumnsRow .RightSideIcons .DeleteBttn_Clicked { display:none; position:absolute; top: 7px; right: 5px; z-index:500;\r\n                                                                  line-height: 13px; width: 110px; cursor:pointer; background: #194e8d;\r\n                                                                  color: #fff; border: 1px solid #194e8d; border-radius: 7px; font-size: .9em; }\r\n                .ColumnsRow .RightSideIcons .DeleteBttn_Clicked:hover { background: #111; }\r\n\r\n\r\n\r\n                .ColumnsRow_MouseDown { background:#c6d8f1; margin-left: 0px; padding-left: 52px; }\r\n                .ColumnsRow_MouseDown input { background:#c6d8f1; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'BttnInsert GlobalClass_ColumnsRow_InsertBttn\' On_Click=\'BttnInsert_Click\'>Insert</div>\r\n                <div class=\'LeftPadding\'>&nbsp;</div>\r\n                \r\n                <div class=\'PositionHandle\'>\r\n                    <div class=\'SixDots\'>:::</div>\r\n                    <input type=\'text\' class=\'Txt_ColumnPosition\' ModelKey=\'OrdinalPosition\' />\r\n                </div>\r\n\r\n                <div class=\'PK_IconHolder\'>\r\n                    <div class=\'PK_Empty\'>&nbsp;</div>\r\n                    <div class=\'PK_Selected\' On_Click=\'IconClici_PK\'>PK</div>\r\n                    <div class=\'PK_CheckBox\' On_Click=\'PK_CheckBox_Click\'>\r\n                        <input type=\'checkbox\' class=\'PK_CheckBoxInput\' On_Click=\'PK_CheckBox_Click\' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\'Div_ColumnName\'>\r\n                    <input type=\'text\' class=\'Txt_ColumnName\' ModelKey=\'ColumnName\' />\r\n                </div>\r\n\r\n                <div class=\'Div_DataType\'>\r\n                    <input type=\'text\' class=\'Txt_DataType\' ModelKey=\'DataType\' />\r\n                    <div class=\'Holder_TypeSelector\'></div>\r\n                </div>\r\n\r\n                <div class=\'Div_AllowNulls\'>\r\n                    <input type=\'checkbox\' class=\'CheckBox_AllowNulls\' />\r\n                </div>\r\n\r\n                <div class=\'Div_DefaultValue\'>\r\n                    <input type=\'text\' class=\'Txt_DefaultValue\' />\r\n                </div>\r\n\r\n                <div class=\'RightSideIcons\'>\r\n                    <div class=\'IconsWrapper\'>\r\n                        <div class=\'FK_Icon\' On_Click=\'IconClici_FK\'>FK</div>\r\n                        <div class=\'IX_Icon\' On_Click=\'IconClici_IX\'>IX</div>\r\n                    </div>\r\n                    <div class=\'DeleteBttn\' On_Click=\'BttnDelete_Click_1\'>Delete</div>      \r\n                    <div class=\'DeleteBttn_Clicked\' On_Click=\'BttnDelete_Click_2\'>Delete On Save</div>      \r\n                </div>\r\n\r\n                <div class=\'clear\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsRow, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector = function (isNew, relationshipSide, viewModel){
    this.RelationshipSide = 0;
    this.IsNew = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.IsNew = isNew;
    this.RelationshipSide = relationshipSide;
    this.set_ViewModel(viewModel);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'ForeignKeysEdit_ColumnsSelector jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.Refresh(false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.prototype.Refresh = function (disable){
    if (disable)
        this.jF("select").attr("disabled", "disabled").addClass("SelectGrayed");
    else
        this.jF("select").removeAttr("disabled").removeClass("SelectGrayed");
    var leftSelect = this.jF(".Select_Column_ForeignKey");
    var rightSelect = this.jF(".Select_Column_PrimaryKey");
    leftSelect.html("<option value=\'\'></option>");
    rightSelect.html("<option value=\'\'></option>");
    var otherTable = this.get_ViewModel().TableStructure_TempOtherTable;
    var thisTable = this.get_ViewModel().TableStructure;
    if (this.RelationshipSide == 1){
        if (otherTable != null)
            for (var i = 0; i < otherTable.Columns.length; i++)
                leftSelect.append(ASPdb.FrameworkUI.JsStr.StrFormat2("<option value=\'{0}\'>{1}</option>", otherTable.Columns[i].ColumnName, otherTable.Columns[i].ColumnName));
        for (var i = 0; i < thisTable.Columns.length; i++)
            rightSelect.append(ASPdb.FrameworkUI.JsStr.StrFormat2("<option value=\'{0}\'>{1}</option>", thisTable.Columns[i].ColumnName, thisTable.Columns[i].ColumnName));
    }
    else if (this.RelationshipSide == 2){
        for (var i = 0; i < thisTable.Columns.length; i++)
            leftSelect.append(ASPdb.FrameworkUI.JsStr.StrFormat2("<option value=\'{0}\'>{1}</option>", thisTable.Columns[i].ColumnName, thisTable.Columns[i].ColumnName));
        if (otherTable != null)
            for (var i = 0; i < otherTable.Columns.length; i++)
                rightSelect.append(ASPdb.FrameworkUI.JsStr.StrFormat2("<option value=\'{0}\'>{1}</option>", otherTable.Columns[i].ColumnName, otherTable.Columns[i].ColumnName));
    }
    if (!this.IsNew){
        this.jF(".Select_Column_ForeignKey").val(this.get_Model().ForeignKey_ColumnName);
        this.jF(".Select_Column_PrimaryKey").val(this.get_Model().PrimaryKey_ColumnName);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.prototype.IsNotEmpty = function (){
    var pk = this.jF(".Select_Column_ForeignKey").val();
    var fk = this.jF(".Select_Column_PrimaryKey").val();
    if (pk.length > 0)
        return true;
    if (fk.length > 0)
        return true;
    return false;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.prototype.GetModel_ForSave = function (){
    var rtn = new ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKeyColumn();
    rtn.ForeignKey_ColumnName = this.jF(".Select_Column_ForeignKey").val();
    rtn.PrimaryKey_ColumnName = this.jF(".Select_Column_PrimaryKey").val();
    if (rtn.ForeignKey_ColumnName.length < 1 || rtn.PrimaryKey_ColumnName.length < 1)
        return null;
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.prototype.Select_Changed = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.GetCssRoot = function (){
    return "\r\n                .ForeignKeysEdit_ColumnsSelector { }\r\n                .ForeignKeysEdit_ColumnsSelector td { padding-top: 3px; }\r\n                .ForeignKeysEdit_ColumnsSelector select { width: 192px; min-width: 192px; max-width: 192px; margin-top:0px; }\r\n                .ForeignKeysEdit_ColumnsSelector .SelectGrayed { background: #e7e7e7; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'Td1b\'><select class=\'Select_Column_ForeignKey\' On_Change=\'Select_Changed\'></select></td>\r\n                <td class=\'Td2b\'> --&gt; </td>\r\n                <td class=\'Td3b\'><select class=\'Select_Column_PrimaryKey\' On_Change=\'Select_Changed\'></select></td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem = function (){
    this.ForeignKeysEdit = null;
    this.OnEdit_Enter = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnEdit_Exit = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ForeignKeysItem jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    this.jF(".ConstraintName").html(this.get_Model().ConstraintName);
    this.jF(".ForeignKey_Table").html("<span>" + this.get_Model().ForeignKey_Schema + ".</span>" + this.get_Model().ForeignKey_TableName);
    this.jF(".PrimaryKey_Table").html("<span>" + this.get_Model().PrimaryKey_Schema + ".</span>" + this.get_Model().PrimaryKey_TableName);
    this.jF(".ForeignKey_Table").attr("title", this.get_Model().ForeignKey_Schema + "." + this.get_Model().ForeignKey_TableName);
    this.jF(".PrimaryKey_Table").attr("title", this.get_Model().PrimaryKey_Schema + "." + this.get_Model().PrimaryKey_TableName);
    var columnsFK = "";
    var columnsArrows = "";
    var columnsPK = "";
    for (var i = 0; i < this.get_Model().Columns.length; i++){
        columnsFK += this.get_Model().Columns[i].ForeignKey_ColumnName + "<br />";
        columnsArrows += "--&gt;<br />";
        columnsPK += this.get_Model().Columns[i].PrimaryKey_ColumnName + "<br />";
    }
    this.jF(".ForeignKey_Columns").html(columnsFK);
    this.jF(".ColumnsArrowTd").html(columnsArrows);
    this.jF(".PrimaryKey_Columns").html(columnsPK);
    var strDeleteRule = this.GetCascadeOptionString(this.get_Model().DeleteRule);
    var strUpdateRule = this.GetCascadeOptionString(this.get_Model().UpdateRule);
    if (strDeleteRule != "NoAction"){
        this.jF(".Td_DeleteRule").html("Delete Rule: " + strDeleteRule);
        this.jF(".DeleteUpdateRulesRow").show();
    }
    if (strUpdateRule != "NoAction"){
        this.jF(".Td_UpdateRule").html("Update Rule: " + strUpdateRule);
        this.jF(".DeleteUpdateRulesRow").show();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.GetCascadeOptionString = function (cascadeOption){
    switch (cascadeOption){
        case 0:
            return "NoAction";
        case 1:
            return "Cascade";
        case 3:
            return "SetDefault";
        case 2:
            return "SetNull";
        default:
            return "NoAction";
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.DisableBttns = function (){
    this.jF2(".Bttn2").hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.EnableBttns = function (){
    this.jF2(".Bttn2").show();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.Edit_Click = function (){
    if (this.ForeignKeysEdit == null){
        var relSide = 1;
        if (this.get_Model().RelationshipSide == 1)
            relSide = 2;
        this.ForeignKeysEdit = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit(false, relSide, this.get_ViewModel());
        this.ForeignKeysEdit.set_Model(this.get_Model());
        this.ForeignKeysEdit.Instantiate();
        this.ForeignKeysEdit.OnClose.After.AddHandler(this, "EditControl_Close", 0);
        this.ForeignKeysEdit.OnChange.After.AddHandler(this, "EditControl_Saved", 0);
        this.jF2(".EditDiv").append(this.ForeignKeysEdit.jRoot);
    }
    this.OnEdit_Enter.After.Fire();
    this.jF2(".ViewDiv").hide();
    this.ForeignKeysEdit.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.Delete_Click = function (){
    if (confirm("Are you sure?")){
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Delete_Return").TableDesign__ForeignKeys__Delete(this.get_Model());
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.Delete_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.EditControl_Close = function (){
    this.jF2(".ViewDiv").show();
    this.OnEdit_Exit.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.EditControl_Saved = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.GetCssRoot = function (){
    return "\r\n                .ForeignKeysItem { margin: 0px 0px 20px; }\r\n                .ForeignKeysItem .ViewDiv {  }\r\n                .ForeignKeysItem .EditDiv { }\r\n\r\n                .ForeignKeysItem .ViewDiv .TopHead { line-height: 16px; background: #0b94da; color: #fff; }\r\n                .ForeignKeysItem .ViewDiv .TopHead .ConstraintName { font-size: .6em; color: #b3daee; float: left; padding-left: 10px; width: 296px; overflow:hidden; white-space:nowrap; }\r\n                .ForeignKeysItem .ViewDiv .TopHead .Bttn2 { float: right; font-size: .7em; border-left: 1px solid #fff; padding: 0px 17px; cursor:pointer; }\r\n                .ForeignKeysItem .ViewDiv .TopHead .Bttn2:hover { background: #555; }\r\n                .ForeignKeysItem .ViewDiv .Table2 { width: 100%; }\r\n                .ForeignKeysItem .ViewDiv .Table2 td { line-height: 22px; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .Td1a { width: 50%; text-align: right; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .Td2a { width: 40px; min-width: 40px; max-width: 40px; text-align:center; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .Td3a { width: 50%; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .TableRow {  }\r\n                .ForeignKeysItem .ViewDiv .Table2 .TableRow td { font-size: .9em; background: #e7e7e7; white-space:nowrap; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .TableRow span { font-size: .7em; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .ColumnRow {  }\r\n                .ForeignKeysItem .ViewDiv .Table2 .ColumnRow td { font-size: .7em; background: #f3f3f3; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .ColumnRow .ColumnsArrowTd { color: #999; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .ForeignKey_Table   { max-width: 200px; overflow-x:hidden; float:right; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .PrimaryKey_Table   { max-width: 200px; overflow-x:hidden; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .ForeignKey_Columns { max-width: 200px; overflow-x:hidden; float:right; }\r\n                .ForeignKeysItem .ViewDiv .Table2 .PrimaryKey_Columns { max-width: 200px; overflow-x:hidden; }\r\n                .ForeignKeysItem .ViewDiv .DeleteUpdateRulesRow { display:none;  }\r\n                .ForeignKeysItem .ViewDiv .DeleteUpdateRulesRow td { border-top: 1px solid #e7e7e7; background: #f3f3f3;\r\n                                                                     font-size: .8em; color: #999; }\r\n                .ForeignKeysItem .ViewDiv .DeleteUpdateRulesRow .Td_DeleteRule { text-align:right; }\r\n                .ForeignKeysItem .ViewDiv .DeleteUpdateRulesRow .Td_UpdateRule { text-align:left; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'ViewDiv\'>\r\n                    <div class=\'TopHead\'>\r\n                        <div class=\'ConstraintName\'></div>\r\n                        <div class=\'Bttn2\' On_Click=\'Delete_Click\'>Delete</div>\r\n                        <div class=\'Bttn2\' On_Click=\'Edit_Click\'>Edit</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <table class=\'Table2\'>\r\n                        <tr class=\'TableRow\'>\r\n                            <td class=\'Td1a\'><div class=\'ForeignKey_Table\'></div></td>\r\n                            <td class=\'Td2a\'>--&gt;</td>\r\n                            <td class=\'Td3a\'><div class=\'PrimaryKey_Table\'></div></td>\r\n                        </tr>\r\n                        <tr class=\'ColumnRow\'>\r\n                            <td class=\'Td1a\'><div class=\'ForeignKey_Columns\'></div></td>\r\n                            <td class=\'Td2a ColumnsArrowTd\'>--&gt;</td>\r\n                            <td class=\'Td3a\'><div class=\'PrimaryKey_Columns\'></div></td>\r\n                        </tr>\r\n                        <tr class=\'DeleteUpdateRulesRow\'>\r\n                            <td class=\'Td_DeleteRule\'></td>\r\n                            <td class=\'\'></td>\r\n                            <td class=\'Td_UpdateRule\'></td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div class=\'EditDiv\'>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit = function (isNew, relationshipSide, viewModel){
    this.RelationshipSide = 0;
    this.IsNew = false;
    this.ColumnsSelectors = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.IsNew = isNew;
    this.RelationshipSide = relationshipSide;
    this.set_ViewModel(viewModel);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ForeignKeysEdit jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.IsNew && this.RelationshipSide == 1){
        this.jF(".EditHead1").show();
    }
    else if (this.IsNew && this.RelationshipSide == 2){
        this.jF(".EditHead2").show();
    }
    else if (!this.IsNew && this.RelationshipSide == 1){
        var s = this.jF(".EditHead3 .MaxWidth").html() + "<span>" + this.get_Model().ConstraintName + "</span>";
        this.jF(".EditHead3 .MaxWidth").html(s);
        this.jF(".EditHead3").show();
    }
    else if (!this.IsNew && this.RelationshipSide == 2){
        var s = this.jF(".EditHead4 .MaxWidth").html() + "<span>" + this.get_Model().ConstraintName + "</span>";
        this.jF(".EditHead4 .MaxWidth").html(s);
        this.jF(".EditHead4").show();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Open_Sub = function (){
    if (this.IsNew){
        this.set_Model(new ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKey());
        this.get_Model().ConnectionId = this.get_ViewModel().ConnectionId;
        this.get_Model().ConstraintName = "";
        if (this.RelationshipSide == 1)
            this.get_Model().RelationshipSide = 1;
        else
            this.get_Model().RelationshipSide = 2;
        this.get_Model().Columns = new Array(0);
        for (var i = 0; i < 3; i++)
            this.get_Model().Columns[i] = new ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKeyColumn();
    }
    this.ColumnsSelectors = new Array(0);
    this.get_ViewModel().TableStructure_TempOtherTable = null;
    this.jF2(".Table_ColumnsSelectors").html("");
    for (var i = 0; i < this.get_Model().Columns.length; i++)
        this.Insert_ColumnsSelector(this.get_Model().Columns[i]);
    if (!this.IsNew)
        this.Insert_ColumnsSelector(new ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKeyColumn());
    var thisTable = "";
    if (this.get_ViewModel() != null && this.get_ViewModel().TableStructure != null)
        thisTable = this.get_ViewModel().TableStructure.Schema + "." + this.get_ViewModel().TableStructure.TableName;
    switch (this.RelationshipSide){
        case 1:
            this.Populate_TablesSelect(this.jF(".Select_Table_ForeignKey"));
            this.jF(".Select_Table_ForeignKey").show();
            if (!this.IsNew){
            this.jF(".Select_Table_ForeignKey").val(this.get_ViewModel().GetTableId(this.get_Model().ForeignKey_Schema, this.get_Model().ForeignKey_TableName));
            this.Select_Table_ForeignKey_Change();
        }
            this.jF(".Div_Table_PrimaryKey").show().html(thisTable);
            break;
        case 2:
            this.jF(".Div_Table_ForeignKey").show().html(thisTable);
            this.Populate_TablesSelect(this.jF(".Select_Table_PrimaryKey"));
            this.jF(".Select_Table_PrimaryKey").show();
            if (!this.IsNew){
            this.jF(".Select_Table_PrimaryKey").val(this.get_ViewModel().GetTableId(this.get_Model().PrimaryKey_Schema, this.get_Model().PrimaryKey_TableName));
            this.Select_Table_PrimaryKey_Change();
        }
            break;
    }
    switch (this.get_Model().DeleteRule){
        case 0:
            this.jF(".DeleteRuleRadio1").attr("checked", true);
            break;
        case 1:
            this.jF(".DeleteRuleRadio2").attr("checked", true);
            break;
        case 3:
            this.jF(".DeleteRuleRadio3").attr("checked", true);
            break;
        case 2:
            this.jF(".DeleteRuleRadio4").attr("checked", true);
            break;
    }
    switch (this.get_Model().UpdateRule){
        case 0:
            this.jF(".UpdateRuleRadio1").attr("checked", true);
            break;
        case 1:
            this.jF(".UpdateRuleRadio2").attr("checked", true);
            break;
        case 3:
            this.jF(".UpdateRuleRadio3").attr("checked", true);
            break;
        case 2:
            this.jF(".UpdateRuleRadio4").attr("checked", true);
            break;
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Insert_ColumnsSelector = function (column){
    var i = this.ColumnsSelectors.length;
    this.ColumnsSelectors[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector(this.IsNew, this.RelationshipSide, this.get_ViewModel());
    this.ColumnsSelectors[i].set_Model(column);
    this.ColumnsSelectors[i].Instantiate();
    this.ColumnsSelectors[i].OnChange.After.AddHandler(this, "ColumnsSelector_Changed", 0);
    this.jF2(".Table_ColumnsSelectors").append(this.ColumnsSelectors[i].jRoot);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Populate_TablesSelect = function (select){
    select.html("<option value=\'-1\'></option>");
    var tables = this.get_ViewModel().AllTables_InDb;
    if (tables == null)
        return;
    for (var i = 0; i < tables.length; i++){
        var item = tables[i];
        var s = ASPdb.FrameworkUI.JsStr.StrFormat3("<option value=\'{0}\'>{1}.{2}</option>", item.TableId, item.Schema, item.TableName);
        select.append(s);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Save_Click = function (){
    if (!this.PopulateModel_FromUI())
        return;
    var m = this.get_Model();
    if (this.IsNew)
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__ForeignKeys__Create(this.get_Model());
    else
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__ForeignKeys__Update(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Save_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.PopulateModel_FromUI = function (){
    var tableId_FK = this.get_ViewModel().TableId;
    var tableId_PK = this.get_ViewModel().TableId;
    if (this.RelationshipSide == 1)
        tableId_FK = this.jF(".Select_Table_ForeignKey").val();
    else
        tableId_PK = this.jF(".Select_Table_PrimaryKey").val();
    if (tableId_FK < 0 || tableId_PK < 0){
        alert("Please select a table");
        return false;
    }
    var table_FK = this.get_ViewModel().GetTableInfo(tableId_FK);
    var table_PK = this.get_ViewModel().GetTableInfo(tableId_PK);
    this.get_Model().ForeignKey_Schema = table_FK.Schema;
    this.get_Model().ForeignKey_TableName = table_FK.TableName;
    this.get_Model().PrimaryKey_Schema = table_PK.Schema;
    this.get_Model().PrimaryKey_TableName = table_PK.TableName;
    this.get_Model().Columns = new Array(0);
    var j = 0;
    for (var i = 0; i < this.ColumnsSelectors.length; i++){
        var foreignKeyColumn = this.ColumnsSelectors[i].GetModel_ForSave();
        if (foreignKeyColumn != null){
            foreignKeyColumn.OrdinalPosition = j + 1;
            this.get_Model().Columns[j] = foreignKeyColumn;
            j++;
        }
    }
    var deleteRule = this.jF(".DeleteRuleRadio:checked").val();
    var updateRule = this.jF(".UpdateRuleRadio:checked").val();
    switch (deleteRule){
        case "NoAction":
            this.get_Model().DeleteRule = 0;
            break;
        case "Cascade":
            this.get_Model().DeleteRule = 1;
            break;
        case "SetDefault":
            this.get_Model().DeleteRule = 3;
            break;
        case "SetNull":
            this.get_Model().DeleteRule = 2;
            break;
        default:
            this.get_Model().DeleteRule = 0;
            break;
    }
    switch (updateRule){
        case "NoAction":
            this.get_Model().UpdateRule = 0;
            break;
        case "Cascade":
            this.get_Model().UpdateRule = 1;
            break;
        case "SetDefault":
            this.get_Model().UpdateRule = 3;
            break;
        case "SetNull":
            this.get_Model().UpdateRule = 2;
            break;
        default:
            this.get_Model().UpdateRule = 0;
            break;
    }
    return true;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Cancel_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Select_Table_ForeignKey_Change = function (){
    var tableId = this.jF2(".Select_Table_ForeignKey").val();
    this.get_ViewModel().TableStructure_TempOtherTable = null;
    this.Refresh_ColumnsSelectors(true);
    if (tableId >= 0)
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetTableInfo_Return").TableDesign__GetInfo_ForModify(tableId);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Select_Table_PrimaryKey_Change = function (){
    var tableId = this.jF2(".Select_Table_PrimaryKey").val();
    this.get_ViewModel().TableStructure_TempOtherTable = null;
    this.Refresh_ColumnsSelectors(true);
    if (tableId >= 0)
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetTableInfo_Return").TableDesign__GetInfo_ForModify(tableId);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.GetTableInfo_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var response = ajaxResponse.ReturnObj;
    this.get_ViewModel().TableStructure_TempOtherTable = response.TableStructure;
    this.Refresh_ColumnsSelectors(false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.Refresh_ColumnsSelectors = function (disable){
    for (var i = 0; i < this.ColumnsSelectors.length; i++)
        this.ColumnsSelectors[i].Refresh(disable);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.ColumnsSelector_Changed = function (){
    if (this.ColumnsSelectors == null)
        this.ColumnsSelectors = new Array(0);
    var i = this.ColumnsSelectors.length - 1;
    if (i < 0 || this.ColumnsSelectors[i].IsNotEmpty())
        this.Insert_ColumnsSelector(new ASPdatabaseNET.DbInterfaces.TableObjects.ForeignKeyColumn());
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.DeleteRuleRadio1_Click = function (){
    this.jF(".DeleteRuleRadio1").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.DeleteRuleRadio2_Click = function (){
    this.jF(".DeleteRuleRadio2").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.DeleteRuleRadio3_Click = function (){
    this.jF(".DeleteRuleRadio3").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.DeleteRuleRadio4_Click = function (){
    this.jF(".DeleteRuleRadio4").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.UpdateRuleRadio1_Click = function (){
    this.jF(".UpdateRuleRadio1").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.UpdateRuleRadio2_Click = function (){
    this.jF(".UpdateRuleRadio2").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.UpdateRuleRadio3_Click = function (){
    this.jF(".UpdateRuleRadio3").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.UpdateRuleRadio4_Click = function (){
    this.jF(".UpdateRuleRadio4").attr("checked", true);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit_ColumnsSelector.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.GetCssRoot = function (){
    return "\r\n                .ForeignKeysEdit { background: #e7e7e7; margin-bottom: 20px; border: 2px solid #14498f; }\r\n                .ForeignKeysEdit .EditHead { display:none; font-size: .9em; background: #14498f; color: #fff; line-height: 24px; padding-left: 10px; }\r\n                .ForeignKeysEdit .EditHead1 { }\r\n                .ForeignKeysEdit .EditHead2 { }\r\n                .ForeignKeysEdit .EditHead3 { background: #0b94da; }\r\n                .ForeignKeysEdit .EditHead4 { background: #0b94da; }\r\n                .ForeignKeysEdit .EditHead1z span { background: #fefe9f; color: #222; padding: 0px 3px; }\r\n                .ForeignKeysEdit .EditHead2z span { background: #fefe9f; color: #222; padding: 0px 3px; }\r\n                .ForeignKeysEdit .EditHead .MaxWidth { overflow:hidden; max-width: 433px; white-space:nowrap; }\r\n                .ForeignKeysEdit .EditHead .MaxWidth span { color: #b3daee; font-size: .7em; }\r\n                .ForeignKeysEdit .Body1 { padding: 6px; }\r\n                .ForeignKeysEdit .Bttn3 { float:right; border: 1px solid #14498f; color: #14498f; background: #f5f5f5;\r\n                                          padding: 3px 10px; margin: 0px 0px 8px 8px; cursor:pointer; }\r\n                .ForeignKeysEdit .Bttn3:hover { background: #555; border-color: #555; color: #fff; }\r\n\r\n                .ForeignKeysEdit .Table3 { width: 100%; }\r\n                .ForeignKeysEdit .Table3 .Td1b { width: 50%; }\r\n                .ForeignKeysEdit .Table3 .Td2b { width: 34px; min-width: 40px; max-width: 40px; text-align:center; }\r\n                .ForeignKeysEdit .Table3 .Td3b { width: 50%; }\r\n\r\n                .ForeignKeysEdit .Table3 .LabelRow td { font-size: .7em; padding: 12px 0px 4px; color: #888; }\r\n                .ForeignKeysEdit .Table3 .TablesRow td { padding-bottom: 16px; }\r\n                .ForeignKeysEdit .Table3 .TablesRow select { display:none; width: 188px; min-width: 188px; max-width: 188px; margin-top:0px; }\r\n                .ForeignKeysEdit .Table3 .TablesRow .DivLabel { display:none; width: 188px; overflow:hidden; white-space:nowrap;\r\n                                                                text-align:center; border: 1px solid #a9a9a9; background-color: #f0f0f0; \r\n                                                                font-size: .8em; line-height: 18px; }\r\n                .ForeignKeysEdit .Table3 .ColumnsLabelRow { }\r\n                .ForeignKeysEdit .Table3 .ColumnsLabelRow td { font-size: .7em; padding: 1px 10px; background: #d8d8d8; color: #777; }\r\n\r\n                .ForeignKeysEdit .Divider4 { font-size: 1px; background: #d8d8d8; line-height: 10px; margin-top: 16px; }\r\n                .ForeignKeysEdit .Table4 { width: 100%; }\r\n                .ForeignKeysEdit .Table4 td { width: 50%; font-size: .8em; }\r\n                .ForeignKeysEdit .Table4 .Td_Left { }\r\n                .ForeignKeysEdit .Table4 .Td_Right { }\r\n                .ForeignKeysEdit .Table4 .LabelDiv { font-weight: bold; padding: 5px 10px; }\r\n                .ForeignKeysEdit .Table4 .RadioItemDiv { cursor:pointer; padding: 0px 20px; font-size: .8em; color: #444; line-height: 17px; }\r\n                .ForeignKeysEdit .Table4 .RadioItemDiv:hover { background: #bcbcbc; }\r\n                .ForeignKeysEdit .Table4 radio { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'EditHead EditHead1\'><span>New</span> Relationship TO This Table (Inbound)</div>\r\n                <div class=\'EditHead EditHead2\'><span>New</span> Relationship FROM This Table (Outbound)</div>\r\n                <div class=\'EditHead EditHead3\'><div class=\'MaxWidth\'>Edit Inbound Relationship: </div></div>\r\n                <div class=\'EditHead EditHead4\'><div class=\'MaxWidth\'>Edit Outbound Relationship: </div></div>\r\n                <div class=\'Body1\'>\r\n                    <div class=\'Bttn3\' On_Click=\'Cancel_Click\'>Cancel</div>\r\n                    <div class=\'Bttn3\' On_Click=\'Save_Click\'>Save</div>\r\n                    <div class=\'clear\'></div>\r\n                    <table class=\'Table3\'>\r\n                        <tr class=\'LabelRow\'>\r\n                            <td class=\'Td1b\'>Foreign Key Table</td>\r\n                            <td class=\'Td2b\'></td>\r\n                            <td class=\'Td3b\'>Primary Key Table</td>\r\n                        </tr>\r\n                        <tr class=\'TablesRow\'>\r\n                            <td class=\'Td1b\'>\r\n                                <select    class=\'Select_Table_ForeignKey\' On_Change=\'Select_Table_ForeignKey_Change\'></select>\r\n                                <div class=\'DivLabel Div_Table_ForeignKey\'></div>\r\n                            </td>\r\n                            <td class=\'Td2b\'> --&gt; </td>\r\n                            <td class=\'Td3b\'>\r\n                                <select    class=\'Select_Table_PrimaryKey\' On_Change=\'Select_Table_PrimaryKey_Change\'></select>\r\n                                <div class=\'DivLabel Div_Table_PrimaryKey\'></div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\'ColumnsLabelRow\'>\r\n                            <td class=\'Td1b\'>Columns</td>\r\n                            <td class=\'Td2b\'></td>\r\n                            <td class=\'Td3b\'></td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <table class=\'Table3 Table_ColumnsSelectors\'>\r\n                    </table>\r\n\r\n                    <div class=\'Divider4\'>&nbsp;</div>\r\n                    <table class=\'Table4\'>\r\n                        <tr>\r\n                            <td class=\'Td_Left\'>\r\n                                <div class=\'LabelDiv\'>Delete Rule</div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'DeleteRuleRadio1_Click\'>\r\n                                    <input type=\'radio\' name=\'DeleteRule\' class=\'DeleteRuleRadio DeleteRuleRadio1\' value=\'NoAction\' /> No Action\r\n                                </div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'DeleteRuleRadio2_Click\'>\r\n                                    <input type=\'radio\' name=\'DeleteRule\' class=\'DeleteRuleRadio DeleteRuleRadio2\' value=\'Cascade\' /> Cascade\r\n                                </div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'DeleteRuleRadio3_Click\'>\r\n                                    <input type=\'radio\' name=\'DeleteRule\' class=\'DeleteRuleRadio DeleteRuleRadio3\' value=\'SetDefault\' /> Set Default\r\n                                </div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'DeleteRuleRadio4_Click\'>\r\n                                    <input type=\'radio\' name=\'DeleteRule\' class=\'DeleteRuleRadio DeleteRuleRadio4\' value=\'SetNull\' /> Set Null\r\n                                </div>\r\n                            </td>\r\n                            <td class=\'Td_Right\'>\r\n                                <div class=\'LabelDiv\'>Update Rule</div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'UpdateRuleRadio1_Click\'>\r\n                                    <input type=\'radio\' name=\'UpdateRule\' class=\'UpdateRuleRadio UpdateRuleRadio1\' value=\'NoAction\' /> No Action\r\n                                </div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'UpdateRuleRadio2_Click\'>\r\n                                    <input type=\'radio\' name=\'UpdateRule\' class=\'UpdateRuleRadio UpdateRuleRadio2\' value=\'Cascade\' /> Cascade\r\n                                </div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'UpdateRuleRadio3_Click\'>\r\n                                    <input type=\'radio\' name=\'UpdateRule\' class=\'UpdateRuleRadio UpdateRuleRadio3\' value=\'SetDefault\' /> Set Default\r\n                                </div>\r\n                                <div class=\'RadioItemDiv\' On_Click=\'UpdateRuleRadio4_Click\'>\r\n                                    <input type=\'radio\' name=\'UpdateRule\' class=\'UpdateRuleRadio UpdateRuleRadio4\' value=\'SetNull\' /> Set Null\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    <table>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew = function (){
    this.IndexesSubColumnSelectors = null;
    this.AutoGenerateName = true;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'IndexesNew jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.Open_Sub = function (){
    var holder_SubColumns = this.jF2(".Holder_SubColumns");
    holder_SubColumns.html("");
    this.set_Model(new ASPdatabaseNET.DbInterfaces.TableObjects.Index());
    this.get_Model().ConnectionId = this.get_ViewModel().ConnectionId;
    this.get_Model().Schema = this.get_ViewModel().TableStructure.Schema;
    this.get_Model().TableName = this.get_ViewModel().TableStructure.TableName;
    this.IndexesSubColumnSelectors = new Array(0);
    for (var i = 0; i < 3; i++){
        this.IndexesSubColumnSelectors[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector();
        this.IndexesSubColumnSelectors[i].set_ViewModel(this.get_ViewModel());
        this.IndexesSubColumnSelectors[i].OnChange.After.AddHandler(this, "IndexesSubColumnSelector_Changed", 1);
        this.IndexesSubColumnSelectors[i].Instantiate();
        holder_SubColumns.append(this.IndexesSubColumnSelectors[i].jRoot);
    }
    this.AutoGenerateName = true;
    this.jF(".Checkbox_AutoGenerateName").attr("checked", true);
    this.jF(".Div_IndexName").hide();
    this.jF(".Txt_IndexName").val("");
    this.jF(".Checkbox_IsUnique").attr("checked", false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.AutoGenerateName_Click = function (){
    this.AutoGenerateName = !this.AutoGenerateName;
    if (this.AutoGenerateName){
        this.jF(".Checkbox_AutoGenerateName").attr("checked", true);
        this.jF(".Div_IndexName").hide();
    }
    else {
        this.jF(".Checkbox_AutoGenerateName").attr("checked", false);
        this.jF(".Div_IndexName").show();
        this.jF(".Txt_IndexName").focus();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.IndexesSubColumnSelector_Changed = function (subSelector){
    var holder_SubColumns = this.jF2(".Holder_SubColumns");
    var i = this.IndexesSubColumnSelectors.length;
    var tmpColumnName = this.IndexesSubColumnSelectors[i - 1].get_Model().ColumnName;
    if (tmpColumnName != null && tmpColumnName != ""){
        this.IndexesSubColumnSelectors[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector();
        this.IndexesSubColumnSelectors[i].set_ViewModel(this.get_ViewModel());
        this.IndexesSubColumnSelectors[i].OnChange.After.AddHandler(this, "IndexesSubColumnSelector_Changed", 1);
        this.IndexesSubColumnSelectors[i].Instantiate();
        holder_SubColumns.append(this.IndexesSubColumnSelectors[i].jRoot);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.IsUnique_Click = function (){
    this.get_Model().IsUnique = !this.get_Model().IsUnique;
    if (this.get_Model().IsUnique)
        this.jF2(".Checkbox_IsUnique").attr("checked", true);
    else
        this.jF2(".Checkbox_IsUnique").attr("checked", false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.SaveBttn_Click = function (){
    if (this.AutoGenerateName)
        this.get_Model().IndexName = "";
    else
        this.get_Model().IndexName = this.jF(".Txt_IndexName").val();
    var j = 0;
    this.get_Model().Columns = new Array(0);
    for (var i = 0; i < this.IndexesSubColumnSelectors.length; i++){
        var tmpColumnName = this.IndexesSubColumnSelectors[i].get_Model().ColumnName;
        if (tmpColumnName != null && tmpColumnName != ""){
            this.IndexesSubColumnSelectors[i].get_Model().ColumnId = j;
            this.get_Model().Columns[j] = this.IndexesSubColumnSelectors[i].get_Model();
            j++;
        }
    }
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__Indexes__Create(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.Save_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.CancelBttn_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.GetCssRoot = function (){
    return "\r\n                .IndexesNew { background: #6cc5aa; color: #fff; border-bottom: 6px solid #fff; }\r\n                .IndexesNew .Head1 { background: #14498f; line-height: 26px; padding: 0px 15px; text-align: right; }\r\n                .IndexesNew table { width: 100%; }\r\n                .IndexesNew table td { vertical-align:top; padding: 10px 15px; }\r\n                .IndexesNew table .td1 { width: 275px; padding: 5px 0px 15px 5px; }\r\n                .IndexesNew table .td2 { padding-top: 5px; }\r\n                .IndexesNew table .td3 { width: 105px; }\r\n                .IndexesNew table .td4 { width: 134px;  padding: 10px 6px 0px 0px; }\r\n\r\n                .IndexesNew .Div_AutoGenerateName { font-size: .7em; cursor:pointer; padding: 10px; }\r\n                .IndexesNew .Div_AutoGenerateName:hover { background: #98e0ca; color: #fff; }\r\n\r\n                .IndexesNew .Div_IndexName { padding: 0px 0px 0px 10px; }\r\n                .IndexesNew .Div_IndexName span { font-size: .8em; }\r\n                .IndexesNew .Div_IndexName .Txt_IndexName { width: 240px; }\r\n\r\n                .IndexesNew .Bttn { text-align: center; border: 1px solid #caefe4; margin-bottom: 10px; cursor:pointer; line-height: 30px; }\r\n                .IndexesNew .Bttn:hover { background: #98e0ca; }\r\n\r\n                .IndexesNew .Bttn_IsUnique { text-align:left; font-size: .8em; padding: 7px 0px 5px 10px; line-height: 20px; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head1\'>Add New Index</div>\r\n                <table>\r\n                    <tr>\r\n                        <td class=\'td1\'>\r\n                            <div class=\'Div_AutoGenerateName\' On_Click=\'AutoGenerateName_Click\'>\r\n                                <input type=\'checkbox\' checked=\'checked\' class=\'Checkbox_AutoGenerateName\' />\r\n                                Auto-generate Index Name\r\n                            </div>\r\n                            <div class=\'Div_IndexName\'>\r\n                                <span>Index Name</span>\r\n                                <br />\r\n                                <input type=\'text\' class=\'Txt_IndexName\' />\r\n                            </div>\r\n                        </td>\r\n                        <td class=\'td2 Holder_SubColumns\'>\r\n                            \r\n                        </td>\r\n                        <td class=\'td3\'>\r\n                            <div class=\'Bttn Bttn_IsUnique\' On_Click=\'IsUnique_Click\'>\r\n                                <input type=\'checkbox\' class=\'Checkbox_IsUnique\' />\r\n                                Is Unique\r\n                            </div>\r\n                        </td>\r\n                        <td class=\'td4\'>\r\n                            <div class=\'Bttn\' On_Click=\'SaveBttn_Click\'>Save</div>\r\n                            <div class=\'Bttn\' On_Click=\'CancelBttn_Click\'>Cancel</div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel = function (viewModel){
    this.IndexesNew = null;
    this.IndexesRows = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(viewModel);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'IndexesPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
    this.IndexesNew = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew();
    this.IndexesNew.set_ViewModel(this.get_ViewModel());
    this.IndexesNew.OnChange.After.AddHandler(this, "IndexesNew_OnSave", 0);
    this.IndexesNew.Close();
    this.IndexesNew.OnClose.After.AddHandler(this, "IndexesNew_Close", 0);
    this.jF2(".Holder_IndexesNew").append(this.IndexesNew.jRoot);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.Open_Sub = function (){
    this.IndexesNew.Close();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
    this.jF2(".Table_IndexItems").html("");
    var minTableStructure = this.get_ViewModel().Get_Minified_TableStructure();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetIndexes_Return").TableDesign__Indexes__Get(minTableStructure);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.GetIndexes_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.set_Model(ajaxResponse.ReturnObj);
    if (this.get_Model().length < 1){
        this.jF(".WhenZero_Hide").hide();
        this.jF(".WhenZero_Show").show();
    }
    else {
        this.jF(".WhenZero_Hide").show();
        this.jF(".WhenZero_Show").hide();
        var table_IndexItems = this.jF2(".Table_IndexItems");
        this.IndexesRows = new Array(0);
        for (var i = 0; i < this.get_Model().length; i++){
            this.IndexesRows[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow(i);
            this.IndexesRows[i].set_Model(this.get_Model()[i]);
            this.IndexesRows[i].set_ViewModel(this.get_ViewModel());
            this.IndexesRows[i].OnChange.After.AddHandler(this, "IndexesRow_OnChange", 0);
            this.IndexesRows[i].OnEdit_Enter.After.AddHandler(this, "IndexesRow_OnEdit_Enter", 0);
            this.IndexesRows[i].OnEdit_Exit.After.AddHandler(this, "IndexesRow_OnEdit_Exit", 0);
            this.IndexesRows[i].Instantiate();
            table_IndexItems.append(this.IndexesRows[i].jRoot);
        }
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.NewIndex_Click = function (){
    this.IndexesRow_OnEdit_Enter();
    this.jF2(".Bttn_NewIndex").hide();
    this.IndexesNew.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.IndexesNew_Close = function (){
    this.jF2(".Bttn_NewIndex").show();
    this.IndexesRow_OnEdit_Exit();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.IndexesNew_OnSave = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.IndexesRow_OnChange = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.IndexesRow_OnEdit_Enter = function (){
    if (this.IndexesRows != null)
        for (var i = 0; i < this.IndexesRows.length; i++)
            this.IndexesRows[i].DisableBttns();
    this.jF2(".Bttn_NewIndex").hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.IndexesRow_OnEdit_Exit = function (){
    if (this.IndexesRows != null)
        for (var i = 0; i < this.IndexesRows.length; i++)
            this.IndexesRows[i].EnableBttns();
    this.jF2(".Bttn_NewIndex").show();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesNew.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.GetCssRoot = function (){
    return "\r\n                .IndexesPanel { width: 100%; position:relative; padding-top: 37px; }\r\n                .IndexesPanel .TopColorBar { position:absolute; top: -1px; width: inherit; min-width: 200px; height: 8px; background: #6cc5aa; margin-bottom: 35px; }\r\n\r\n                .IndexesPanel .HeadBar { color: #0c5eca; font-size: .9em; margin-bottom: 6px; }\r\n                .IndexesPanel .HeadBar .Label1 { float:left; width: 280px; line-height: 24px; font-weight:bold; padding-left: 15px; }\r\n                .IndexesPanel .HeadBar .Label2 { float:left; width: 285px; line-height: 24px; font-weight:bold; }\r\n                .IndexesPanel .HeadBar .Bttn_NewIndex { float:right; cursor:pointer; width: 140px; text-align: center;\r\n                                                        line-height: 24px; background: #14498f; color: #fff; }\r\n                .IndexesPanel .HeadBar .Bttn_NewIndex:hover { background: #333; }\r\n\r\n                .IndexesPanel .Label_ZeroIndexes { display:none; background: #eee; line-height: 50px; padding-left: 20px; }\r\n\r\n                .IndexesPanel .ScrollArea { overflow-y:auto; padding-right: 5px; }\r\n                .IndexesPanel .Table_IndexItems { width: 100% }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopColorBar\'></div>\r\n                <div class=\'HeadBar\'>\r\n                    <div class=\'Label1 WhenZero_Hide\'>Index Name</div>\r\n                    <div class=\'Label2 WhenZero_Hide\'>Columns in Index</div>\r\n                    <div class=\'Bttn_NewIndex\' On_Click=\'NewIndex_Click\'>+ New Index</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'ScrollArea AutoResize\'>\r\n                    <div class=\'Holder_IndexesNew\'></div>\r\n                    <div class=\'Label_ZeroIndexes WhenZero_Show\'>This table has 0 indexes</div>\r\n                    <table class=\'Table_IndexItems\'>\r\n                    </table>\r\n                    <br />\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel = function (viewModel){
    this.ForeignKeysEdit_NewIn = null;
    this.ForeignKeysEdit_NewOut = null;
    this.ForeignKeysItems_Inbound = null;
    this.ForeignKeysItems_Outbound = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(viewModel);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ForeignKeysPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
    this.ForeignKeysEdit_NewIn = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit(true, 1, this.get_ViewModel());
    this.ForeignKeysEdit_NewIn.Instantiate();
    this.ForeignKeysEdit_NewIn.OnClose.After.AddHandler(this, "Item_OnEdit_Exit", 0);
    this.ForeignKeysEdit_NewIn.OnChange.After.AddHandler(this, "SubItem_Saved", 0);
    this.ForeignKeysEdit_NewIn.Close();
    this.jF(".Holder_Inbound_New").html("").append(this.ForeignKeysEdit_NewIn.jRoot);
    this.ForeignKeysEdit_NewOut = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit(true, 2, this.get_ViewModel());
    this.ForeignKeysEdit_NewOut.Instantiate();
    this.ForeignKeysEdit_NewOut.OnClose.After.AddHandler(this, "Item_OnEdit_Exit", 0);
    this.ForeignKeysEdit_NewOut.OnChange.After.AddHandler(this, "SubItem_Saved", 0);
    this.ForeignKeysEdit_NewOut.Close();
    this.jF(".Holder_Outbound_New").html("").append(this.ForeignKeysEdit_NewOut.jRoot);
    this.jF2(".Holder_InboundItems").html("");
    this.jF2(".Holder_OutboundItems").html("");
    this.jF2(".Inbound_Count").html("(0)");
    this.jF2(".Outbound_Count").html("(0)");
    var minTableStructure = this.get_ViewModel().Get_Minified_TableStructure();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetKeys_Return").TableDesign__ForeignKeys__Get(minTableStructure);
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.GetKeys_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.set_Model(ajaxResponse.ReturnObj);
    var holder_InboundItems = this.jF2(".Holder_InboundItems");
    var holder_OutboundItems = this.jF2(".Holder_OutboundItems");
    this.jF2(".Inbound_Count").html("(" + this.get_Model().InboundKeys.length + ")");
    this.jF2(".Outbound_Count").html("(" + this.get_Model().OutboundKeys.length + ")");
    this.ForeignKeysItems_Inbound = new Array(0);
    this.ForeignKeysItems_Outbound = new Array(0);
    for (var i = 0; i < this.get_Model().InboundKeys.length; i++){
        this.ForeignKeysItems_Inbound[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem();
        this.ForeignKeysItems_Inbound[i].set_ViewModel(this.get_ViewModel());
        this.ForeignKeysItems_Inbound[i].set_Model(this.get_Model().InboundKeys[i]);
        this.ForeignKeysItems_Inbound[i].Instantiate();
        this.ForeignKeysItems_Inbound[i].OnEdit_Enter.After.AddHandler(this, "Item_OnEdit_Enter", 0);
        this.ForeignKeysItems_Inbound[i].OnEdit_Exit.After.AddHandler(this, "Item_OnEdit_Exit", 0);
        this.ForeignKeysItems_Inbound[i].OnChange.After.AddHandler(this, "SubItem_Saved", 0);
        holder_InboundItems.append(this.ForeignKeysItems_Inbound[i].jRoot);
    }
    for (var i = 0; i < this.get_Model().OutboundKeys.length; i++){
        this.ForeignKeysItems_Outbound[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem();
        this.ForeignKeysItems_Outbound[i].set_ViewModel(this.get_ViewModel());
        this.ForeignKeysItems_Outbound[i].set_Model(this.get_Model().OutboundKeys[i]);
        this.ForeignKeysItems_Outbound[i].Instantiate();
        this.ForeignKeysItems_Outbound[i].OnEdit_Enter.After.AddHandler(this, "Item_OnEdit_Enter", 0);
        this.ForeignKeysItems_Outbound[i].OnEdit_Exit.After.AddHandler(this, "Item_OnEdit_Exit", 0);
        this.ForeignKeysItems_Outbound[i].OnChange.After.AddHandler(this, "SubItem_Saved", 0);
        holder_OutboundItems.append(this.ForeignKeysItems_Outbound[i].jRoot);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.NewInboundRelationship_Click = function (){
    this.Item_OnEdit_Enter();
    this.ForeignKeysEdit_NewIn.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.NewOutboundRelationship_Click = function (){
    this.Item_OnEdit_Enter();
    this.ForeignKeysEdit_NewOut.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.Item_OnEdit_Enter = function (){
    if (this.ForeignKeysItems_Inbound != null)
        for (var i = 0; i < this.ForeignKeysItems_Inbound.length; i++)
            this.ForeignKeysItems_Inbound[i].DisableBttns();
    if (this.ForeignKeysItems_Outbound != null)
        for (var i = 0; i < this.ForeignKeysItems_Outbound.length; i++)
            this.ForeignKeysItems_Outbound[i].DisableBttns();
    this.jF2(".NewInboundBttn").hide();
    this.jF2(".NewOutboundBttn").hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.Item_OnEdit_Exit = function (){
    if (this.ForeignKeysItems_Inbound != null)
        for (var i = 0; i < this.ForeignKeysItems_Inbound.length; i++)
            this.ForeignKeysItems_Inbound[i].EnableBttns();
    if (this.ForeignKeysItems_Outbound != null)
        for (var i = 0; i < this.ForeignKeysItems_Outbound.length; i++)
            this.ForeignKeysItems_Outbound[i].EnableBttns();
    this.jF2(".NewInboundBttn").show();
    this.jF2(".NewOutboundBttn").show();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.SubItem_Saved = function (){
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysEdit.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysItem.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.GetCssRoot = function (){
    return "\r\n                .ForeignKeysPanel { width: 100%; position:relative; padding-top: 17px; }\r\n                .ForeignKeysPanel .TopColorBar { position:absolute; top: -1px; width: inherit; min-width: 200px; height: 8px; background: #0b94da; margin-bottom: 15px; }\r\n\r\n                .ForeignKeysPanel .FKTable { width: 100%; }\r\n                .ForeignKeysPanel .FKTable .Td1 { width: 50%; padding-right: 2px; }\r\n                .ForeignKeysPanel .FKTable .Td2 { width: 7px; min-width: 7px; max-width: 7px; background: #e8e8ed; font-size: 1px; }\r\n                .ForeignKeysPanel .FKTable .Td3 { width: 50%; padding-left: 2px; }\r\n\r\n                .ForeignKeysPanel .AboveScrollSection { padding-bottom: 14px; padding-left: 10px; }\r\n                .ForeignKeysPanel .AboveScrollSection .Head1 { font-size: 1.1em; margin-bottom: 11px; }\r\n                .ForeignKeysPanel .AboveScrollSection .Head1 span { font-size: 1.4em; }\r\n                .ForeignKeysPanel .ScrollSectionDiv {  }\r\n                .ForeignKeysPanel .ScrollSectionDiv .Head2 { text-align: center; background: #f3f3f3; color: #999; padding: 2px 0px; margin-bottom:8px; }\r\n\r\n                .ForeignKeysPanel .NewBttnHolderDiv { line-height: 22px; min-height: 22px; max-height: 22px; }\r\n                .ForeignKeysPanel .Bttn { float:left; cursor:pointer; font-size: .8em; background: #14498f; color: #fff; padding: 0px 12px; }\r\n                .ForeignKeysPanel .Bttn:hover { background: #333; }\r\n\r\n                .ForeignKeysPanel .Inbound_Count  { color: #bbb; }\r\n                .ForeignKeysPanel .Outbound_Count { color: #bbb; }\r\n\r\n                .ForeignKeysPanel .Holder_InboundItems { }\r\n                .ForeignKeysPanel .Holder_OutboundItems { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopColorBar\'></div>\r\n                <table class=\'FKTable\'>\r\n                    <tr>\r\n                        <td class=\'Td1\'>\r\n                            <div class=\'AboveScrollSection\'>\r\n                                <div class=\'Head1\'>Relationships <span>TO</span> This Table <span class=\'Inbound_Count\'>(0)</span></div>\r\n                                <div class=\'NewBttnHolderDiv\'>\r\n                                    <div class=\'Bttn NewInboundBttn\' On_Click=\'NewInboundRelationship_Click\'>+ New Inbound Relationship</div>\r\n                                </div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n                            <div class=\'ScrollSectionDiv AutoResize\'>\r\n                                <div class=\'Head2 hide\'>(Foreign Key Table) --&gt; (Primary Key Table)</div>\r\n                                <div class=\'Holder_Inbound_New\'></div>\r\n                                <div class=\'Holder_InboundItems\'></div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\'Td2\'>&nbsp;</td>\r\n                        <td class=\'Td3\'>\r\n                            <div class=\'AboveScrollSection\'>\r\n                                <div class=\'Head1\'>Relationships <span>FROM</span> This Table <span class=\'Outbound_Count\'>(0)</span></div>\r\n                                <div class=\'NewBttnHolderDiv\'>\r\n                                    <div class=\'Bttn NewOutboundBttn\' On_Click=\'NewOutboundRelationship_Click\'>+ New Outbound Relationship</div>\r\n                                </div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>\r\n                            <div class=\'ScrollSectionDiv AutoResize\'>\r\n                                <div class=\'Head2 hide\'>(Foreign Key Table) --&gt; (Primary Key Table)</div>\r\n                                <div class=\'Holder_Outbound_New\'></div>\r\n                                <div class=\'Holder_OutboundItems\'></div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow = function (index){
    this.Index = 0;
    this.IndexesSubColumnSelectors = null;
    this.Temp_Model_IsUnique = false;
    this.OnEdit_Enter = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnEdit_Exit = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Index = index;
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'IndexesRow jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    if (this.Index == 0)
        this.jF("td").addClass("NoTopBorder");
    var label_ColumnNames = this.jF(".Label_ColumnNames");
    var label_IsUnique = this.jF(".Label_IsUnique");
    var columnsHtml = "";
    for (var i = 0; i < this.get_Model().Columns.length; i++){
        columnsHtml += this.get_Model().Columns[i].ColumnName;
        if (this.get_Model().Columns[i].SortDirection == 1)
            columnsHtml += " <span>(DESC)</span>";
        columnsHtml += "<br />";
    }
    label_ColumnNames.html(columnsHtml);
    label_IsUnique.html("Is Unique");
    if (!this.get_Model().IsUnique){
        label_IsUnique.html("Not Unique");
        label_IsUnique.addClass("NotUnique");
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.DisableBttns = function (){
    this.jF(".ViewPartBttn").hide();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.EnableBttns = function (){
    this.jF(".ViewPartBttn").show();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.Edit_Click = function (){
    this.OnEdit_Enter.After.Fire();
    this.jF(".ViewPart").hide();
    this.jF(".EditPart").show();
    this.jF(".EditTDPart1").addClass("EditTDPart1_ON");
    this.jF(".EditTDPart2").addClass("EditTDPart2_ON");
    var holder_IndexesSubColumnSelectors = this.jF(".Holder_IndexesSubColumnSelectors");
    holder_IndexesSubColumnSelectors.html("");
    this.IndexesSubColumnSelectors = new Array(0);
    for (var i = 0; i < this.get_Model().Columns.length; i++){
        this.IndexesSubColumnSelectors[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector();
        this.IndexesSubColumnSelectors[i].set_ViewModel(this.get_ViewModel());
        this.IndexesSubColumnSelectors[i].set_Model(this.get_Model().Columns[i]);
        this.IndexesSubColumnSelectors[i].OnChange.After.AddHandler(this, "IndexesSubColumnSelector_Changed", 1);
        this.IndexesSubColumnSelectors[i].Instantiate();
        holder_IndexesSubColumnSelectors.append(this.IndexesSubColumnSelectors[i].jRoot);
    }
    var lastSelector = this.IndexesSubColumnSelectors[this.IndexesSubColumnSelectors.length - 1];
    this.IndexesSubColumnSelector_Changed(lastSelector);
    this.Temp_Model_IsUnique = !this.get_Model().IsUnique;
    this.IsUnique_Click();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.IndexesSubColumnSelector_Changed = function (subSelector){
    var holder_IndexesSubColumnSelectors = this.jF2(".Holder_IndexesSubColumnSelectors");
    var i = this.IndexesSubColumnSelectors.length;
    var tmpColumnName = this.IndexesSubColumnSelectors[i - 1].get_Model().ColumnName;
    if (tmpColumnName != null && tmpColumnName != ""){
        this.IndexesSubColumnSelectors[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector();
        this.IndexesSubColumnSelectors[i].set_ViewModel(this.get_ViewModel());
        this.IndexesSubColumnSelectors[i].OnChange.After.AddHandler(this, "IndexesSubColumnSelector_Changed", 1);
        this.IndexesSubColumnSelectors[i].Instantiate();
        holder_IndexesSubColumnSelectors.append(this.IndexesSubColumnSelectors[i].jRoot);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.Delete_Click = function (){
    if (confirm("Are you sure?")){
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Delete_Return").TableDesign__Indexes__Delete(this.get_Model());
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.Delete_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.IsUnique_Click = function (){
    this.Temp_Model_IsUnique = !this.Temp_Model_IsUnique;
    if (this.Temp_Model_IsUnique)
        this.jF2(".Checkbox_IsUnique").attr("checked", true);
    else
        this.jF2(".Checkbox_IsUnique").attr("checked", false);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.Save_Click = function (){
    this.get_Model().IsUnique = this.Temp_Model_IsUnique;
    var j = 0;
    this.get_Model().Columns = new Array(0);
    for (var i = 0; i < this.IndexesSubColumnSelectors.length; i++){
        var tmpColumnName = this.IndexesSubColumnSelectors[i].get_Model().ColumnName;
        if (tmpColumnName != null && tmpColumnName != ""){
            this.IndexesSubColumnSelectors[i].get_Model().ColumnId = j;
            this.get_Model().Columns[j] = this.IndexesSubColumnSelectors[i].get_Model();
            j++;
        }
    }
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__Indexes__Update(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.Save_Return = function (ajaxResponse){
    if (ajaxResponse.Error != null){
        alert("Error: " + ajaxResponse.Error.Message);
        return;
    }
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.CancelEdit_Click = function (){
    this.jF(".EditTDPart1").removeClass("EditTDPart1_ON");
    this.jF(".EditTDPart2").removeClass("EditTDPart2_ON");
    this.jF(".EditPart").hide();
    this.jF(".ViewPart").show();
    this.OnEdit_Exit.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.GetCssRoot = function (){
    return "\r\n                .IndexesRow { font-size: .9em; }\r\n                .IndexesRow td { border-top: 6px solid #fff; background: #eeeef2; line-height: 32px; min-height: 32px; }\r\n                .IndexesRow .td1 { width: 280px; background: #fff; }\r\n                .IndexesRow .td2 { padding-left: 20px; white-space:nowrap; overflow:hidden; }\r\n                .IndexesRow .td3 { width: 120px; }\r\n                .IndexesRow .td4 { width: 54px; text-align:center; vertical-align:top; padding: 3px 6px 3px 0px; }\r\n                .IndexesRow .td5 { width: 74px; text-align:center; vertical-align:top; padding: 3px 6px 3px 0px; }\r\n\r\n                .IndexesRow .IndexNameDiv { padding-left: 15px; background: #e8e8ed; line-height: 32px;\r\n                                            white-space:nowrap; overflow:hidden; }\r\n\r\n                .IndexesRow .Label_ColumnNames span { color: #aaa; font-size: .75em; padding-left: 2px; }\r\n                .IndexesRow .NotUnique { color: #ccc; }\r\n\r\n                .IndexesRow .NoTopBorder { border-top-width: 0px; }\r\n\r\n                .IndexesRow .Bttn { background: #fff; color: #222; border: 1px solid #bfbfbf; cursor:pointer; line-height: 24px; }\r\n                .IndexesRow .Bttn:hover { background: #595959; border-color: #595959; color: #fff; }\r\n                .IndexesRow .Bttn_WithTopMargin { margin-top: 28px; }\r\n\r\n                .IndexesRow .ViewPart { }\r\n                .IndexesRow .EditPart { display:none; }\r\n                .IndexesRow .EditPart_WithTopMargin { margin-top: 7px; }\r\n                .IndexesRow .EditTDPart1 { }\r\n                .IndexesRow .EditTDPart1_ON { background: #4e927d; color: #fff; }\r\n                .IndexesRow .EditTDPart2 { }\r\n                .IndexesRow .EditTDPart2_ON { background: #6cc5aa; color: #fff; }\r\n\r\n                .IndexesRow .Bttn_IsUnique { border: 1px solid #caefe4; margin-right: 15px; cursor:pointer;\r\n                                             text-align:left; font-size: .8em; padding: 7px 0px 5px 10px; line-height: 20px; }\r\n                .IndexesRow .Bttn_IsUnique:hover { background: #98e0ca; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'td1\'>\r\n                    <div class=\'IndexNameDiv EditTDPart1\' ModelKey=\'IndexName\'>&nbsp;</div>\r\n                </td>\r\n                <td class=\'td2 EditTDPart2\'>\r\n                    <div class=\'Label_ColumnNames ViewPart\'></div>\r\n                    <div class=\'EditPart EditPart_WithTopMargin Holder_IndexesSubColumnSelectors\'>\r\n                    </div>\r\n                </td>\r\n                <td class=\'td3 EditTDPart2\'>\r\n                    <div class=\'Label_IsUnique ViewPart\'></div>\r\n                    <div class=\'EditPart EditPart_WithTopMargin\'>\r\n                        <div class=\'Bttn_IsUnique\' On_Click=\'IsUnique_Click\'>\r\n                            <input type=\'checkbox\' class=\'Checkbox_IsUnique\' />\r\n                            Is Unique\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td class=\'td4 EditTDPart2\'>\r\n                    <div class=\'Bttn                    ViewPart ViewPartBttn\' On_Click=\'Edit_Click\'>Edit</div>\r\n                    <div class=\'Bttn Bttn_WithTopMargin EditPart             \' On_Click=\'Save_Click\'>Save</div>\r\n                </td>\r\n                <td class=\'td5 EditTDPart2\'>\r\n                    <div class=\'Bttn                    ViewPart ViewPartBttn\' On_Click=\'Delete_Click\'>Delete</div>\r\n                    <div class=\'Bttn Bttn_WithTopMargin EditPart             \' On_Click=\'CancelEdit_Click\'>Cancel</div>\r\n                </td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.IndexesRow, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'IndexesSubColumnSelector jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var dropdown = this.jF(".Select_ColumnNames");
    dropdown.html("<option value=\'\'></option>");
    if (this.get_ViewModel().TableStructure.Columns != null)
        for (var i = 0; i < this.get_ViewModel().TableStructure.Columns.length; i++){
            var columnName = this.get_ViewModel().TableStructure.Columns[i].ColumnName;
            dropdown.append("<option value=\'" + columnName + "\'>" + columnName + "</option>");
        }
    if (this.get_Model() == null){
        this.set_Model(new ASPdatabaseNET.DbInterfaces.TableObjects.IndexColumn());
        this.get_Model().SortDirection = 0;
    }
    else {
        dropdown.val(this.get_Model().ColumnName);
        if (this.get_Model().SortDirection == 1)
            this.jF(".Checkbox_IsDESC").attr("checked", true);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.prototype.Select_ColumnNames_Changed = function (){
    this.get_Model().ColumnName = this.jF(".Select_ColumnNames").val();
    this.OnChange.After.Fire1(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.prototype.IsDESC_Click = function (){
    if (this.get_Model().SortDirection == 0){
        this.get_Model().SortDirection = 1;
        this.jF(".Checkbox_IsDESC").attr("checked", true);
    }
    else {
        this.get_Model().SortDirection = 0;
        this.jF(".Checkbox_IsDESC").attr("checked", false);
    }
    this.OnChange.After.Fire1(this);
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.GetCssRoot = function (){
    return "\r\n                .IndexesSubColumnSelector { line-height: 30px; }\r\n                .IndexesSubColumnSelector .Div1 { float:left; width: 210px; }\r\n                .IndexesSubColumnSelector .Div2 { float:left; width: 110px; padding-left: 10px; font-size: .8em; cursor: pointer; }\r\n                .IndexesSubColumnSelector .Div2:hover { background: #98e0ca; }\r\n\r\n                .IndexesSubColumnSelector .Select_ColumnNames { width: 200px; min-width: 200px; max-width: 200px; }\r\n                .IndexesSubColumnSelector .Checkbox_IsDESC { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Div1\'>\r\n                    <select class=\'Select_ColumnNames\' On_Change=\'Select_ColumnNames_Changed\'>\r\n                    </select>\r\n                </div>\r\n                <div class=\'Div2\' On_Click=\'IsDESC_Click\'>\r\n                    <input type=\'checkbox\' class=\'Checkbox_IsDESC\' />\r\n                    <span>Descending</span>\r\n                </div>\r\n                <div class=\'clear\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.IndexesSubColumnSelector, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel = function (viewModel){
    this.KeyDoesNotExist = true;
    this.InEditMode = false;
    this.PrimaryKeyRows = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(viewModel);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'PrimaryKeyPanel jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.jRoot.hide();
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.Open_Sub = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "PrimaryKey__Get_Return").TableDesign__PrimaryKey__Get(this.get_ViewModel().TableId);
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.PrimaryKey__Get_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.KeyDoesNotExist = (this.get_Model() == null);
    if (this.KeyDoesNotExist){
        this.set_Model(new ASPdatabaseNET.DbInterfaces.TableObjects.PrimaryKey());
        this.get_Model().ConnectionId = this.get_ViewModel().ConnectionId;
        this.get_Model().TableId = this.get_ViewModel().TableStructure.TableId;
        this.get_Model().Schema = this.get_ViewModel().TableStructure.Schema;
        this.get_Model().TableName = this.get_ViewModel().TableStructure.TableName;
        this.get_Model().Columns = new Array(0);
        this.jF(".BttnPK_Remove").hide();
    }
    else
        this.jF(".BttnPK_Remove").show();
    this.PrimaryKeyRows = new Array(0);
    var holder_PrimaryKeyFields = this.jF(".Holder_PrimaryKeyFields").html("");
    this.get_Model().Columns[this.get_Model().Columns.length] = new ASPdatabaseNET.DbInterfaces.TableObjects.PrimaryKeyColumn();
    for (var i = 0; i < this.get_Model().Columns.length; i++){
        this.PrimaryKeyRows[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow();
        this.PrimaryKeyRows[i].set_ViewModel(this.get_ViewModel());
        this.PrimaryKeyRows[i].set_Model(this.get_Model().Columns[i]);
        this.PrimaryKeyRows[i].Instantiate();
        this.PrimaryKeyRows[i].OnChange.After.AddHandler(this, "SubItem_Changed", 0);
        holder_PrimaryKeyFields.append(this.PrimaryKeyRows[i].jRoot);
    }
    this.SubItem_Changed();
    this.InEditMode = false;
    this.RefreshBttns();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.RefreshBttns = function (){
    if (this.InEditMode)
        this.jF(".BttnPK_Toggleable").removeClass("BttnPK_Off");
    else
        this.jF(".BttnPK_Toggleable").addClass("BttnPK_Off");
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.Save_Click = function (){
    if (!this.InEditMode)
        return;
    var j = 0;
    this.get_Model().Columns = new Array(0);
    for (var i = 0; i < this.PrimaryKeyRows.length; i++){
        var column = this.PrimaryKeyRows[i].GetModel();
        if (column != null)
            this.get_Model().Columns[j++] = column;
    }
    if (this.KeyDoesNotExist)
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__PrimaryKey__Create(this.get_Model());
    else
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__PrimaryKey__Update(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.Save_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.OnChange.After.Fire();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.Cancel_Click = function (){
    if (!this.InEditMode)
        return;
    this.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.Remove_Click = function (){
    if (confirm("Are you sure?"))
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").TableDesign__PrimaryKey__Delete(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.SubItem_Changed = function (){
    this.InEditMode = true;
    this.RefreshBttns();
    var lastIndex = this.PrimaryKeyRows.length - 1;
    var addEmptyItem = this.PrimaryKeyRows[lastIndex].HasValue();
    if (addEmptyItem){
        var i = lastIndex + 1;
        this.PrimaryKeyRows[i] = new ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow();
        this.PrimaryKeyRows[i].set_ViewModel(this.get_ViewModel());
        this.PrimaryKeyRows[i].set_Model(new ASPdatabaseNET.DbInterfaces.TableObjects.PrimaryKeyColumn());
        this.PrimaryKeyRows[i].Instantiate();
        this.PrimaryKeyRows[i].OnChange.After.AddHandler(this, "SubItem_Changed", 0);
        this.jF(".Holder_PrimaryKeyFields").append(this.PrimaryKeyRows[i].jRoot);
    }
    var skipIndex = -1;
    for (var i = 0; i < this.PrimaryKeyRows.length; i++){
        if (this.PrimaryKeyRows[i].IsIdentity)
            skipIndex = i;
    }
    if (skipIndex > -1){
        for (var i = 0; i < this.PrimaryKeyRows.length; i++)
            if (i != skipIndex)
                this.PrimaryKeyRows[i].HideIdentityUI();
    }
    else {
        for (var i = 0; i < this.PrimaryKeyRows.length; i++)
            this.PrimaryKeyRows[i].ShowIdentityUI();
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyRow.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.GetCssRoot = function (){
    return "\r\n                .PrimaryKeyPanel { width: 100%; position:relative; padding-top: 37px; }\r\n                .PrimaryKeyPanel .TopColorBar { position:absolute; top: -1px; width: inherit; min-width: 200px; height: 8px; background: #f26b0b; margin-bottom: 35px; }\r\n\r\n                .PrimaryKeyPanel .BttnsBar2 { }\r\n                .PrimaryKeyPanel .BttnsBar2 .BttnPK { font-size: .85em; float:left; background: #14498f; color: #fff; cursor: pointer; padding: .3em 1.3em; margin-right: 1.2em; }\r\n                .PrimaryKeyPanel .BttnsBar2 .BttnPK:hover { background: #333; }\r\n                .PrimaryKeyPanel .BttnsBar2 .BttnPK_Off { background: #e5e5ea; cursor: default; }\r\n                .PrimaryKeyPanel .BttnsBar2 .BttnPK_Off:hover { background: #e5e5ea; }\r\n\r\n                .PrimaryKeyPanel .Label2 { margin: 1.5em 1.375em .25em; color: #14498f; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopColorBar\'></div>\r\n                <div class=\'BttnsBar2 NoSelect\'>\r\n                    <div class=\'BttnPK BttnPK_Toggleable BttnPK_Off\' On_Click=\'Save_Click\'>Save</div>\r\n                    <div class=\'BttnPK BttnPK_Toggleable BttnPK_Off\' On_Click=\'Cancel_Click\'>Cancel Changes</div>\r\n                    <div class=\'BttnPK BttnPK_Remove\' On_Click=\'Remove_Click\'>Remove Primary Key</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'Label2\'>Primary Key Fields</div>\r\n                <table class=\'Holder_PrimaryKeyFields\'></table>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI = function (){
    this.LastPanelTypeOnSaved = 0;
    this.ColumnsPanel = null;
    this.PrimaryKeyPanel = null;
    this.ForeignKeysPanel = null;
    this.IndexesPanel = null;
    this.AppPropertiesPanel = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(new ASPdatabaseNET.UI.PageParts.TableDesign.TableDesign_ViewModel());
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TableDesignMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.ColumnsPanel = new ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel(this.get_ViewModel());
    this.PrimaryKeyPanel = new ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel(this.get_ViewModel());
    this.ForeignKeysPanel = new ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel(this.get_ViewModel());
    this.IndexesPanel = new ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel(this.get_ViewModel());
    this.AppPropertiesPanel = new ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel(this.get_ViewModel());
    var panelsHolder = this.jF2(".PanelsHolder");
    panelsHolder.append(this.ColumnsPanel.jRoot);
    panelsHolder.append(this.PrimaryKeyPanel.jRoot);
    panelsHolder.append(this.ForeignKeysPanel.jRoot);
    panelsHolder.append(this.IndexesPanel.jRoot);
    panelsHolder.append(this.AppPropertiesPanel.jRoot);
    this.PrimaryKeyPanel.OnChange.After.AddHandler(this, "PrimaryKeyPanel_Changed", 0);
    this.ForeignKeysPanel.OnChange.After.AddHandler(this, "ForeignKeysPanel_Changed", 0);
    this.IndexesPanel.OnChange.After.AddHandler(this, "IndexesPanel_Changed", 0);
    this.ColumnsPanel.OnHasPendingChanges.After.AddHandler(this, "OnSubPanel_HasPendingChanges", 0);
    this.ColumnsPanel.OnGotoTab.After.AddHandler(this, "OnGotoTab_Method", 1);
    this.ColumnsPanel.OnSaved.After.AddHandler(this, "OnSubPanelSaved", 1);
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.Open_Sub = function (){
    this.Get_HashInputs();
    this.get_ViewModel().AllTables_InDb = null;
    this.jF2(".TopSection_CreateTable").hide();
    this.jF2(".TopSection_DesignTable").hide();
    this.jF2(".Tab").hide();
    this.jF2(".PanelsHolder").hide();
    this.jF2(".Bttn_Close").html("Close Designer");
    if (this.get_ViewModel().IsCreateNew){
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_ForCreateNew_Return").TableDesign__GetInfo_ForCreateNew(this.get_ViewModel().ConnectionId);
    }
    else {
        ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_ForModify_Return").TableDesign__GetInfo_ForModify(this.get_ViewModel().TableId);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.Get_HashInputs = function (){
    this.get_ViewModel().ConnectionId = -1;
    this.get_ViewModel().TableId = -1;
    try{
        var input1 = ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().PageParam2;
        var input2 = ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().PageParam3;
        var input1_L = ASPdb.FrameworkUI.JsStr.S(input1).ToLower().String;
        if (input1_L == "new"){
            this.get_ViewModel().IsCreateNew = true;
            if (!isNaN(input2))
                this.get_ViewModel().ConnectionId = 1 * input2;
        }
        else {
            this.get_ViewModel().IsCreateNew = false;
            if (!isNaN(input1))
                this.get_ViewModel().TableId = 1 * input1;
        }
    }
    catch($$e13){
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.GetInfo_ForCreateNew_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var response = ajaxResponse.ReturnObj;
    this.get_ViewModel().Set(response);
    this.get_ViewModel().IsCreateNew = true;
    this.set_Model(new ASPdatabaseNET.DbInterfaces.TableObjects.TableStructure());
    this.get_Model().ConnectionId = this.get_ViewModel().ConnectionId;
    this.ColumnsPanel.set_Model(this.get_Model());
    this.get_ViewModel().TableStructure = this.get_Model();
    this.jF2(".TopSection_CreateTable").show();
    this.jF2(".Label1_ConnectionName").html(response.ConnectionName);
    this.jF2(".Txt_TableName").focus().val("");
    this.jF2(".Tab_ForCreate").show();
    this.jF2(".PanelsHolder").show();
    var select_Schema = this.jF2(".Select_Schema");
    select_Schema.html("");
    for (var i = 0; i < response.Schemas.length; i++){
        if (ASPdb.FrameworkUI.JsStr.S(response.Schemas[i]).ToLower().String == "dbo")
            select_Schema.append("<option selected=\'selected\'>" + response.Schemas[i] + "</option>");
        else
            select_Schema.append("<option>" + response.Schemas[i] + "</option>");
    }
    this.TabClick_Columns();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.GetInfo_ForModify_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var response = ajaxResponse.ReturnObj;
    this.get_ViewModel().Set(response);
    this.get_ViewModel().IsCreateNew = false;
    this.set_Model(response.TableStructure);
    this.ColumnsPanel.set_Model(this.get_Model());
    this.jF2(".TopSection_DesignTable").show();
    this.jF2(".Tab_ForModify").show();
    this.jF2(".PanelsHolder").show();
    this.BindUI();
    this.Populate_JumpToSelect();
    switch (this.LastPanelTypeOnSaved){
        case 1:
            this.TabClick_Columns();
            break;
        case 2:
            this.TabClick_PrimaryKey();
            break;
        case 3:
            this.TabClick_ForeignKeys();
            break;
        case 4:
            this.TabClick_Indexes();
            break;
        case 5:
            this.TabClick_AppProperties();
            break;
        default:
            this.TabClick_Columns();
            break;
    }
    this.LastPanelTypeOnSaved = 0;
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.Populate_JumpToSelect = function (){
    var select = this.jF2(".Select_JumpTo");
    select.html("<option value=\'-1\'></option>");
    var tables = this.get_ViewModel().AllTables_InDb;
    if (tables == null)
        return;
    for (var i = 0; i < tables.length; i++){
        var item = tables[i];
        var s = ASPdb.FrameworkUI.JsStr.StrFormat3("<option value=\'{0}\'>{1}.{2}</option>", item.TableId, item.Schema, item.TableName);
        select.append(s);
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.BttnClick_Create = function (){
    this.get_Model().Schema = this.jF2(".Select_Schema").val();
    this.get_Model().TableName = this.jF2(".Txt_TableName").val();
    this.ColumnsPanel.SaveToModel();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "CreateTable_Return").TableDesign__CreateTable(this.get_Model());
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.CreateTable_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var response = ajaxResponse.ReturnObj;
    if (response.TableId < 0){
        alert("Could not determin new TableId");
        this.BttnClick_Cancel();
    }
    else {
        var url = "#00-TableDesign-" + response.TableId;
        eval("window.location = url;");
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.BttnClick_Cancel = function (){
    var url = "#00-ManageAssets-" + this.get_ViewModel().ConnectionId;
    if (this.get_ViewModel().ConnectionId < 0)
        url = "#00-StartPage";
    eval("window.location = url;");
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.TabClick_Columns = function (){
    this.CloseAllTabs();
    this.jF2(".Tab_Columns").addClass("Selected").addClass("Tab_Columns_Selected");
    this.ColumnsPanel.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.TabClick_PrimaryKey = function (){
    this.CloseAllTabs();
    this.jF2(".Tab_PrimaryKey").addClass("Selected").addClass("Tab_PrimaryKey_Selected");
    this.PrimaryKeyPanel.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.TabClick_ForeignKeys = function (){
    this.CloseAllTabs();
    this.jF2(".Tab_ForeignKeys").addClass("Selected").addClass("Tab_ForeignKeys_Selected");
    this.ForeignKeysPanel.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.TabClick_Indexes = function (){
    this.CloseAllTabs();
    this.jF2(".Tab_Indexes").addClass("Selected").addClass("Tab_Indexes_Selected");
    this.IndexesPanel.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.TabClick_AppProperties = function (){
    this.CloseAllTabs();
    this.jF2(".Tab_AppProperties").addClass("Selected").addClass("Tab_AppProperties_Selected");
    this.AppPropertiesPanel.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.CloseAllTabs = function (){
    this.jF2(".Tab").removeClass("Selected").removeClass("Tab_Columns_Selected").removeClass("Tab_PrimaryKey_Selected").removeClass("Tab_ForeignKeys_Selected").removeClass("Tab_Indexes_Selected").removeClass("Tab_AppProperties_Selected");
    if (this.ColumnsPanel != null && this.ColumnsPanel.IsOpen)
        this.ColumnsPanel.Close();
    if (this.PrimaryKeyPanel != null && this.PrimaryKeyPanel.IsOpen)
        this.PrimaryKeyPanel.Close();
    if (this.ForeignKeysPanel != null && this.ForeignKeysPanel.IsOpen)
        this.ForeignKeysPanel.Close();
    if (this.IndexesPanel != null && this.IndexesPanel.IsOpen)
        this.IndexesPanel.Close();
    if (this.AppPropertiesPanel != null && this.AppPropertiesPanel.IsOpen)
        this.AppPropertiesPanel.Close();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.OnSubPanel_HasPendingChanges = function (){
    this.jF2(".Bttn_Close").html("Undo Changes & Close Designer");
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.OnGotoTab_Method = function (tabType){
    switch (tabType){
        case "PK":
            this.TabClick_PrimaryKey();
            break;
        case "FK":
            this.TabClick_ForeignKeys();
            break;
        case "IX":
            this.TabClick_Indexes();
            break;
    }
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.OnSubPanelSaved = function (strPanelType){
    switch (strPanelType){
        case "Columns":
            this.LastPanelTypeOnSaved = 1;
            break;
        case "ForeignKeys":
            this.LastPanelTypeOnSaved = 3;
            break;
        case "PrimaryKey":
            this.LastPanelTypeOnSaved = 2;
            break;
        case "Indexes":
            this.LastPanelTypeOnSaved = 4;
            break;
        case "AppProperties":
            this.LastPanelTypeOnSaved = 5;
            break;
        default:
            this.LastPanelTypeOnSaved = 0;
            break;
    }
    this.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.PrimaryKeyPanel_Changed = function (){
    this.LastPanelTypeOnSaved = 2;
    this.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.ForeignKeysPanel_Changed = function (){
    this.LastPanelTypeOnSaved = 3;
    this.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.IndexesPanel_Changed = function (){
    this.LastPanelTypeOnSaved = 4;
    this.Open();
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.JumpTo_Change = function (){
    var tableId = this.jF2(".Select_JumpTo").val();
    if (tableId < 0)
        return;
    window.location.hash = "#00-TableDesign-" + tableId;
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.TableName_Click = function (){
    window.location = ("#00-Table-" + this.get_Model().TableId);
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ColumnsPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.PrimaryKeyPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.ForeignKeysPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.IndexesPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TableDesign.AppPropertiesPanel.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.GetCssRoot = function (){
    return "\r\n                .TableDesignMainUI { width: 946px; }\r\n                .TableDesignMainUI .TopSection_CreateTable { display: none; position: relative; }\r\n                .TableDesignMainUI .TopSection_DesignTable { display: none; position: relative; }\r\n\r\n\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar { margin-top: 14px; }\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar .Dot1 { float: left; margin: 4px 2px 0px 3px; font-size: 1.1em; }\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar .Dot2 { float: left; margin: 4px 3px 0px 2px; font-size: 1.1em; }\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar .Label1 {        font-size: 16px; border: 1px solid #f9c364; border-width: 1px 0px 1px 1px; background: #fefe9f; display: block; float: left; line-height: 24px; padding: 0px 8px; max-width: 200px; overflow: hidden; white-space:nowrap; }\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar .Select_Schema { font-size: 16px; border: 1px solid #f9c364; border-width: 1px 0px 1px 0px; background: #fefe9f; display: block; float: left; height:26px; min-width: 90px; border-left: 1px solid #fefe9f; border-right: 1px solid #fefe9f; }\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar .Txt_TableName { font-size: 16px; border: 1px solid #f9c364; border-width: 1px 1px 1px 0px; background: #fefe9f; display: block; float: left; line-height: 20px; width: 325px; }\r\n                .TableDesignMainUI .TopSection_CreateTable .NameBar .Label_TableName { float:left; position:relative; top: -14px; left: -122px; font-size: .6em; color: #999; width: 120px; text-align: right; }\r\n                                                     \r\n                .TableDesignMainUI .TopSection_CreateTable .BttnsBar { position: absolute; top: 6px; width: 100%; }\r\n                .TableDesignMainUI .TopSection_CreateTable .BttnsBar .Bttn { float: right; background: #14498f; color: #fff; line-height: 40px; padding: 0px 25px; \r\n                                                                             cursor: pointer; margin-left: 5px; }\r\n                .TableDesignMainUI .TopSection_CreateTable .BttnsBar .Bttn:hover { background: #333; }\r\n                .TableDesignMainUI .TopSection_CreateTable .BttnsBar .Bttn_Create:hover { background: #e14738; }\r\n\r\n                .TableDesignMainUI .TopSection_CreateTable .BttnsBar .Inactive { background: #ddd; cursor: default; }\r\n                .TableDesignMainUI .TopSection_CreateTable .BttnsBar .Inactive:hover { background: #ddd; }\r\n\r\n\r\n\r\n\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar { margin-top: 14px; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .For { color: #aaaaaa; padding-right: 1px; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Label1 { background: #fefe9f; color: #888; padding: 3px 8px; border: 1px solid #f9c364; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Txt_TableRename { display:none; border: 1px solid #14498f; background: #fefe9f; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Label1_Period {         border-width: 1px 0px 1px 0px; padding: 3px 3px; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Label1_ConnectionName { border-width: 1px 0px 1px 1px; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Label1_Schema {         border-width: 1px 0px 1px 0px; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Label1_TableName {      border-width: 1px 1px 1px 0px; cursor:pointer; color: #000; }\r\n                .TableDesignMainUI .TopSection_DesignTable .NameBar .Label1_TableName:hover { background: #fff; }\r\n                \r\n\r\n                .TableDesignMainUI .TopSection_DesignTable .BttnsBar { position: absolute; top: 6px; width: 100%; }\r\n                .TableDesignMainUI .TopSection_DesignTable .BttnsBar .Bttn { float: right; background: #14498f; color: #fff; line-height: 40px; padding: 0px 25px; \r\n                                                                             cursor: pointer; margin-left: 5px; }\r\n                .TableDesignMainUI .TopSection_DesignTable .BttnsBar .Bttn:hover { background: #333; }\r\n                .TableDesignMainUI .TopSection_DesignTable .BttnsBar .Inactive { background: #ddd; cursor: default; }\r\n                .TableDesignMainUI .TopSection_DesignTable .BttnsBar .Inactive:hover { background: #ddd; }\r\n\r\n                .TableDesignMainUI .TopSection_DesignTable .JumpToBox { position:absolute; top: 6px; left: 280px; width: 350px; font-size: .8em; color: #999; }\r\n                .TableDesignMainUI .TopSection_DesignTable .JumpToBox .Select_JumpTo { min-width: 250px; max-width: 250px; border-color: #bbb; }\r\n\r\n\r\n                .TableDesignMainUI .TabsBar { line-height: 28px; color: #222; margin-top: 32px; font-size: .9em; }\r\n                .TableDesignMainUI .TabsBar .Tab { float: left; cursor: pointer; z-index: 2; position: relative; padding-top: 1px;\r\n                                                   width: 135px; text-align: center; background: #e5e5ea; margin-right: 10px; }\r\n                .TableDesignMainUI .TabsBar .Tab:hover { background: #555; color: #fff; }\r\n                .TableDesignMainUI .TabsBar .Selected { line-height: 28px; width: 133px;\r\n                                                        border: 1px solid #585858; border-bottom-width: 0px; background: #fff; }\r\n                .TableDesignMainUI .TabsBar .Tab_Columns { margin-left: 28px; }\r\n                .TableDesignMainUI .TabsBar .Tab_CreateNote {       width: 420px; font-size: .8em; text-align:center; cursor: default; margin-right: 18px;\r\n                                                                    border: 1px solid #dfdfe5; border-width: 1px 1px 0px 1px; padding-top: 0px;\r\n                                                                    background: #fafafa; color: #8c8b8b;  }\r\n                .TableDesignMainUI .TabsBar .Tab_CreateNote:hover { background: #fafafa; color: #8c8b8b; }\r\n                .TableDesignMainUI .TabsBar .HozLine { position: relative; top: -1px; border-bottom: 1px solid #585858; z-index:1; }\r\n\r\n\r\n                .TableDesignMainUI .TabsBar .Tab_Columns_Selected { background: #979aa5; color: #fff; cursor:default; }\r\n                .TableDesignMainUI .TabsBar .Tab_Columns_Selected:hover { background: #979aa5; }\r\n\r\n                .TableDesignMainUI .TabsBar .Tab_PrimaryKey_Selected { background: #f26b0b; color: #fff; cursor:default; }\r\n                .TableDesignMainUI .TabsBar .Tab_PrimaryKey_Selected:hover { background: #f26b0b; }\r\n\r\n                .TableDesignMainUI .TabsBar .Tab_ForeignKeys_Selected { background: #0b94da; color: #fff; cursor:default; }\r\n                .TableDesignMainUI .TabsBar .Tab_ForeignKeys_Selected:hover { background: #0b94da; }\r\n\r\n                .TableDesignMainUI .TabsBar .Tab_Indexes_Selected { background: #6cc5aa; color: #fff; cursor:default; }\r\n                .TableDesignMainUI .TabsBar .Tab_Indexes_Selected:hover { background: #6cc5aa; }\r\n\r\n                .TableDesignMainUI .TabsBar .Tab_AppProperties_Selected { background: #173a67; color: #fff; cursor:default; }\r\n                .TableDesignMainUI .TabsBar .Tab_AppProperties_Selected:hover { background: #173a67; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopSection_CreateTable\'>\r\n                    <div class=\'Head\'>Create Table</div>\r\n                    <div class=\'BttnsBar\'>\r\n                        <div class=\'Bttn Bttn_Cancel\' On_Click=\'BttnClick_Cancel\'>Cancel</div>\r\n                        <div class=\'Bttn Bttn_Create\' On_Click=\'BttnClick_Create\'>Create Table</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'NameBar\'>\r\n                        <div class=\'Label1 Label1_ConnectionName\'></div>\r\n                        <div class=\'Dot1\'>.</div>\r\n                        <select class=\'Select_Schema\'>\r\n                        </select>\r\n                        <div class=\'Dot2\'>.</div>\r\n                        <input type=\'text\' class=\'Txt_TableName\' value=\'\' />\r\n                        <div class=\'Label_TableName\'>Table Name</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\'TopSection_DesignTable\'>\r\n                    <div class=\'Head\'>Design Table</div>\r\n                    <div class=\'BttnsBar\'>\r\n                        <div class=\'Bttn Bttn_Close\' On_Click=\'BttnClick_Cancel\'>Close Designer</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'JumpToBox\'>\r\n                        Jump To\r\n                        <select class=\'Select_JumpTo\' On_Change=\'JumpTo_Change\'></select>\r\n                    </div>\r\n                    <div class=\'NameBar\'>\r\n                        <span class=\'Label1 Label1_ConnectionName\' ModelKey=\'ConnectionName\'></span\r\n                            ><span class=\'Label1 Label1_Period\'>.</span><span class=\'Label1 Label1_Schema\' ModelKey=\'Schema\'></span\r\n                            ><span class=\'Label1 Label1_Period\'>.</span><span class=\'Label1 Label1_TableName\' ModelKey=\'TableName\' On_Click=\'TableName_Click\'></span\r\n                            >\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\'TabsBar\'>\r\n                    <div class=\'Tab Tab_ForModify Tab_ForCreate Tab_Columns\'       On_Click=\'TabClick_Columns\'       >Columns</div>\r\n                    <div class=\'Tab               Tab_ForCreate Tab_CreateNote\'                                      >Foreign Keys & Indexes can be set once the table is created</div>\r\n                    <div class=\'Tab Tab_ForModify               Tab_PrimaryKey\'    On_Click=\'TabClick_PrimaryKey\'    >Primary Key</div>\r\n                    <div class=\'Tab Tab_ForModify               Tab_ForeignKeys\'   On_Click=\'TabClick_ForeignKeys\'   >Foreign Keys</div>\r\n                    <div class=\'Tab Tab_ForModify               Tab_Indexes\'       On_Click=\'TabClick_Indexes\'       >Indexes</div>\r\n                    <div class=\'Tab Tab_ForModify               Tab_AppProperties\' On_Click=\'TabClick_AppProperties\' >App Properties</div>\r\n                    <div class=\'clear\'></div>\r\n                    <div class=\'HozLine\'></div>\r\n                </div>\r\n\r\n                <div class=\'PanelsHolder\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesign_ViewModel = function (){
    this.IsCreateNew = false;
    this.ConnectionId = -1;
    this.TableId = -1;
    this.TableStructure = null;
    this.AllTables_InDb = null;
    this.TableStructure_TempOtherTable = null;
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesign_ViewModel.prototype.Set = function (tableDesignResponse){
    this.ConnectionId = tableDesignResponse.ConnectionId;
    this.TableId = tableDesignResponse.TableId;
    this.TableStructure = tableDesignResponse.TableStructure;
    this.AllTables_InDb = tableDesignResponse.AllTables_InDb;
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesign_ViewModel.prototype.Get_Minified_TableStructure = function (){
    var rtn = new ASPdatabaseNET.DbInterfaces.TableObjects.TableStructure();
    rtn.ConnectionId = this.ConnectionId;
    rtn.TableId = this.TableId;
    rtn.Schema = this.TableStructure.Schema;
    rtn.TableName = this.TableStructure.TableName;
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesign_ViewModel.prototype.GetTableInfo = function (tableId){
    if (this.AllTables_InDb != null)
        for (var i = 0; i < this.AllTables_InDb.length; i++)
            if (this.AllTables_InDb[i].TableId == tableId)
                return this.AllTables_InDb[i];
    return null;
};
ASPdatabaseNET.UI.PageParts.TableDesign.TableDesign_ViewModel.prototype.GetTableId = function (schema, tableName){
    if (this.AllTables_InDb != null)
        for (var i = 0; i < this.AllTables_InDb.length; i++){
            var table = this.AllTables_InDb[i];
            if (table.Schema == schema && table.TableName == tableName)
                return table.TableId;
        }
    return -1;
};
if (typeof(ASPdatabaseNET.UI.PageParts.TablePermissions) == "undefined")
    ASPdatabaseNET.UI.PageParts.TablePermissions = {};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TablePermissionProperties jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties.GetCssRoot = function (){
    return "\r\n            .TablePermissionProperties { }\r\n            .TablePermissionProperties .ArrowBox { border: 1px solid #bebfc1; background: #e6e7e9; padding: 7px; color: #5a6169; margin-bottom: 40px; }\r\n            .TablePermissionProperties .ArrowBox .Label1 { padding-left: 35px; font-size: .6em; }\r\n            .TablePermissionProperties .ArrowBox .CenterBox { width: 445px; }\r\n            .TablePermissionProperties .ArrowBox .CenterBox .Label2 { text-align: right; margin: 2px 0px; }\r\n            .TablePermissionProperties .ArrowBox .CenterBox .Label3 { font-size: .7em; text-align: right; }\r\n\r\n            .TablePermissionProperties .Left2a { float: left; margin-left: 55px; width: 212px; font-size: .9em; line-height: 24px; }\r\n            .TablePermissionProperties .Left2b { float: left; width: 255px; font-size: .9em; line-height: 24px; }\r\n            .TablePermissionProperties .Label4 { font-size: 1.1em; }\r\n\r\n            .TablePermissionProperties .DivSpace1 { height: 14px; }\r\n\r\n            .TablePermissionProperties .BottomSectionLine { border: 1px solid #bebfc1; border-top-width: 0px; \r\n                                                            background: #e6e7e9; height: 5px; margin: 17px 0px; }\r\n\r\n            .TablePermissionProperties .Label5 { margin-left: 17px; color: #b1bdcb; font-size: .9em; }\r\n            .TablePermissionProperties .Label6 { margin-left: 17px; color: #3e444a; font-size: .9em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'ArrowBox\'>\r\n                    <div class=\'Label1\'>Permissions Between:</div>\r\n                    <div class=\'CenterBox\'>\r\n                        <div class=\'Label2\'>Table Name   <------------->   Group Name 03</div>\r\n                        <div class=\'Label3\'>(has 7 users)</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\'Left2a\'>\r\n                    <div class=\'Label4\'>Access Level</div>\r\n\r\n                    <input type=\'radio\' name=\'Radio_AccessLevel\' value=\'NoAccess\' />\r\n                    No Access\r\n                    <br />\r\n                    <input type=\'radio\' name=\'Radio_AccessLevel\' value=\'View\' checked=\'checked\' />\r\n                    View\r\n                    <br />\r\n                    <input type=\'radio\' name=\'Radio_AccessLevel\' value=\'Edit\' />\r\n                    Edit\r\n                    <br />\r\n                    <input type=\'radio\' name=\'Radio_AccessLevel\' value=\'FullAdmin\' />\r\n                    Full Admin\r\n                </div>\r\n\r\n                <div class=\'Left2b\'>\r\n                    <div class=\'Label4\'>Options</div>\r\n\r\n                    <input type=\'checkbox\' />\r\n                    Can Download\r\n                    <br />\r\n\r\n                    <input type=\'checkbox\' />\r\n                    Can Create Custom Views\r\n                    \r\n                    <div class=\'DivSpace1\'></div>\r\n\r\n                    <input type=\'checkbox\' />\r\n                    Can Import\r\n                    <br />\r\n\r\n                    <input type=\'checkbox\' />\r\n                    Can Create New Records\r\n                    <br />\r\n\r\n                    <input type=\'checkbox\' />\r\n                    Can Delete\r\n                </div>\r\n\r\n                <div class=\'clear\'></div>\r\n                <div class=\'BottomSectionLine\'></div>\r\n\r\n                <div class=\'Label5\'>Implied Settings</div>\r\n                <div class=\'Label6\'>\r\n                    Users in Group Name 03 can do the following:\r\n                    <br /><br />\r\n\t                &nbsp;&nbsp;&nbsp;&nbsp;    - View All Table Data <br />\r\n\t                &nbsp;&nbsp;&nbsp;&nbsp;    - Create Custom Views<br />\r\n\t                &nbsp;&nbsp;&nbsp;&nbsp;    - Export/Download Data\r\n                </div>\r\n\r\n                <div class=\'BottomSectionLine\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI = function (){
    this.TablePermissionsMenu = null;
    this.TablePermissionProperties = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TableDesignMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.TablePermissionsMenu = new ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu();
    this.TablePermissionProperties = new ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties();
    this.jF2(".Left").append(this.TablePermissionsMenu.jRoot);
    this.jF2(".Right").append(this.TablePermissionProperties.jRoot);
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionProperties.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI.GetCssRoot = function (){
    return "\r\n                .TableDesignMainUI { position: relative; }\r\n\r\n                .TableDesignMainUI .BttnsBar { position: absolute; top: 32px; width: 760px; }\r\n                .TableDesignMainUI .BttnsBar .Bttn { float: right; background: #14498f; color: #fff; line-height: 40px; padding: 0px 25px; \r\n                                                     cursor: pointer; margin-left: 5px; }\r\n                .TableDesignMainUI .BttnsBar .Bttn:hover { background: #333; }\r\n                .TableDesignMainUI .BttnsBar .Inactive { background: #ddd; cursor: default; }\r\n                .TableDesignMainUI .BttnsBar .Inactive:hover { background: #ddd; }\r\n\r\n                .TableDesignMainUI .TableNameLabel { margin-top: 15px; font-size: 1.05em; color: #555; }\r\n                .TableDesignMainUI .TableNameLabel span { background: #f8f8f8; padding: 1px 3px; border: 1px solid #eee; }\r\n\r\n                .TableDesignMainUI .Left { float: left; width: 215px; margin-top: 25px; }\r\n                .TableDesignMainUI .Right { float: right; width: 525px; margin-top: 25px; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>Permissions</div>\r\n                <div class=\'BttnsBar\'>\r\n                    <div class=\'Bttn\'>Cancel</div>\r\n                    <div class=\'Bttn Inactive\'>Save</div>\r\n                </div>\r\n                <div class=\'TableNameLabel\'>\r\n                    For Table: <span>[Connection Name]</span>.<span>[" + ASPdatabaseNET.Config.SystemProperties.AppSchema + "]</span>.<span>[Table Name]</span>\r\n                </div>\r\n                <div class=\'Main\'>\r\n                    <div class=\'Left\'></div>\r\n                    <div class=\'Right\'></div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.Instantiate();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TablePermissionsMenu jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.prototype.TabClick_UserGroups = function (){
    this.jF2(".Tab").removeClass("Selected");
    this.jF2(".Tab_UserGroups").addClass("Selected");
    this.jF2(".MenuBox").hide();
    this.jF2(".MenuBox_UG").show();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.prototype.TabClick_ImpliedPermissions = function (){
    this.jF2(".Tab").removeClass("Selected");
    this.jF2(".Tab_ImpliedPermissions").addClass("Selected");
    this.jF2(".MenuBox").hide();
    this.jF2(".MenuBox_IP").show();
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.GetCssRoot = function (){
    return "\r\n            .TablePermissionsMenu { }\r\n            .TablePermissionsMenu .Tabs .Tab { float: left; color: #14498f; font-size: .8em; text-align:center; \r\n                                            line-height: 19px; padding-bottom: 3px; cursor: pointer; }\r\n            .TablePermissionsMenu .Tabs .Tab:hover { background: #e0e0e0; }\r\n            .TablePermissionsMenu .Tabs .Tab_UserGroups { width: 68px;\r\n                                                    border-top: 1px solid #e0e0e0; \r\n                                                    border-left: 1px solid #e0e0e0;\r\n                                                    border-bottom: 1px solid #14498f; }\r\n            .TablePermissionsMenu .Tabs .Tab_ImpliedPermissions { width: 144px; \r\n                                                            border-top: 1px solid #e0e0e0; \r\n                                                            border-right: 1px solid #e0e0e0;\r\n                                                            border-bottom: 1px solid #14498f; }\r\n            .TablePermissionsMenu .Tabs .Selected { border: 1px solid #14498f; border-bottom-color: #fff; }\r\n\r\n            .TablePermissionsMenu .MenuBox { border: 1px solid #14498f; border-top-width: 0px; padding: 10px 0px; }\r\n\r\n            .TablePermissionsMenu .MenuBox .Item { line-height: 24px; color: #45494f; font-size: .8em; padding-left: 8px; cursor: pointer; }\r\n            .TablePermissionsMenu .MenuBox .Item:hover { background: #ddd; color: #000; }\r\n            .TablePermissionsMenu .MenuBox .Selected { background: #5a6169; color: #fff; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Tabs\'>\r\n                    <div class=\'Tab Tab_UserGroups Selected\' On_Click=\'TabClick_UserGroups\'>User<br />Groups</div>\r\n                    <div class=\'Tab Tab_ImpliedPermissions\' On_Click=\'TabClick_ImpliedPermissions\'>Implied Permissions<br />(by Username)</div>\r\n                </div>\r\n                <div class=\'clear\'></div>\r\n                <div class=\'MenuBox MenuBox_UG\'>\r\n                    <div class=\'Item\'>Group Name 01</div>\r\n                    <div class=\'Item\'>Group Name 02</div>\r\n                    <div class=\'Item Selected\'>Group Name 03</div>\r\n                    <div class=\'Item\'>Group Name 04</div>\r\n                    <div class=\'Item\'>Group Name 05</div>\r\n                    <div class=\'Item\'>Group Name 06</div>\r\n                </div>\r\n                <div class=\'MenuBox MenuBox_IP hide\'>\r\n                    <div class=\'Item\'>Username 01</div>\r\n                    <div class=\'Item\'>Username 02</div>\r\n                    <div class=\'Item\'>Username 03</div>\r\n                    <div class=\'Item\'>Username 04</div>\r\n                    <div class=\'Item\'>Username 05</div>\r\n                    <div class=\'Item\'>Username 06</div>\r\n                    <div class=\'Item\'>Username 07</div>\r\n                    <div class=\'Item Selected\'>Username 08</div>\r\n                    <div class=\'Item\'>Username 09</div>\r\n                    <div class=\'Item\'>Username 10</div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMenu, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI = function (){
    this.OnSave = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ViewSettingsMainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.BindUI();
    var ordinalPosition = 1;
    var displayOrder = 1;
    var table = this.jF2(".Table3");
    for (var i = 0; i < 3; i++){
        var columnRow = new ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow();
        if (i < 2)
            columnRow.IsPK = true;
        columnRow.OrdinalPosition = ordinalPosition++;
        columnRow.DisplayOrder = displayOrder++;
        columnRow.Instantiate();
        table.append(columnRow.jRoot);
    }
    var sectionRow = new ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow();
    sectionRow.DisplayOrder = displayOrder++;
    sectionRow.Instantiate();
    table.append(sectionRow.jRoot);
    for (var i = 0; i < 6; i++){
        var columnRow = new ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow();
        columnRow.OrdinalPosition = ordinalPosition++;
        columnRow.DisplayOrder = displayOrder++;
        columnRow.Instantiate();
        table.append(columnRow.jRoot);
    }
    sectionRow = new ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow();
    sectionRow.DisplayOrder = displayOrder++;
    sectionRow.Instantiate();
    table.append(sectionRow.jRoot);
    for (var i = 0; i < 4; i++){
        var columnRow = new ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow();
        columnRow.OrdinalPosition = ordinalPosition++;
        columnRow.DisplayOrder = displayOrder++;
        columnRow.Instantiate();
        table.append(columnRow.jRoot);
    }
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.prototype.BttnClick_Ok = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.prototype.BttnClick_Cancel = function (){
    this.Close();
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_ColumnRow.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.EditViewSettings.ViewSettings_SectionRow.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.GetCssRoot = function (){
    var width1 = "946px";
    return "\r\n                .ViewSettingsMainUI { position: relative; }\r\n                .ViewSettingsMainUI .Head { width: " + width1 + "; color: #173a67; font-size: 1.6em; margin-bottom: 35px; }\r\n                .ViewSettingsMainUI .BttnsBar { position: absolute; top: 0px; width: " + width1 + "; }\r\n                .ViewSettingsMainUI .BttnsBar .Bttn { float: right; background: #14498f; color: #fff; line-height: 40px; \r\n                                                      padding: 0px 25px; cursor: pointer; margin-left: 5px; }\r\n                .ViewSettingsMainUI .BttnsBar .Bttn:hover { background: #333; }\r\n                .ViewSettingsMainUI .BttnsBar .Inactive { background: #ddd; cursor: default; }\r\n                .ViewSettingsMainUI .BttnsBar .Inactive:hover { background: #ddd; }\r\n\r\n                .ViewSettingsMainUI .Body1 { width: " + width1 + "; }\r\n                .ViewSettingsMainUI .Body1 .NameBox { float: left; width: 351px; }\r\n                .ViewSettingsMainUI .Body1 .NameBox .NameBoxItem { display: block; }\r\n                .ViewSettingsMainUI .Body1 .NameBox .Label1 { font-size: .7em; margin-bottom: 3px; }\r\n                .ViewSettingsMainUI .Body1 .NameBox input { border: 1px solid #14498f; line-height: 25px; width: 351px; }\r\n\r\n                .ViewSettingsMainUI .Body1 .SubBttnsBox { float: right; width: 402px; margin-top: 16px; }\r\n                .ViewSettingsMainUI .Body1 .SubBttnsBox .Bttn2 { float: right; background: #14498f; color: #fff; line-height: 31px; text-align: center; \r\n                                                                 width: 196px; cursor: pointer; margin-left: 5px; font-size: .75em; }\r\n                .ViewSettingsMainUI .Body1 .SubBttnsBox .Bttn2:hover { background: #333; }\r\n                .ViewSettingsMainUI .Body1 .SubBttnsBox .Bttn2_1st { margin-left: 0px; }\r\n\r\n                .ViewSettingsMainUI .Body1 .Body2 { margin: 30px 0px 0px 20px; }\r\n\r\n                .ViewSettingsMainUI .Body1 .Body2 .Table1 { width: 100%; margin-bottom: 25px; }\r\n                .ViewSettingsMainUI .Body1 .Body2 .Table1 .td1 { line-height: 31px; width: 180px; text-align: center; cursor: pointer; \r\n                                                                 background: #14498f; color: #fff; font-size: .85em; }\r\n                .ViewSettingsMainUI .Body1 .Body2 .Table1 .td1:hover { background: #333; }\r\n                .ViewSettingsMainUI .Body1 .Body2 .Table1 .td2 { line-height: 29px; font-size: .75em; background: #eee; \r\n                                                                 padding: 0px 0px 0px 12px;\r\n                                                                 border: 1px dashed #bbb; border-left-width: 0px; }\r\n\r\n                .ViewSettingsMainUI .Table3 { width: 100%; font-size: .8em; }\r\n                .ViewSettingsMainUI .Table3 th { border-bottom: 2px solid #12325d; color: #6d6d6d; font-weight: bold; \r\n                                                 vertical-align: middle; text-align: center; padding-bottom: 2px; }\r\n                .ViewSettingsMainUI .Table3 .th1 { width: 95px; font-size: .8em; }\r\n                .ViewSettingsMainUI .Table3 .th2 { width: 35px; }\r\n                .ViewSettingsMainUI .Table3 .th3 { width: 60px; font-size: .8em; }\r\n                .ViewSettingsMainUI .Table3 .th4 { }\r\n                .ViewSettingsMainUI .Table3 .th5 { width: 50px; }\r\n                .ViewSettingsMainUI .Table3 .th6 { width: 40px; }\r\n                .ViewSettingsMainUI .Table3 .th7 { width: 100px; }\r\n                .ViewSettingsMainUI .Table3 .th8 { width: 140px; }\r\n                .ViewSettingsMainUI .Table3 .th9 { width: 140px; font-size: .8em; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'BttnsBar\'>\r\n                    <div class=\'Bttn\' On_Click=\'BttnClick_Cancel\'>Cancel</div>\r\n                    <div class=\'Bttn\' On_Click=\'BttnClick_Ok\'>Ok</div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n                <div class=\'Head\'>Edit View Settings</div>\r\n                <div class=\'Body1\'>\r\n                    <div class=\'NameBox\'>\r\n                        <div class=\'Label1 NameBoxItem\'>App View Name</div>\r\n                        <input class=\'NameBoxItem Txt_NameBox\' type=\'text\' />\r\n                    </div>\r\n                    <div class=\'SubBttnsBox\'>\r\n                        <div class=\'Bttn2\'>See All Implied Permissions</div>\r\n                        <div class=\'Bttn2 Bttn2_1st\'>Global Permissions</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'clear\'></div>\r\n\r\n                    <div class=\'Body2\'>\r\n                        <table class=\'Table1\'>\r\n                            <tr>\r\n                                <td class=\'td1\'>+ Column Section</td>\r\n                                <td class=\'td2\'>\r\n                                    Use these sections to group & organize columns.&nbsp; \r\n                                    Permissions can be applied separately to each column section.\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <table class=\'Table3\'>\r\n                            <tr>\r\n                                <th class=\'th1\'>Display<br />Order</th>\r\n                                <th class=\'th2\'></th>\r\n                                <th class=\'th3\'>Ordinal<br />Position</th>\r\n                                <th class=\'th4\'>Column Name</th>\r\n                                <th class=\'th5\'></th>\r\n                                <th class=\'th6\'>Hide</th>\r\n                                <th class=\'th7\'>Sort<br /></th>\r\n                                <th class=\'th8\'>Filter</th>\r\n                                <th class=\'th9\'>Display<br />Settings</th>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI, ASPdb.FrameworkUI.MRBPattern);
function ASPdatabaseNET_Start(ready){
    eval(" $(document).ready(function(){ ASPdatabaseNET_Start__DocumentIsReady(); }); ");
};
function ASPdatabaseNET_Start__DocumentIsReady(){
    $("body").append("<style>" + ASPdatabaseNET.UI.PagesFramework.BasePage.GetCssTree() + "</style>");
    var corePage = new ASPdatabaseNET.UI.PagesFramework.BasePage();
    corePage.Instantiate();
    $("body").append(corePage.jRoot);
    corePage.Open();
};
function ASPdatabaseNET_LoginPage(ready){
    eval(" $(document).ready(function(){ ASPdatabaseNET_LoginPage__DocumentIsReady(); }); ");
};
function ASPdatabaseNET_LoginPage__DocumentIsReady(){
    $("body").append("<style>" + ASPdatabaseNET.UI.PagesFramework.BasePage.GetCssTree() + "</style>");
    var loginPage = new ASPdatabaseNET.UI.PageParts.Login.LoginMainUI();
    loginPage.Instantiate();
    $("body").append(loginPage.jRoot);
    loginPage.Open();
};
function ASPdatabaseNET_InstallPage(ready){
    eval(" $(document).ready(function(){ ASPdatabaseNET_InstallPage__DocumentIsReady(); }); ");
};
function ASPdatabaseNET_InstallPage__DocumentIsReady(){
    $("body").append("<style>" + ASPdatabaseNET.UI.PagesFramework.BasePage.GetCssTree() + "</style>");
    var installPage = new ASPdatabaseNET.UI.PageParts.Install.InstallMainUI();
    installPage.Instantiate();
    $("body").append(installPage.jRoot);
    installPage.Open();
};
if (typeof(ASPdatabaseNET.UI.PagesFramework) == "undefined")
    ASPdatabaseNET.UI.PagesFramework = {};
ASPdatabaseNET.UI.PagesFramework.BasePage = function (){
    this.SubPage = null;
    this.IgnoreNext_HashChange = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.AttachThisToDocument();
    this.DoPing();
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.DoPing = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "DoPing_Return").PingServerTime();
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.DoPing_Return = function (){
    var thisObj = this;
    eval("setTimeout(function(){ thisObj.DoPing(); }, 90000);");
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.AttachThisToDocument = function (){
    var thisObj = this;
    eval("document.ASPdatabaseNET_BasePage = thisObj;");
};
ASPdatabaseNET.UI.PagesFramework.BasePage.GetFromDocument = function (){
    var rtn = null;
    try{
        eval("rtn = document.ASPdatabaseNET_BasePage;");
    }
    catch($$e14){
        rtn = null;
    }
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'BasePage jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.ConnectEvents_Sub = function (){
    var thisObj = this;
    eval("$(window).on(\'hashchange\', function() { thisObj.OnWindow_HashChange(); });");
    eval("$(window).resize(function() { thisObj.WindowResized_InstancePassThru(); });");
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
    if (window.location.hash == "")
        window.location.hash = "#00-Home";
    ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().Launch();
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.LaunchPage = function (pageId){
    this.SubPage = pageId.CreateAndGetPageObj();
    this.jRoot.find(".PageContent").html("");
    this.jRoot.find(".PageContent").append(this.SubPage.Get_jRoot());
    this.SubPage.Open();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.OnWindow_HashChange = function (){
    if (this.IgnoreNext_HashChange){
        this.IgnoreNext_HashChange = false;
        return;
    }
    document.title = "ASPdatabase.NET";
    var newPageIdentifier = ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash();
    if (this.SubPage.get_PageId().PageType == newPageIdentifier.PageType)
        this.SubPage.set_PageId(newPageIdentifier);
    else
        newPageIdentifier.Launch();
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.WindowResized_InstancePassThru = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized = function (){
    var windowHeight = $(window).height();
    var windowWidth = $(window).width();
    var autoResizeItems = $(".AutoResize");
    for (var i = 0; i < autoResizeItems.length; i++){
        var jAutoResize = $(autoResizeItems[i]);
        var height = windowHeight - jAutoResize.offset().top - ASPdatabaseNET.UI.PagesFramework.BasePage.Get_AutoResize_BottomSpace(jAutoResize);
        jAutoResize.height(height);
    }
    var autoResizeXYItems = $(".AutoResizeXY");
    for (var i = 0; i < autoResizeXYItems.length; i++){
        var jAutoResize = $(autoResizeXYItems[i]);
        var height = windowHeight - jAutoResize.offset().top - ASPdatabaseNET.UI.PagesFramework.BasePage.Get_AutoResize_BottomSpace(jAutoResize);
        var width = windowWidth - jAutoResize.offset().left - ASPdatabaseNET.UI.PagesFramework.BasePage.Get_AutoResize_RightSpace(jAutoResize);
        jAutoResize.height(height);
        jAutoResize.width(width);
    }
};
ASPdatabaseNET.UI.PagesFramework.BasePage.Get_AutoResize_BottomSpace = function (jItem){
    var rtn = 0;
    try{
        rtn = jItem.attr("AutoResize_BottomSpace");
        if (rtn == null || (1 * rtn) < 1)
            rtn = 0;
    }
    catch($$e15){
        rtn = 0;
    }
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.BasePage.Get_AutoResize_RightSpace = function (jItem){
    var rtn = 0;
    try{
        rtn = jItem.attr("AutoResize_RightSpace");
        if (rtn == null || (1 * rtn) < 1)
            rtn = 0;
    }
    catch($$e16){
        rtn = 0;
    }
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.BasePage.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PagesFramework.BasePage.GetCssRoot();
    rtn += ASPdatabaseNET.UI.PageParts.Login.LoginMainUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Install.InstallMainUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.GlobalParts.TopBar.GetCssTree();
    rtn += ASPdatabaseNET.UI.GlobalParts.LeftNav.GetCssTree();
    rtn += ASPdatabaseNET.UI.Pages.EverythingPage.GetCssTree();
    rtn += ASPdatabaseNET.UI.Pages.OtherSamplePage.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.BasePage.GetCssRoot = function (){
    return "\r\n            .AutoResize { overflow-x: hidden; overflow-y: auto; }\r\n            .AutoResizeXY { overflow: auto; }\r\n\r\n            .BasePage {  }\r\n\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video, input {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont-family: Verdana, Geneva, sans-serif;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section { display: block; }\r\nol, ul { list-style: none; }\r\nblockquote, q { quotes: none; }\r\nblockquote:before, blockquote:after, q:before, q:after { content: \'\'; content: none; }\r\ntable { border-collapse: collapse; border-spacing: 0; }\r\ntd { vertical-align: top; }\r\n.clear{ clear: both; }\r\n.hide { display: none; }\r\nbody { background: #ffffff; color: #222222; overflow: hidden; cursor: default; }\r\na { text-decoration: none; }\r\ninput[type=button] { padding: 5px 10px; }\r\ninput[type=text] { padding: 2px; }\r\ninput[type=button] {\r\n  -webkit-appearance: none;\r\n  -webkit-border-radius: 0;\r\n}\r\nASPdatabaseNET { display: none; }\r\n.Table100 { width: 100%; }\r\n.NoSelect { \r\n-webkit-touch-callout: none;\r\n-webkit-user-select: none;\r\n-khtml-user-select: none;\r\n-moz-user-select: none;\r\n-ms-user-select: none;\r\nuser-select: none; }\r\n.YesSelect { \r\n-webkit-touch-callout: initial;\r\n-webkit-user-select: initial;\r\n-khtml-user-select: initial;\r\n-moz-user-select: initial;\r\n-ms-user-select: initial;\r\nuser-select: initial; }\r\n            ";
};
ASPdatabaseNET.UI.PagesFramework.BasePage.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'PageContent\'>\r\n            </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PagesFramework.BasePage, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PagesFramework.PageIdentifier = function (pageType){
    this.PageType = 0;
    this.PageParam1 = "";
    this.PageParam2 = "";
    this.PageParam3 = "";
    this.PageParam4 = "";
    this.PageParam5 = "";
    this.PageType = pageType;
};
ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash = function (){
    var rtn = new ASPdatabaseNET.UI.PagesFramework.PageIdentifier(0);
    var arr = window.location.hash.replace("#", "").split("-");
    if (arr.length > 0)if (arr[0].toLowerCase() == "manageassets")
        window.location.href = "#00-ManageAssets";
    var pageTypeInt = ASPdb.FrameworkUI.IntStatic.Parse(arr[0], 0);
    var allEnumInts = ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetAllPageTypesInts();
    var pageTypeIsValid = false;
    for (var i = 0; i < allEnumInts.length; i++)
        if (allEnumInts[i] == pageTypeInt)
            pageTypeIsValid = true;
    rtn.PageType = 0;
    if (pageTypeIsValid){
        var tmpPageType = 0;
        eval("tmpPageType = pageTypeInt;");
        rtn.PageType = tmpPageType;
    }
    else
        window.location.hash = "";
    if (arr.length > 1)
        rtn.PageParam1 = arr[1];
    if (arr.length > 2)
        rtn.PageParam2 = arr[2];
    if (arr.length > 3)
        rtn.PageParam3 = arr[3];
    if (arr.length > 4)
        rtn.PageParam4 = arr[4];
    if (arr.length > 5)
        rtn.PageParam5 = arr[5];
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetAllPageTypesInts = function (){
    var i = 0;
    var rtn = ( []);
    rtn[i++] = 0;
    rtn[i++] = 20;
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.PageIdentifier.prototype.ToHash = function (){
    var rtn = "";
    var tmpPageStr = this.PageType;
    if (("" + tmpPageStr).length < 2)
        rtn += "#0" + tmpPageStr;
    else
        rtn += "#" + tmpPageStr;
    var maxFound = false;
    var maxParams = 5;
    if (!maxFound){
        if (("" + this.PageParam5).length > 0){
            maxFound = true;
        }
        else {
            maxParams = 4;
        }
    }
    if (!maxFound){
        if (("" + this.PageParam4).length > 0){
            maxFound = true;
        }
        else {
            maxParams = 3;
        }
    }
    if (!maxFound){
        if (("" + this.PageParam3).length > 0){
            maxFound = true;
        }
        else {
            maxParams = 2;
        }
    }
    if (!maxFound){
        if (("" + this.PageParam2).length > 0){
            maxFound = true;
        }
        else {
            maxParams = 1;
        }
    }
    if (!maxFound){
        if (("" + this.PageParam1).length > 0){
            maxFound = true;
        }
        else {
            maxParams = 0;
        }
    }
    if (("" + this.PageParam1).length < 1)
        this.PageParam1 = "00";
    if (("" + this.PageParam2).length < 1)
        this.PageParam2 = "00";
    if (("" + this.PageParam3).length < 1)
        this.PageParam3 = "00";
    if (("" + this.PageParam4).length < 1)
        this.PageParam4 = "00";
    if (("" + this.PageParam5).length < 1)
        this.PageParam5 = "00";
    if (maxParams >= 1)
        rtn += "-" + this.PageParam1;
    if (maxParams >= 2)
        rtn += "-" + this.PageParam2;
    if (maxParams >= 3)
        rtn += "-" + this.PageParam3;
    if (maxParams >= 4)
        rtn += "-" + this.PageParam4;
    if (maxParams >= 5)
        rtn += "-" + this.PageParam5;
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.PageIdentifier.prototype.CreateAndGetPageObj = function (){
    var rtn = null;
    switch (this.PageType){
        case 0:
            rtn = new ASPdatabaseNET.UI.Pages.EverythingPage();
            break;
        case 20:
            rtn = new ASPdatabaseNET.UI.Pages.OtherSamplePage();
            break;
    }
    if (rtn != null){
        rtn.set_PageId(this);
        rtn.Instantiate();
    }
    return rtn;
};
ASPdatabaseNET.UI.PagesFramework.PageIdentifier.prototype.Launch = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.GetFromDocument().LaunchPage(this);
};
if (typeof(ASPdatabaseNET.UI.Pages) == "undefined")
    ASPdatabaseNET.UI.Pages = {};
ASPdatabaseNET.UI.Pages.OtherSamplePage = function (){
    this._pageId = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.Get_jRoot = function (){
    return this.jRoot;
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.Get_HeaderColor = function (){
    return "";
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.get_PageId = function (){
    return this._pageId;
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.set_PageId = function (value){
    this._pageId = value;
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'OtherSamplePage jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.ConnectEvents_Sub = function (){
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.Pages.OtherSamplePage.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.GetCssRoot = function (){
    return "\r\n                .OtherSamplePage { }\r\n            ";
};
ASPdatabaseNET.UI.Pages.OtherSamplePage.prototype.GetHtmlRoot = function (){
    return "\r\n                OtherSamplePage\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.Pages.OtherSamplePage, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.Pages.EverythingPage = function (){
    this.TopBar = null;
    this.LeftNav = null;
    this.CurrentSubUI = null;
    this.TableGridMain = null;
    this.HomePageMainUI = null;
    this.MyAccountMainUI = null;
    this.ConnectionsMainUI = null;
    this.ConnectionPropertiesMainUI = null;
    this.ManageAssetsMainUI = null;
    this.TableDesignMainUI = null;
    this.TablePermissionsMainUI = null;
    this.UsersMainUI = null;
    this.SubscriptionMainUI = null;
    this.OtherSettingsMainUI = null;
    this.SendFeedbackMainUI = null;
    this.AboutMainUI = null;
    this.RecordMainUI = null;
    this._pageId = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    var thisObj = this;
    eval("document.The_EverythingPage = thisObj;");
};
ASPdatabaseNET.UI.Pages.EverythingPage.Get_The_EverythingPage = function (){
    var rtn = null;
    try{
        eval("rtn = document.The_EverythingPage;");
    }
    catch($$e17){
    }
    return rtn;
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.Get_jRoot = function (){
    return this.jRoot;
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.Get_HeaderColor = function (){
    return "";
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.get_PageId = function (){
    return this._pageId;
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.set_PageId = function (value){
    this._pageId = value;
    var param1 = ASPdb.FrameworkUI.JsStr.S(this.get_PageId().PageParam1).ToLower().Trim().String;
    var param2 = ASPdb.FrameworkUI.JsStr.S(this.get_PageId().PageParam2).ToLower().Trim().String;
    var previousSubUI = this.CurrentSubUI;
    var tempSubUI = null;
    if (param1 == "table" || param1 == "view"){
        if (this.TableGridMain != null){
            if (previousSubUI != null)
                previousSubUI.Close();
            this.TableGridMain.set_ViewModel(new ASPdatabaseNET.UI.TableGrid.Objs.GridViewModel());
            switch (param1){
                case "table":
                    this.TableGridMain.get_ViewModel().TableType = 1;
                    break;
                case "view":
                    this.TableGridMain.get_ViewModel().TableType = 2;
                    break;
                default:
                    this.TableGridMain.get_ViewModel().TableType = 0;
                    break;
            }
            this.TableGridMain.get_ViewModel().Id = -1;
            try{
                var tmp = 1 * this.get_PageId().PageParam2;
                this.TableGridMain.get_ViewModel().Id = tmp;
            }
            catch($$e18){
            }
            this.TableGridMain.Instantiate();
            this.jF2(".TableGridMain_Holder").html("");
            this.jF2(".TableGridMain_Holder").append(this.TableGridMain.jRoot);
            this.CurrentSubUI = this.TableGridMain;
        }
    }
    else {
        switch (param1){
            case "home":
                tempSubUI = this.HomePageMainUI;
                break;
            case "myaccount":
                tempSubUI = this.MyAccountMainUI;
                break;
            case "connections":
                tempSubUI = this.ConnectionsMainUI;
                break;
            case "connectionproperties":
                tempSubUI = this.ConnectionPropertiesMainUI;
                break;
            case "manageassets":
                tempSubUI = this.ManageAssetsMainUI;
                break;
            case "tabledesign":
                tempSubUI = this.TableDesignMainUI;
                break;
            case "tablepermissions":
                tempSubUI = this.TablePermissionsMainUI;
                break;
            case "users":
                tempSubUI = this.UsersMainUI;
                break;
            case "subscription":
                tempSubUI = this.SubscriptionMainUI;
                break;
            case "othersettings":
                tempSubUI = this.OtherSettingsMainUI;
                break;
            case "sendfeedback":
                tempSubUI = this.SendFeedbackMainUI;
                break;
            case "about":
                tempSubUI = this.AboutMainUI;
                break;
            case "record":
                tempSubUI = this.RecordMainUI;
                break;
        }
        if (tempSubUI != null){
            if (previousSubUI != null && previousSubUI != tempSubUI)
                previousSubUI.Close();
            if (!tempSubUI.Get_IsInstantiated()){
                tempSubUI.Instantiate();
                this.jF2(".TD_MainBox").append(tempSubUI.Get_jRoot());
            }
            tempSubUI.Open();
            this.CurrentSubUI = tempSubUI;
        }
    }
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'StartPage jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.TopBar = new ASPdatabaseNET.UI.GlobalParts.TopBar();
    this.jF2(".TopBarHolder").append(this.TopBar.jRoot);
    this.LeftNav = new ASPdatabaseNET.UI.GlobalParts.LeftNav();
    this.jF2(".TD_LeftNav").append(this.LeftNav.jRoot);
    this.TableGridMain = new ASPdatabaseNET.UI.TableGrid.TableGridMain();
    this.HomePageMainUI = new ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI();
    this.MyAccountMainUI = new ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI();
    this.ConnectionsMainUI = new ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI();
    this.ConnectionPropertiesMainUI = new ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI();
    this.ManageAssetsMainUI = new ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI();
    this.TableDesignMainUI = new ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI();
    this.TablePermissionsMainUI = new ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI();
    this.UsersMainUI = new ASPdatabaseNET.UI.PageParts.Users.UsersMainUI();
    this.SubscriptionMainUI = new ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI();
    this.OtherSettingsMainUI = new ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI();
    this.SendFeedbackMainUI = new ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI();
    this.AboutMainUI = new ASPdatabaseNET.UI.PageParts.About.AboutMainUI();
    this.RecordMainUI = new ASPdatabaseNET.UI.PageParts.Record.RecordMainUI();
    this.set_PageId(this.get_PageId());
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.ConnectEvents_Sub = function (){
};
ASPdatabaseNET.UI.Pages.EverythingPage.GetCssTree = function (){
    var rtn = "" + ASPdatabaseNET.UI.Pages.EverythingPage.GetCssRoot() + ASPdatabaseNET.UI.TableGrid.TableGridMain.GetCssTree() + ASPdatabaseNET.UI.PageParts.HomePage.HomePageMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.ConnectionProperties.ConnectionPropertiesMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.TableDesign.TableDesignMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.TablePermissions.TablePermissionsMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.SendFeedback.SendFeedbackMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.About.AboutMainUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Record.RecordMainUI.GetCssTree();
    return rtn;
};
ASPdatabaseNET.UI.Pages.EverythingPage.GetCssRoot = function (){
    return "\r\n                .StartPage { font-size: 16px; }\r\n                .StartPage .TopBarHolder { }\r\n                .StartPage .Table_StartPage { width: 100%; }\r\n                .StartPage .Table_StartPage .TD_LeftNav { width: 15em; min-width: 15em; background: #e4e4e4; }\r\n                .StartPage .Table_StartPage .TD_MainBox { width: 100%; }\r\n\r\n\r\n                .StartPage .Table_StartPage .TD_MainBox .MainUI { padding: 2em 1.75em 0em 2.625em; }\r\n                .StartPage .Table_StartPage .TD_MainBox .MainUI .Head { width: 29.6875em; color: #173a67; font-size: 1.6em; }\r\n                .StartPage .Table_StartPage .TD_MainBox .MainUI .Main { width: 47.5em; padding-top: 1.125em; }\r\n\r\n                @media (max-width: 1050px) { .StartPage { font-size: .95em; } }\r\n                @media (max-width: 1000px) { .StartPage { font-size: .9em;  } }\r\n                @media (max-width: 950px)  { .StartPage { font-size: .85em; } }\r\n                @media (max-width: 900px)  { .StartPage { font-size: .8em;  } }\r\n                @media (max-width: 850px)  { .StartPage { font-size: .75em; } }\r\n                @media (max-width: 800px)  { .StartPage { font-size: .7em;  } }\r\n            ";
};
ASPdatabaseNET.UI.Pages.EverythingPage.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TopBarHolder\'></div>\r\n                <table class=\'Table_StartPage\'>\r\n                    <tr>\r\n                        <td class=\'TD_LeftNav\'></td>\r\n                        <td class=\'TD_MainBox\'>\r\n                            <div class=\'TableGridMain_Holder\'></div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.Pages.EverythingPage, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.About.AboutMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'AboutMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    var otherToolsDiv = this.jF(".OtherToolsDiv");
    otherToolsDiv.append(this.GetNotice_SharpKit());
    otherToolsDiv.append(this.GetNotice_jQuery());
    otherToolsDiv.append(this.GetNotice_jQueryJSON());
    otherToolsDiv.append(this.GetNotice_CryptoJS());
    otherToolsDiv.append(this.GetNotice_bcrypt());
    otherToolsDiv.append(this.GetNotice_bouncycastle());
    otherToolsDiv.append(this.GetNotice_EPPlus());
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.Open_Sub = function (){
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Return").AboutPage_GetInfo();
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.BindUI();
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.About.AboutMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.GetCssRoot = function (){
    return "\r\n                .AboutMainUI { }\r\n                .AboutMainUI a { color: blue; padding: 0px 2px; }\r\n                .AboutMainUI a:hover { background: #14498f; color: #fff; }\r\n                .AboutMainUI .OtherToolsDiv { overflow-y:scroll; max-height: 10em; background: #f3f3f3; padding: .5em; }\r\n                .AboutMainUI .OtherToolsDiv .Div1 { margin: .5em 0em .5em 1.4em; border-top: 1px solid #ccc; padding-top: .3em; }\r\n                .AboutMainUI .OtherToolsDiv .Div1 .A1 { display:block; width: 16em; padding: .1em .5em; margin-bottom: .2em; }\r\n                .AboutMainUI .OtherToolsDiv .Div1 div { padding: 0.125em 0.625em; font-size:.7em; }\r\n                .AboutMainUI .Holder_SubscriptionAgreement {  }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'Head\'>About ASPdatabase.NET</div>\r\n            <div class=\'Main AutoResize\' AutoResize_BottomSpace=\'21\'>\r\n\r\n                <br />\r\n                <a href=\'http://www.aspdatabase.net/\' target=\'_new\'>www.ASPdatabase.NET</a>\r\n                <br />\r\n                <br />\r\n                Version: <span ModelKey=\'Version\'></span>\r\n                <br />\r\n                Version Date: <span ModelKey=\'VersionDate\'></span>\r\n                <br />\r\n                <br />\r\n                Created by <a href=\'https://twitter.com/mdtanner\' target=\'_new\'>Michael Tanner</a>\r\n                <br />\r\n                <br />\r\n                <div class=\'CopyrightLine\' ModelKey=\'CopyrightLine\'></div>\r\n                <br />\r\n\r\n                <div class=\'OtherToolsDiv\'>\r\n                    3rd Party Tools<br />\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <a href=\'ASPdatabase.NET.aspx?SubscriptionAgreement\' target=\'_new\'>Open Subscription Agreement <i>(In new tab/window)</i></a>\r\n                <br />\r\n                <br />\r\n                <div class=\'SubscriptionAgreement\' ModelKey=\'SubscriptionAgreement\'></div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_SharpKit = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'https://github.com/SharpKit/SharpKit\' target=\'_blank\'>SharpKit</a>\r\n                <div>\r\n                    SharpKit is licensed under GPL. It has all features and has no restrictions. \r\n                    <br />\r\n                    For commercial licenses please refer to <a href=\'http://sharpkit.net\' target=\'_blank\'>http://sharpkit.net</a>\r\n                </div>\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_jQuery = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'http://jquery.com/\' target=\'_blank\'>jQuery & jQuery UI</a>\r\n                <div>\r\n                    Copyright (C) 2006-2014 jQuery Foundation\r\n                    <br /><br />\r\n                    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n                    <br /><br />\r\n                    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n                    <br /><br />\r\n                    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n                </div>\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_jQueryJSON = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'https://github.com/Krinkle/jquery-json\' target=\'_blank\'>jQuery JSON</a>\r\n                <div>\r\n                    Copyright 2009-2011 Brantley Harris<br />\r\n                    Copyright 2010–2014 Timo Tijhof<br />\r\n                    <br /><br />\r\n                    Permission is hereby granted, free of charge, to any person obtaining\r\n                    a copy of this software and associated documentation files (the\r\n                    \"Software\"), to deal in the Software without restriction, including\r\n                    without limitation the rights to use, copy, modify, merge, publish,\r\n                    distribute, sublicense, and/or sell copies of the Software, and to\r\n                    permit persons to whom the Software is furnished to do so, subject to\r\n                    the following conditions:\r\n                    <br /><br />\r\n                    The above copyright notice and this permission notice shall be\r\n                    included in all copies or substantial portions of the Software.\r\n                    <br /><br />\r\n                    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n                    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n                    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n                    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n                    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n                    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n                    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n                </div>\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_CryptoJS = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'https://code.google.com/p/crypto-js/\' target=\'_blank\'>CryptoJS</a>\r\n                <div>\r\n                    (c) 2009-2013 by Jeff Mott. All rights reserved.\r\n                    <br /><br />\r\n                    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n                    <br /><br />\r\n                    Redistributions of source code must retain the above copyright notice, this list of conditions, and the following disclaimer.\r\n                    <br /><br />\r\n                    Redistributions in binary form must reproduce the above copyright notice, this list of conditions, and the following disclaimer in the documentation or other materials provided with the distribution.\r\n                    <br /><br />\r\n                    Neither the name CryptoJS nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n                    <br /><br />\r\n                    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS,\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.<br />\r\n                </div>\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_bcrypt = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'http://bcrypt.codeplex.com/\' target=\'_blank\'>BCrypt.Net</a>\r\n                <div>\r\n                    Copyright (c) 2006, 2010, Damien Miller <djm@mindrot.org>, Ryan Emerle\r\n                    All rights reserved.\r\n                    <br /><br />\r\n                    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n                    <br /><br />\r\n                    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n                    <br /><br />\r\n                    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n                    <br /><br />\r\n                    * Neither the name of BCrypt.Net nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n                    <br /><br />\r\n                    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n                </div>\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_bouncycastle = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'http://www.bouncycastle.org/csharp/\' target=\'_blank\'>Bouncy Castle C# API</a>\r\n                <div>\r\n                    Copyright (c) 2000 - 2011 The Legion of the Bouncy Castle Inc. (<a href=\'http://www.bouncycastle.org\' target=\'_blank\'>http://www.bouncycastle.org</a>)\r\n                    <br /><br />\r\n                    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n                    <br /><br />\r\n                    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n                    <br /><br />\r\n                    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n                </div>\r\n            </div>\r\n            ";
};
ASPdatabaseNET.UI.PageParts.About.AboutMainUI.prototype.GetNotice_EPPlus = function (){
    return "\r\n            <div class=\'Div1\'>\r\n                <a class=\'A1\' href=\'http://epplus.codeplex.com/\' target=\'_blank\'>EPPlus</a>\r\n                <div>\r\n                    GNU Library General Public License (LGPL)\r\n                    <br />\r\n                    Version 2.1, February 1999\r\n                    <br />\r\n                    <br />\r\n                    Copyright (C) 1991, 1999 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\r\n                    <br />\r\n                    <br />\r\n                    [This is the first released version of the Lesser GPL. It also counts as the successor of the GNU Library Public License, version 2, hence the version number 2.1.]\r\n                    <br />\r\n                    <br />\r\n                    <a href=\'http://epplus.codeplex.com/license\' target=\'_blank\'>http://epplus.codeplex.com/license</a>\r\n                </div>\r\n            </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.About.AboutMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.Connections) == "undefined")
    ASPdatabaseNET.UI.PageParts.Connections = {};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ConnectionsMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.prototype.Open_Sub = function (){
    this.jF2(".ActiveItemsDiv").html("");
    this.jF2(".HiddenItemsDiv").html("");
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetList_AjaxReturn").DatabaseConnections__GetList();
    this.jF2(".FrontLevelPage").show();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.prototype.GetList_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var dbConnResponse = ajaxResponse.ReturnObj;
    this.jF2(".Span_ActiveConnections_Count").html("(" + dbConnResponse.ActiveConnections.length + ")");
    this.jF2(".Span_HiddenConnections_Count").html("(" + dbConnResponse.HiddenConnections.length + ")");
    this.jF2(".SectionDiv_NoConnections").show();
    this.jF2(".SectionDiv_Active").hide();
    if (dbConnResponse.ActiveConnections.length > 0){
        var div1 = this.jF2(".ActiveItemsDiv");
        for (var i = 0; i < dbConnResponse.ActiveConnections.length; i++){
            var item = dbConnResponse.ActiveConnections[i];
            var tmpIdClass = "TmpId_" + item.ConnectionId;
            var html = ASPdb.FrameworkUI.JsStr.StrFormat3("\r\n                            <div class=\'ConnectionItem\'>\r\n                                <div class=\'NameLabel\'>{0}</div>\r\n                                <div class=\'BttnsHolder\'>\r\n                                    <a class=\'Bttn_ModifyConnection {1}\' href=\'#00-ConnectionProperties-{2}\'>Edit Connection</a>\r\n                                    <a class=\'Bttn_ManageAssets\' href=\'#00-ManageAssets-{2}\'>Manage Assets</a>\r\n                                </div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>", item.ConnectionName, tmpIdClass, item.ConnectionId);
            div1.append(html);
        }
        this.jF2(".SectionDiv_NoConnections").hide();
        this.jF2(".SectionDiv_Active").show();
    }
    this.jF2(".SectionDiv_Hidden").hide();
    if (dbConnResponse.HiddenConnections.length > 0){
        var div2 = this.jF2(".HiddenItemsDiv");
        for (var i = 0; i < dbConnResponse.HiddenConnections.length; i++){
            var item = dbConnResponse.HiddenConnections[i];
            var tmpIdClass = "TmpId_" + item.ConnectionId;
            var html = ASPdb.FrameworkUI.JsStr.StrFormat3("\r\n                            <div class=\'ConnectionItem\'>\r\n                                <div class=\'NameLabel\'>{0}</div>\r\n                                <div class=\'BttnsHolder\'>\r\n                                    <a class=\'Bttn_ModifyConnection {1}\' href=\'#00-ConnectionProperties-{2}\'>Edit Connection</a>\r\n                                </div>\r\n                                <div class=\'clear\'></div>\r\n                            </div>", item.ConnectionName, tmpIdClass, item.ConnectionId);
            div2.append(html);
        }
        this.jF2(".SectionDiv_NoConnections").hide();
        this.jF2(".SectionDiv_Hidden").show();
    }
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.prototype.BttnAdd_Click = function (){
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.prototype.OnClose_ConnectionPropertiesUI = function (){
    this.Open();
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.GetCssRoot = function (){
    return "\r\n                .ConnectionsMainUI { }\r\n                .ConnectionsMainUI .FrontLevelPage { display:block; }\r\n                .ConnectionsMainUI .Head { position:relative; }\r\n                .ConnectionsMainUI .Head .BttnAdd { position:absolute; display:block; top: 2px; right: 0px; width: auto; font-size: .65em; cursor: pointer;\r\n                                                    background: #14498f; color: #fff; line-height:2.375em; padding: 0px 1.5em; border-radius: 0em; }\r\n                .ConnectionsMainUI .Head .BttnAdd:hover { background: #222; }\r\n\r\n                .ConnectionsMainUI .Main { }\r\n                .ConnectionsMainUI .Main .LicenseInfo { display:block; border: 1px solid #afafaf; background: #e8e8e8; color: #6a6e73; \r\n                                                        padding: .25em 1em .25em 1em; line-height: 1.3em; font-size: .8em; }\r\n                .ConnectionsMainUI .Main .FeedbackInfo { display:block; border: 1px solid #d3d3d3; background: #f9f9f9; color: #6a6e73; \r\n                                                         padding: .25em 1em .25em 1em; line-height: 1.3em; font-size: .8em; \r\n                                                         border-top-width: 0px; }\r\n                .ConnectionsMainUI .Main .LicenseInfo:hover { background: #6a6e73; border-color: #6a6e73; color: #fff; }\r\n                .ConnectionsMainUI .Main .FeedbackInfo:hover { background: #6a6e73; border-color: #6a6e73; color: #fff; }\r\n\r\n                .ConnectionsMainUI .Main .SubHead { background: #5b6776; color: #fff; line-height: 1.75em; padding-left: 1.25em;\r\n                                                    margin: 2.5em 0em 1.25em; }\r\n                .ConnectionsMainUI .Main .SubHead span { }\r\n                .ConnectionsMainUI .Main .ItemsListHolder { margin-left: 3.125em; border-top: 1px solid #d3d3d3; }\r\n\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem { position:relative; line-height: 2.375em; border-bottom: 1px solid #d3d3d3; background: #e8e8e8; }\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem .NameLabel { padding-left: 1.5em; white-space:nowrap; }\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem .BttnsHolder { position:absolute; top: 0px; right: 0px; }\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem .BttnsHolder a { float:right; cursor:pointer; color: #00f; background: #e8e8e8; font-size: .8em; padding: 0em 2em; }\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem .BttnsHolder a:hover { background: #585858; color: #fff; }\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem .BttnsHolder .Bttn_ModifyConnection { }\r\n                .ConnectionsMainUI .Main .ItemsListHolder .ConnectionItem .BttnsHolder .Bttn_ManageAssets { }\r\n\r\n                .ConnectionsMainUI .SectionDiv_Active { display:none; }\r\n                .ConnectionsMainUI .SectionDiv_Hidden { display:none; }\r\n                .ConnectionsMainUI .SectionDiv_NoConnections { display:none; margin: 1.5em 0em 0em 1em; line-height: 1.8125em; }\r\n                .ConnectionsMainUI .SectionDiv_NoConnections span { background: #eee; }\r\n                \r\n            ";
};
ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'FrontLevelPage\'>\r\n                    <div class=\'Head\'>\r\n                        Database Connections\r\n                        <a class=\'BttnAdd\' href=\'#00-ConnectionProperties-New\'>+ Add Connection</a>\r\n                    </div>\r\n                    <div class=\'Main\'>\r\n                        <a href=\'#00-Subscription\' class=\'LicenseInfo\'>\r\n                            Free accounts are allowed 1 connection. Paid accounts can have unlimited connections.<br /> \r\n                            Check your subscription settings (click here).\r\n                        </a>\r\n                        <div class=\'hide\'>\r\n                        <a href=\'#00-SendFeedback\' class=\'FeedbackInfo\'>\r\n                            Supported database connections include: Microsoft SQL Server, SQL Server Azure.<br />\r\n                            Click Here to provide feedback on what other database types you would like to see in future versions.\r\n                        </a>\r\n                        </div>\r\n                        \r\n                        <div class=\'AutoResize\'>\r\n                            <div class=\'SubHead SectionDiv_Active\'>\r\n                                Active Connections\r\n                                <span class=\'Span_ActiveConnections_Count\'>(0)</span>\r\n                            </div>\r\n                            <div class=\'ItemsListHolder ActiveItemsDiv SectionDiv_Active\'>\r\n                            </div>\r\n\r\n                            <div class=\'SubHead SectionDiv_Hidden\'>\r\n                                Hidden Connections\r\n                                <span class=\'Span_HiddenConnections_Count\'>(0)</span>\r\n                            </div>\r\n                            <div class=\'ItemsListHolder HiddenItemsDiv SectionDiv_Hidden\'>\r\n                            </div>\r\n\r\n                            <div class=\'SectionDiv_NoConnections\'>\r\n                                There are currently 0 database connections.<br />\r\n                                Click the <span>[+ Add Connection]</span> button above to create a new database connections.\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Connections.ConnectionsMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI = function (){
    this.ConnectionId = -1;
    this.TablesPanel_Active = null;
    this.TablesPanel_Hidden = null;
    this.SQLViewsPanel_Active = null;
    this.SQLViewsPanel_Hidden = null;
    this.SchemasPanel = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ManageAssetsMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.TablesPanel_Active = new ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel(false);
    this.jF2(".MainBody").append(this.TablesPanel_Active.jRoot);
    this.TablesPanel_Hidden = new ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel(true);
    this.jF2(".MainBody").append(this.TablesPanel_Hidden.jRoot);
    this.SQLViewsPanel_Active = new ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel(false);
    this.jF2(".MainBody").append(this.SQLViewsPanel_Active.jRoot);
    this.SQLViewsPanel_Hidden = new ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel(true);
    this.jF2(".MainBody").append(this.SQLViewsPanel_Hidden.jRoot);
    this.SchemasPanel = new ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel();
    this.jF2(".MainBody").append(this.SchemasPanel.jRoot);
    this.TablesPanel_Active.OnChange.After.AddHandler(this, "Refresh", 0);
    this.TablesPanel_Hidden.OnChange.After.AddHandler(this, "Refresh", 0);
    this.SQLViewsPanel_Active.OnChange.After.AddHandler(this, "Refresh", 0);
    this.SQLViewsPanel_Hidden.OnChange.After.AddHandler(this, "Refresh", 0);
    this.SchemasPanel.OnChange.After.AddHandler(this, "Refresh", 0);
    this.BindUI();
    this.MenuBttnClick_Tables_Active();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.Open_Sub = function (){
    this.jF2(".FrontLevelPage").show();
    this.Populate_ConnectionId();
    this.jF2(".Bttn_ManageConnection").attr("href", "#00-ConnectionProperties-" + this.Get_StringBased_ConnectionId() + "-MA");
    this.TablesPanel_Active.set_ViewModel(this.ConnectionId);
    this.TablesPanel_Hidden.set_ViewModel(this.ConnectionId);
    this.SQLViewsPanel_Active.set_ViewModel(this.ConnectionId);
    this.SQLViewsPanel_Hidden.set_ViewModel(this.ConnectionId);
    this.SchemasPanel.set_ViewModel(this.ConnectionId);
    this.Refresh();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.Populate_ConnectionId = function (){
    var id = -1;
    try{
        var str = ASPdatabaseNET.UI.PagesFramework.PageIdentifier.GetFromUrlHash().PageParam2;
        if (isNaN(str))
            id = -1;
        else if (str != "")
            id = 1 * str;
    }
    catch($$e19){
    }
    this.ConnectionId = id;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.Get_StringBased_ConnectionId = function (){
    if (this.ConnectionId < 0)
        return "Null";
    else
        return (1 * this.ConnectionId);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.Refresh = function (){
    this.jF2(".MA_Main").hide();
    this.jF2(".LoadingLabel").show();
    if (this.ConnectionId < 0){
        this.jF2(".LoadingLabel").html("Invalid ConnectionId");
        return;
    }
    this.jF2(".LoadingLabel").html("Loading ...");
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetAssetsLists_AjaxReturn").ManageAssets__GetAssetsLists(this.ConnectionId);
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.GetAssetsLists_AjaxReturn = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    var response = ajaxResponse.ReturnObj;
    var assetsListsInfo = response.AssetsListsInfo;
    this.jF2(".Menu_TablesActive span").html("(" + assetsListsInfo.Tables_Active.length + ")");
    this.jF2(".Menu_TablesHidden span").html("(" + assetsListsInfo.Tables_Hidden.length + ")");
    this.jF2(".Menu_SQLViewsActive span").html("(" + assetsListsInfo.SqlViews_Active.length + ")");
    this.jF2(".Menu_SQLViewsHidden span").html("(" + assetsListsInfo.SqlViews_Hidden.length + ")");
    this.jF2(".Menu_Schemas span").html("(" + assetsListsInfo.Schemas.length + ")");
    this.jF2(".LoadingLabel").hide();
    this.jF2(".MA_Main").show();
    this.TablesPanel_Active.set_Model(assetsListsInfo.Tables_Active);
    this.TablesPanel_Hidden.set_Model(assetsListsInfo.Tables_Hidden);
    this.SQLViewsPanel_Active.set_Model(assetsListsInfo.SqlViews_Active);
    this.SQLViewsPanel_Hidden.set_Model(assetsListsInfo.SqlViews_Hidden);
    this.SchemasPanel.set_Model(assetsListsInfo.Schemas);
    this.jF2(".Label_ConnectionName").html("[" + assetsListsInfo.ConnectionName + "]");
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.BttnClick_Refresh = function (){
    this.Refresh();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.OnClose_ConnectionPropertiesUI = function (){
    this.jF2(".FrontLevelPage").show();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.CloseAllPanels = function (){
    var objs = new Array(5);
    objs[0] = this.TablesPanel_Active;
    objs[1] = this.TablesPanel_Hidden;
    objs[2] = this.SQLViewsPanel_Active;
    objs[3] = this.SQLViewsPanel_Hidden;
    objs[4] = this.SchemasPanel;
    for (var i = 0; i < 5; i++)
        if (objs[i] != null && objs[i].Get_IsOpen())
            objs[i].Close();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.MenuBttnClick_Tables_Active = function (){
    this.jF2(".LeftMenu .MenuItem").removeClass("Selected");
    this.jF2(".Menu_TablesActive").addClass("Selected");
    this.CloseAllPanels();
    this.TablesPanel_Active.Open();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.MenuBttnClick_Tables_Hidden = function (){
    this.jF2(".LeftMenu .MenuItem").removeClass("Selected");
    this.jF2(".Menu_TablesHidden").addClass("Selected");
    this.CloseAllPanels();
    this.TablesPanel_Hidden.Open();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.MenuBttnClick_SQLViews_Active = function (){
    this.jF2(".LeftMenu .MenuItem").removeClass("Selected");
    this.jF2(".Menu_SQLViewsActive").addClass("Selected");
    this.CloseAllPanels();
    this.SQLViewsPanel_Active.Open();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.MenuBttnClick_SQLViews_Hidden = function (){
    this.jF2(".LeftMenu .MenuItem").removeClass("Selected");
    this.jF2(".Menu_SQLViewsHidden").addClass("Selected");
    this.CloseAllPanels();
    this.SQLViewsPanel_Hidden.Open();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.MenuBttnClick_Schemas = function (){
    this.jF2(".LeftMenu .MenuItem").removeClass("Selected");
    this.jF2(".Menu_Schemas").addClass("Selected");
    this.CloseAllPanels();
    this.SchemasPanel.Open();
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.EditViewSettings.EditViewSettingsMainUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.TablesPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SQLViewsPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.SchemasPanel.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.GetCssRoot = function (){
    return "\r\n                .ManageAssetsMainUI { }\r\n                .ManageAssetsMainUI .FrontLevelPage { display:block; }\r\n                .ManageAssetsMainUI .MA_SubHead { font-size: 1.1em; padding: 10px 0px 32px 0px; }\r\n                .ManageAssetsMainUI .MA_SubHead .Label1 { margin-right: 10px; }\r\n                .ManageAssetsMainUI .MA_SubHead .Bttn { display:inline; font-size: .7em; \r\n                                                        padding: 2px 10px 3px; border: 1px solid #c3c3c3; color: #14498f; cursor: pointer; }\r\n                .ManageAssetsMainUI .MA_SubHead .Bttn:hover { background: #c3c3c3; color: #111; border-color: #aaa; }\r\n                .ManageAssetsMainUI .MA_SubHead .Bttn span { font-size: .7em; color: #aaa; }\r\n\r\n\r\n                .ManageAssetsMainUI .LoadingLabel { display:none; }\r\n\r\n                .ManageAssetsMainUI .MA_Main { display:none; width: 920px; position:relative; }\r\n\r\n                .ManageAssetsMainUI .MA_Main .LeftMenu { position:absolute; top: 0px; left: 0px; z-index: 2;\r\n                                                         width: 211px; background: #e4e4e4; font-size: .8em; }\r\n                .ManageAssetsMainUI .MA_Main .LeftMenu .MenuItem { padding: 6px 7px; cursor:pointer;\r\n                                                                   border-right: 1px solid #585858; }\r\n                .ManageAssetsMainUI .MA_Main .LeftMenu .MenuItem:hover  { background: #b3b3b3; }\r\n                .ManageAssetsMainUI .MA_Main .LeftMenu .Selected { background: #fff;\r\n                                                                   padding: 5px 7px; \r\n                                                                   border-top: 1px solid #585858;\r\n                                                                   border-bottom: 1px solid #585858;\r\n                                                                   border-right: 1px solid #fff; }\r\n\r\n                .ManageAssetsMainUI .MA_Main .MainBody { position: absolute; top: 0px; left: 210px; z-index: 1;\r\n                                                         width: 710px; padding-left: 25px;\r\n                                                         background: #fff; border: 1px solid #585858; border-width: 1px 0px 0px 1px; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'FrontLevelPage\'>\r\n                    <div class=\'Head\'>Manage Assets</div>\r\n                    <div class=\'MA_SubHead\'>\r\n                        <span class=\'Label1\'>Connection: <span class=\'Label_ConnectionName\'>[]</span></span>\r\n                        <a class=\'Bttn\' href=\'#00-Connections\'>Return to All Connections</a>\r\n                        <a class=\'Bttn Bttn_ManageConnection\' href=\'#\'>Manage This Connection</a>\r\n                        <div class=\'Bttn Bttn_Refresh\' On_Click=\'BttnClick_Refresh\'>Refresh</div>\r\n                    </div>\r\n\r\n                    <div class=\'LoadingLabel\'></div>\r\n\r\n                    <div class=\'MA_Main\'>\r\n\r\n                        <div class=\'LeftMenu\'>\r\n                            <div class=\'MenuItem Menu_TablesActive\' On_Click=\'MenuBttnClick_Tables_Active\'>\r\n                                Tables - Active \r\n                                <span>(0)</span>\r\n                            </div>\r\n                            <div class=\'MenuItem Menu_TablesHidden\' On_Click=\'MenuBttnClick_Tables_Hidden\'>\r\n                                Tables - Hidden \r\n                                <span>(0)</span>\r\n                            </div>\r\n                            <div class=\'MenuItem Menu_SQLViewsActive\' On_Click=\'MenuBttnClick_SQLViews_Active\'>\r\n                                SQL Views - Active \r\n                                <span>(0)</span>\r\n                            </div>\r\n                            <div class=\'MenuItem Menu_SQLViewsHidden\' On_Click=\'MenuBttnClick_SQLViews_Hidden\'>\r\n                                SQL Views - Hidden \r\n                                <span>(0)</span>\r\n                            </div>\r\n                            <div class=\'MenuItem Menu_Schemas\' On_Click=\'MenuBttnClick_Schemas\'>\r\n                                Schemas\r\n                                <span>(0)</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\'MainBody\'>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.ManageAssets.ManageAssetsMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'MyAccountMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.Open_Sub = function (){
    this.jF(".D_MainBox").hide();
    this.jF(".D_ResetPasswordBox").hide();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").MyAccount__GetInfo();
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.GetInfo_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    this.BindUI();
    this.jF(".D_ResetPasswordBox").hide();
    this.jF(".D_MainBox").show();
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.Save_Click = function (){
    this.get_Model().FirstName = this.jF(".T_FirstName").val();
    this.get_Model().LastName = this.jF(".T_LastName").val();
    this.get_Model().Email = this.jF(".T_Email").val();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").YesEncryption().MyAccount__Save(this.get_Model());
    this.jF(".D_MainBox").hide();
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.Save_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    alert("Saved");
    this.Open();
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.ResetPassword_Click = function (){
    this.jF(".T_PasswordOld").val("");
    this.jF(".T_Password1").val("");
    this.jF(".T_Password2").val("");
    this.jF(".D_MainBox").hide();
    this.jF(".D_ResetPasswordBox").show();
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.SavePassword_Click = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "Save_Return").YesEncryption().MyAccount__ResetPassword(this.get_Model(), this.jF(".T_PasswordOld").val(), this.jF(".T_Password1").val(), this.jF(".T_Password2").val());
    this.jF(".T_PasswordOld").val("");
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.CancelPassword_Click = function (){
    this.jF(".D_ResetPasswordBox").hide();
    this.jF(".D_MainBox").show();
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.GetCssRoot = function (){
    return "\r\n                .MyAccountMainUI { }\r\n                .MyAccountMainUI .S_Username { color:blue; }\r\n                .MyAccountMainUI .Float1 { float:left; width: 18.75em; }\r\n                .MyAccountMainUI input { width: 16em; border: 1px solid #14498f; }\r\n                .MyAccountMainUI .Bttn1 { float:left; background: #14498f; color: #fff; margin-right: 1em; cursor:pointer; padding: .25em 1.2em; }\r\n                .MyAccountMainUI .Bttn1:hover { background: #333; }\r\n\r\n                .MyAccountMainUI .D_ResetPasswordBox { display:none; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>My Account Settings</div>\r\n                <div class=\'Main\'>\r\n                    <div class=\'D_MainBox\'>\r\n                        <br />\r\n                        Username: <span class=\'S_Username\' ModelKey=\'Username\'></span>\r\n                        <br />\r\n                        <br />\r\n                        <div class=\'Float1\'>\r\n                            First Name <br />\r\n                            <input type=\'text\' class=\'T_FirstName\' ModelKey=\'FirstName\' />\r\n                        </div>\r\n                        <div class=\'Float1\'>\r\n                            Last Name <br />\r\n                            <input type=\'text\' class=\'T_LastName\' ModelKey=\'LastName\' />\r\n                        </div>\r\n                        <div class=\'clear\'></div>\r\n                        <br />\r\n                        Email <br />\r\n                        <input type=\'text\' class=\'T_Email\' ModelKey=\'Email\' />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <div class=\'Bttn1\' On_Click=\'Save_Click\'>Save</div>\r\n                        <div class=\'Bttn1\' On_Click=\'ResetPassword_Click\'>Reset Password</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n\r\n                    <div class=\'D_ResetPasswordBox\'>\r\n                        <br />\r\n                        Username: <span class=\'S_Username\' ModelKey=\'Username\'></span>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        Old Password <br />\r\n                        <input type=\'password\' class=\'T_PasswordOld\' />\r\n                        <br />\r\n                        <br />\r\n                        New Password <br />\r\n                        <input type=\'password\' class=\'T_Password1\' />\r\n                        <br />\r\n                        <br />\r\n                        Repeat New Password <br />\r\n                        <input type=\'password\' class=\'T_Password2\' />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <div class=\'Bttn1\' On_Click=\'SavePassword_Click\'>Save Password</div>\r\n                        <div class=\'Bttn1\' On_Click=\'CancelPassword_Click\'>Cancel</div>\r\n                    </div>\r\n\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.MyAccount.MyAccountMainUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.UI.PageParts.OtherSettings) == "undefined")
    ASPdatabaseNET.UI.PageParts.OtherSettings = {};
ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'OtherSettingsMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI.GetCssRoot = function (){
    return "\r\n                .OtherSettingsMainUI { }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>Other Settings</div>\r\n                <div class=\'Main\'>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.OtherSettings.OtherSettingsMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'RegistrationMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.Open_Sub = function (){
    this.ShowLoading();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").Subscription__GetInfo();
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.GetInfo_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.jF(".D_Loading").hide();
    this.jF(".T_SubscriptionKey").val("");
    this.set_Model(ajaxResponse.ReturnObj);
    if (this.get_Model().SubscriptionKey.length < 1){
        this.jF(".D_SubscriptionEmpty").show();
        this.jF(".T_SubscriptionKey").focus();
    }
    else {
        this.jF(".D_SubscriptionSet").show();
        this.jF(".D_SubscriptionKey").html(this.get_Model().SubscriptionKey);
        if (this.get_Model().SubscriptionCount == 1)
            this.jF(".D_SubscriptionCount").html("1 User");
        else
            this.jF(".D_SubscriptionCount").html(this.get_Model().SubscriptionCount + " Users");
        var lastCheckMsg = "Your subscription was last validated with www.aspdatabase.net ";
        if (this.get_Model().LastCheck_MinutesLapsed == "1")
            lastCheckMsg += "1 minute ago.";
        else
            lastCheckMsg += this.get_Model().LastCheck_MinutesLapsed + " minutes ago.";
        this.jF(".D_LastCheckMsg").html(lastCheckMsg);
    }
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.ShowLoading = function (){
    this.jF(".D_Loading").show();
    this.jF(".D_SubscriptionEmpty").hide();
    this.jF(".D_SubscriptionSet").hide();
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.B_SaveKey_Click = function (){
    var subscriptionKey = this.jF(".T_SubscriptionKey").val();
    if (subscriptionKey.length < 36 || subscriptionKey.length > 200){
        alert("Invalid Subscription Key");
        return;
    }
    this.ShowLoading();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").Subscription__SaveKey(subscriptionKey);
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.Bttn_Remove = function (){
    if (prompt("Are you sure you want to remove your subscription?\n\nIf so, type \'remove\'.") != "remove")
        return;
    this.set_Model(new ASPdatabaseNET.UI.PageParts.Subscription.Objs.SubscriptionInfo());
    this.ShowLoading();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").Subscription__RemoveKey();
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.Bttn_Refresh = function (){
    this.ShowLoading();
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetInfo_Return").Subscription__Refresh();
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.GetCssRoot = function (){
    return "\r\n                .RegistrationMainUI { }\r\n                .RegistrationMainUI .D_Loading { display:none; }\r\n                .RegistrationMainUI .D_SubscriptionEmpty { display:none; }\r\n                .RegistrationMainUI .D_SubscriptionSet { display:none; }\r\n                .RegistrationMainUI a { }\r\n                .RegistrationMainUI a:hover { background: #555; color: #fff; }\r\n\r\n                .RegistrationMainUI .D_SubscriptionEmpty .T_SubscriptionKey { width: 44em; border: 1px solid #444; background: #f3f3f3; padding: .3em; margin-top: .5em; }\r\n                .RegistrationMainUI .D_SubscriptionEmpty .B_SaveKey { float:left; background: #144184; color: #fff; padding: .5em 2em; cursor:pointer; }\r\n                .RegistrationMainUI .D_SubscriptionEmpty .B_SaveKey:hover { background: #444; }\r\n\r\n                .RegistrationMainUI .D_SubscriptionSet .Label1 { width:40em; margin-top: .4em; background: #fcffa9; padding: .3em .8em; }\r\n                .RegistrationMainUI .D_SubscriptionSet .Bttn { font-size: .9em; float:left; color: #fff; background: #144184; margin-right: .8em; cursor:pointer; padding: .2em 1em; }\r\n                .RegistrationMainUI .D_SubscriptionSet .Bttn:hover { background: #444; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>Product Subscription</div>\r\n                <div class=\'Main\'>\r\n                    <div class=\'D_Loading\'>Loading...</div>\r\n                    <div class=\'D_SubscriptionEmpty\'>\r\n                        <br />\r\n                        Enter your Subscription Key here:\r\n                        <br />\r\n                        <input type=\'text\' class=\'T_SubscriptionKey\' />\r\n                        <br />\r\n                        <br />\r\n                        <div class=\'B_SaveKey\' On_Click=\'B_SaveKey_Click\'>Save Key</div>\r\n                        <div class=\'clear\'></div>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        If you don\'t yet have a Subscription Key, please go here to learn more:\r\n                        <br />\r\n                        <br />\r\n                        <a href=\'https://www.aspdatabase.net/Subscribe/\' target=\'_blank\'>https://www.aspdatabase.net/Subscribe/</a>\r\n                    </div>\r\n                    <div class=\'D_SubscriptionSet\'>\r\n                        <br />\r\n                        Your Subscription Key:\r\n                        <br />\r\n                        <div class=\'D_SubscriptionKey Label1\'></div>\r\n                        <br />\r\n                        <br />\r\n                        Your current subscription allows for up to:\r\n                        <br />\r\n                        <div class=\'D_SubscriptionCount Label1\'></div>\r\n                        <br />\r\n                        <br />\r\n                        <div class=\'D_LastCheckMsg hide\'></div>\r\n                        <br />\r\n                        <div class=\'Bttn\' On_Click=\'Bttn_Remove\'>Remove Subscription Key</div>\r\n                        <div class=\'Bttn\' On_Click=\'Bttn_Refresh\'>Refresh Subscription Count from www.aspdatabase.net</div>\r\n                        <div class=\'clear\'></div>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        Learn more about Subscriptions here:\r\n                        <a href=\'https://www.aspdatabase.net/Subscribe/\' target=\'_blank\'>https://www.aspdatabase.net/Subscribe/</a>\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Subscription.SubscriptionMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI = function (){
    this.UserUI = null;
    this.GroupUI = null;
    this.MenuItemUIs_1 = null;
    this.MenuItemUIs_2 = null;
    this.MenuItemUIs_3 = null;
    this.MenuItemUIs_4 = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
    this.set_ViewModel(new ASPdatabaseNET.UI.PageParts.Users.Objs.UsersViewModel());
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'UsersMainUI MainUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    this.UserUI = new ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI();
    this.UserUI.set_ViewModel(this.get_ViewModel());
    this.UserUI.Instantiate();
    this.UserUI.Close();
    this.UserUI.OnChange.After.AddHandler(this, "UserUI_Saved", 0);
    this.jF(".Holder_UserUI").append(this.UserUI.jRoot);
    this.GroupUI = new ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI();
    this.GroupUI.set_ViewModel(this.get_ViewModel());
    this.GroupUI.Instantiate();
    this.GroupUI.Close();
    this.GroupUI.OnChange.After.AddHandler(this, "GroupUI_Saved", 0);
    this.jF(".Holder_GroupUI").append(this.GroupUI.jRoot);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.Open_Sub = function (){
    this.jF(".BttnTd_1 span").html("(0)");
    this.jF(".BttnTd_2 span").html("(0)");
    this.jF(".BttnTd_3 span").html("(0)");
    this.jF(".BttnTd_4 span").html("(0)");
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetMenuInfo_Return").Users__GetMenuInfo();
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.GetMenuInfo_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.set_Model(ajaxResponse.ReturnObj);
    var subscriptionMsg = "";
    switch (this.get_Model().UserSubscriptions_Total){
        case 0:
            subscriptionMsg = "Your subscription allows for 1 limited user.  Click Here to see your subscription settings.";
            break;
        case 1:
            subscriptionMsg = "Your subscription allows for 1 user.  Click Here to see your subscription settings.";
            break;
        default:
            subscriptionMsg = "Your subscription allows for up to " + this.get_Model().UserSubscriptions_Total + " users.  Click Here to see your subscription settings.";
            break;
    }
    this.jF(".LicenseInfo").html(subscriptionMsg);
    var menuHolder_1 = this.jF(".MenuHolder_1").html("<div class=\'MenuHead\'>Users (Active)</div>");
    this.MenuItemUIs_1 = new Array(0);
    if (this.get_Model().Users_Active != null)
        for (var i = 0; i < this.get_Model().Users_Active.length; i++){
            this.MenuItemUIs_1[i] = new ASPdatabaseNET.UI.PageParts.Users.MenuItemUI();
            this.MenuItemUIs_1[i].set_ViewModel(this.get_ViewModel());
            this.MenuItemUIs_1[i].set_Model(this.get_Model().Users_Active[i]);
            this.MenuItemUIs_1[i].Instantiate();
            this.MenuItemUIs_1[i].OnChange.After.AddHandler(this, "MenuItem_Clicked", 1);
            menuHolder_1.append(this.MenuItemUIs_1[i].jRoot);
        }
    var menuHolder_2 = this.jF(".MenuHolder_2").html("<div class=\'MenuHead\'>Users (Inactive)</div>");
    this.MenuItemUIs_2 = new Array(0);
    if (this.get_Model().Users_Inactive != null)
        for (var i = 0; i < this.get_Model().Users_Inactive.length; i++){
            this.MenuItemUIs_2[i] = new ASPdatabaseNET.UI.PageParts.Users.MenuItemUI();
            this.MenuItemUIs_2[i].set_ViewModel(this.get_ViewModel());
            this.MenuItemUIs_2[i].set_Model(this.get_Model().Users_Inactive[i]);
            this.MenuItemUIs_2[i].Instantiate();
            this.MenuItemUIs_2[i].OnChange.After.AddHandler(this, "MenuItem_Clicked", 1);
            menuHolder_2.append(this.MenuItemUIs_2[i].jRoot);
        }
    var menuHolder_3 = this.jF(".MenuHolder_3").html("<div class=\'MenuHead\'>Groups (Active)</div>");
    this.MenuItemUIs_3 = new Array(0);
    if (this.get_Model().Groups_Active != null)
        for (var i = 0; i < this.get_Model().Groups_Active.length; i++){
            this.MenuItemUIs_3[i] = new ASPdatabaseNET.UI.PageParts.Users.MenuItemUI();
            this.MenuItemUIs_3[i].set_ViewModel(this.get_ViewModel());
            this.MenuItemUIs_3[i].set_Model(this.get_Model().Groups_Active[i]);
            this.MenuItemUIs_3[i].Instantiate();
            this.MenuItemUIs_3[i].OnChange.After.AddHandler(this, "MenuItem_Clicked", 1);
            menuHolder_3.append(this.MenuItemUIs_3[i].jRoot);
        }
    var menuHolder_4 = this.jF(".MenuHolder_4").html("<div class=\'MenuHead\'>Groups (Inactive)</div>");
    this.MenuItemUIs_4 = new Array(0);
    if (this.get_Model().Groups_Inactive != null)
        for (var i = 0; i < this.get_Model().Groups_Inactive.length; i++){
            this.MenuItemUIs_4[i] = new ASPdatabaseNET.UI.PageParts.Users.MenuItemUI();
            this.MenuItemUIs_4[i].set_ViewModel(this.get_ViewModel());
            this.MenuItemUIs_4[i].set_Model(this.get_Model().Groups_Inactive[i]);
            this.MenuItemUIs_4[i].Instantiate();
            this.MenuItemUIs_4[i].OnChange.After.AddHandler(this, "MenuItem_Clicked", 1);
            menuHolder_4.append(this.MenuItemUIs_4[i].jRoot);
        }
    var count1 = 0,count2 = 0,count3 = 0,count4 = 0;
    if (this.get_Model().Users_Active != null)
        count1 = this.get_Model().Users_Active.length;
    if (this.get_Model().Users_Inactive != null)
        count2 = this.get_Model().Users_Inactive.length;
    if (this.get_Model().Groups_Active != null)
        count3 = this.get_Model().Groups_Active.length;
    if (this.get_Model().Groups_Inactive != null)
        count4 = this.get_Model().Groups_Inactive.length;
    this.jF(".BttnTd_1 span").html("(" + count1 + ")");
    this.jF(".BttnTd_2 span").html("(" + count2 + ")");
    this.jF(".BttnTd_3 span").html("(" + count3 + ")");
    this.jF(".BttnTd_4 span").html("(" + count4 + ")");
    if (this.get_ViewModel().SaveJustHappened){
        if (this.get_ViewModel().LastMenuItem == null && this.get_ViewModel().CurrentId > -1){
            for (var i = 0; i < this.MenuItemUIs_1.length; i++)
                if (this.MenuItemUIs_1[i].get_Model().Id == this.get_ViewModel().CurrentId)
                    this.get_ViewModel().LastMenuItem = this.MenuItemUIs_1[i];
            for (var i = 0; i < this.MenuItemUIs_2.length; i++)
                if (this.MenuItemUIs_2[i].get_Model().Id == this.get_ViewModel().CurrentId)
                    this.get_ViewModel().LastMenuItem = this.MenuItemUIs_2[i];
            for (var i = 0; i < this.MenuItemUIs_3.length; i++)
                if (this.MenuItemUIs_3[i].get_Model().Id == this.get_ViewModel().CurrentId)
                    this.get_ViewModel().LastMenuItem = this.MenuItemUIs_3[i];
            for (var i = 0; i < this.MenuItemUIs_4.length; i++)
                if (this.MenuItemUIs_4[i].get_Model().Id == this.get_ViewModel().CurrentId)
                    this.get_ViewModel().LastMenuItem = this.MenuItemUIs_4[i];
        }
        if (this.get_ViewModel().LastMenuItem != null)
            this.MenuItem_Clicked(this.get_ViewModel().LastMenuItem);
        this.get_ViewModel().SaveJustHappened = false;
    }
    else
        this.TabClick_1();
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.NewUser_Click = function (){
    this.TabClick(-1);
    this.get_ViewModel().CurrentId = -1;
    this.UserUI.Open();
    this.jF(".MenuHolder_NewUser").show();
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.NewGroup_Click = function (){
    this.TabClick(-1);
    this.get_ViewModel().CurrentId = -1;
    this.GroupUI.Open();
    this.jF(".MenuHolder_NewGroup").show();
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.TabClick_1 = function (){
    this.TabClick(1);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.TabClick_2 = function (){
    this.TabClick(2);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.TabClick_3 = function (){
    this.TabClick(3);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.TabClick_4 = function (){
    this.TabClick(4);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.TabClick = function (tabId){
    this.get_ViewModel().CurrentTabId = tabId;
    this.jF(".BttnTd").removeClass("On");
    this.jF(".MenuHolder").hide();
    if (tabId > 0){
        this.jF(".BttnTd_" + tabId).addClass("On");
        this.jF(".MenuHolder_" + tabId).show();
    }
    if (this.UserUI.IsOpen)
        this.UserUI.Close();
    if (this.GroupUI.IsOpen)
        this.GroupUI.Close();
    this.TurnOff_AllMenuItems();
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.TurnOff_AllMenuItems = function (){
    if (this.MenuItemUIs_1 != null)
        for (var i = 0; i < this.MenuItemUIs_1.length; i++)
            if (this.MenuItemUIs_1[i].IsOn)
                this.MenuItemUIs_1[i].TurnOff();
    if (this.MenuItemUIs_2 != null)
        for (var i = 0; i < this.MenuItemUIs_2.length; i++)
            if (this.MenuItemUIs_2[i].IsOn)
                this.MenuItemUIs_2[i].TurnOff();
    if (this.MenuItemUIs_3 != null)
        for (var i = 0; i < this.MenuItemUIs_3.length; i++)
            if (this.MenuItemUIs_3[i].IsOn)
                this.MenuItemUIs_3[i].TurnOff();
    if (this.MenuItemUIs_4 != null)
        for (var i = 0; i < this.MenuItemUIs_4.length; i++)
            if (this.MenuItemUIs_4[i].IsOn)
                this.MenuItemUIs_4[i].TurnOff();
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.MenuItem_Clicked = function (menuItemUI){
    this.get_ViewModel().LastMenuItem = menuItemUI;
    if (this.UserUI.IsOpen)
        this.UserUI.Close();
    if (this.GroupUI.IsOpen)
        this.GroupUI.Close();
    this.get_ViewModel().CurrentId = menuItemUI.get_Model().Id;
    if (menuItemUI.get_Model().MenuType == 1)
        this.UserUI.Open();
    else if (menuItemUI.get_Model().MenuType == 2)
        this.GroupUI.Open();
    this.TurnOff_AllMenuItems();
    if (this.get_ViewModel().CurrentTabId == 1){
        if (this.MenuItemUIs_1 != null)
            for (var i = 0; i < this.MenuItemUIs_1.length; i++)
                if (this.MenuItemUIs_1[i].get_Model().Id == menuItemUI.get_Model().Id)
                    this.MenuItemUIs_1[i].TurnOn();
    }
    else if (this.get_ViewModel().CurrentTabId == 2){
        if (this.MenuItemUIs_2 != null)
            for (var i = 0; i < this.MenuItemUIs_2.length; i++)
                if (this.MenuItemUIs_2[i].get_Model().Id == menuItemUI.get_Model().Id)
                    this.MenuItemUIs_2[i].TurnOn();
    }
    else if (this.get_ViewModel().CurrentTabId == 3){
        if (this.MenuItemUIs_3 != null)
            for (var i = 0; i < this.MenuItemUIs_3.length; i++)
                if (this.MenuItemUIs_3[i].get_Model().Id == menuItemUI.get_Model().Id)
                    this.MenuItemUIs_3[i].TurnOn();
    }
    else if (this.get_ViewModel().CurrentTabId == 4){
        if (this.MenuItemUIs_4 != null)
            for (var i = 0; i < this.MenuItemUIs_4.length; i++)
                if (this.MenuItemUIs_4[i].get_Model().Id == menuItemUI.get_Model().Id)
                    this.MenuItemUIs_4[i].TurnOn();
    }
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.UserUI_Saved = function (){
    this.get_ViewModel().SaveJustHappened = true;
    var tmpTabId = this.get_ViewModel().CurrentTabId;
    if (this.UserUI.get_Model().UserId < 0)
        this.get_ViewModel().LastMenuItem = null;
    if (tmpTabId < 0 && this.UserUI.get_Model().Active)
        tmpTabId = 1;
    else if (tmpTabId < 0 && !this.UserUI.get_Model().Active)
        tmpTabId = 2;
    else if (tmpTabId == 1 && !this.UserUI.get_Model().Active)
        tmpTabId = 2;
    else if (tmpTabId == 2 && this.UserUI.get_Model().Active)
        tmpTabId = 1;
    this.Open();
    this.TabClick(tmpTabId);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.GroupUI_Saved = function (){
    this.get_ViewModel().SaveJustHappened = true;
    var tmpTabId = this.get_ViewModel().CurrentTabId;
    if (this.GroupUI.get_Model().GroupId < 0)
        this.get_ViewModel().LastMenuItem = null;
    if (tmpTabId < 0 && this.GroupUI.get_Model().Active)
        tmpTabId = 3;
    else if (tmpTabId < 0 && !this.GroupUI.get_Model().Active)
        tmpTabId = 4;
    else if (tmpTabId == 3 && this.GroupUI.get_Model().Active == false)
        tmpTabId = 4;
    else if (tmpTabId == 4 && this.GroupUI.get_Model().Active == true)
        tmpTabId = 3;
    this.Open();
    this.TabClick(tmpTabId);
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.GetCssTree = function (){
    var rtn = ASPdatabaseNET.UI.PageParts.Users.MenuItemUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Users.Panel_UserUI.GetCssTree() + ASPdatabaseNET.UI.PageParts.Users.Panel_GroupUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.GetCssRoot = function (){
    return "\r\n                .UsersMainUI { }\r\n                .UsersMainUI .Main { position:relative; }\r\n\r\n                .UsersMainUI .Main .NewBttns { position:absolute; top: -2em; width: 47.5em; }\r\n                .UsersMainUI .Main .NewBttns .Bttn1 { float:right; background: #3d7bcc; color: #fff; padding: .4em 1em; margin-left: 1px; cursor:pointer; }\r\n                .UsersMainUI .Main .NewBttns .Bttn1:hover { background: #0a346b; }\r\n\r\n                .UsersMainUI .Main .LicenseInfo { display:block; border: 1px solid #e3e3e3; background: #e8e8e8; color: #6a6e73; \r\n                                                  padding-left: 1.171875em; line-height: 2em; font-size: .8em; margin-bottom: 1em; }\r\n                .UsersMainUI .Main .LicenseInfo:hover { background: #6a6e73; border-color: #6a6e73; color: #fff; }\r\n\r\n                .UsersMainUI .Main .BttnsTbl { margin-bottom: 1em; width: 100%; }\r\n                .UsersMainUI .Main .BttnsTbl td { background: #a1a1a1; width: 25%; padding: .4em .75em; border-left: 1px solid #fff; cursor:pointer; font-size: .85em; text-align:center; color: #444; }\r\n                .UsersMainUI .Main .BttnsTbl FirstTd { border-width: 0px; }\r\n                .UsersMainUI .Main .BttnsTbl td:hover { background: #6a6e73; color: #fff; }\r\n                .UsersMainUI .Main .BttnsTbl .On { background: #222; color: #fff; }\r\n\r\n                .UsersMainUI .Main .MainTable001 { width: 47.5em; }\r\n                .UsersMainUI .Main .MainTable001 tr { }\r\n                .UsersMainUI .Main .MainTable001 tr td { }\r\n                .UsersMainUI .Main .MainTable001 tr .Td001 { width: 11.875em; background: #eee; }\r\n                .UsersMainUI .Main .MainTable001 tr .Td002 {  }\r\n                .UsersMainUI .Main .MainTable001 tr .Td001 .MenuHolder { display:none; }\r\n                .UsersMainUI .Main .MainTable001 tr .Td001 .MenuHolder .MenuHead { text-align:center; border-bottom: 1px solid #f9f9f9; color: #999; padding: .5em 0em; }\r\n                .UsersMainUI .Main .MainTable001 tr .Td001 .MenuHolder_New { font-size: 1.4em; text-align:center; padding-top: 1.55em; color: #888; }\r\n            ";
};
ASPdatabaseNET.UI.PageParts.Users.UsersMainUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Head\'>Users & Permissions</div>\r\n                <div class=\'Main\'>\r\n                    <div class=\'NewBttns\'>\r\n                        <div class=\'Bttn1\' On_Click=\'NewGroup_Click\'>+ New Group</div>\r\n                        <div class=\'Bttn1\' On_Click=\'NewUser_Click\'>+ New User</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <a href=\'#00-Subscription\' class=\'LicenseInfo\'></a>\r\n                    \r\n                    <table class=\'BttnsTbl\'>\r\n                        <tr>\r\n                            <td On_Click=\'TabClick_1\' class=\'BttnTd BttnTd_1 FirstTd\'>Users (Active)    <span>(0)</span></td>\r\n                            <td On_Click=\'TabClick_2\' class=\'BttnTd BttnTd_2\'        >Users (Inactive)  <span>(0)</span></td>\r\n                            <td On_Click=\'TabClick_3\' class=\'BttnTd BttnTd_3\'        >Groups (Active)   <span>(0)</span></td>\r\n                            <td On_Click=\'TabClick_4\' class=\'BttnTd BttnTd_4\'        >Groups (Inactive) <span>(0)</span></td>\r\n                        </td>\r\n                    </table>\r\n\r\n                    <table class=\'MainTable001\'>\r\n                        <tr>\r\n                            <td class=\'Td001\'>\r\n                                <div class=\'AutoResize\'>\r\n                                    <div class=\'MenuHolder MenuHolder_1\'>  </div>\r\n                                    <div class=\'MenuHolder MenuHolder_2\'>  </div>\r\n                                    <div class=\'MenuHolder MenuHolder_3\'>  </div>\r\n                                    <div class=\'MenuHolder MenuHolder_4\'>  </div>\r\n                                    <div class=\'MenuHolder MenuHolder_New MenuHolder_NewUser\'>Add<br />New User</div>\r\n                                    <div class=\'MenuHolder MenuHolder_New MenuHolder_NewGroup\'>Add<br />New Group</div>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\'Td002\'>\r\n                                <div class=\'Holder_UserUI\'></div>\r\n                                <div class=\'Holder_GroupUI\'></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.PageParts.Users.UsersMainUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.GridToolBar = function (){
    this.OnRefresh = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnImportExportClick = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnViewOptionsClick = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnRequestToDeleteSelection = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'GridToolBar jRoot NoSelect\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.Open_Sub = function (){
    if (this.get_Model() == null)
        return;
    this.jF(".TitleLabel").html(this.get_Model().TableName_FullNameLabel);
    this.jF(".Bttn_RecordCount").html("(" + this.get_Model().Count_DisplayItems + " of " + this.get_Model().Count_TotalItems + ")");
    this.SelectionCountChanged();
    if (this.get_Model().TableType == 1)
        this.jF(".Bttn_DesignTable").show().attr("href", "#00-TableDesign-" + this.get_Model().Id);
    else
        this.jF(".Bttn_DesignTable").hide();
    this.jF(".Bttn_Insert").hide();
    this.jF(".Bttn_Download").hide();
    this.jF(".Bttn_DesignTable").hide();
    if (this.get_Model().TableType == 1){
        if (this.get_Model().IsAdmin)
            this.jF(".Bttn_DesignTable").show();
        if (this.get_Model().PermissionValues.Insert)
            this.jF(".Bttn_Insert").show();
    }
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.SelectionCountChanged = function (){
    if (this.get_Model().PermissionValues.Delete && this.get_Model().TableType == 1)if (this.get_ViewModel().SelectionCount < 1){
        this.jF(".Bttn_Delete").hide();
        this.jF(".Bttn_RecordCount").show();
    }
    else {
        this.jF(".Bttn_RecordCount").hide();
        this.jF(".Bttn_Delete").show().html("Delete Selected (" + this.get_ViewModel().SelectionCount + ")");
    }
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.SetFilterCount = function (count){
    if (count < 0)
        this.jF(".Bttn_ViewOptions").html("View Options");
    else
        this.jF(".Bttn_ViewOptions").html("View Options (" + count + ")");
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_RecordCount = function (){
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_DeleteSelected = function (){
    var n = this.get_ViewModel().SelectionCount;
    var msg = "Are you sure you want to permanently delete this record?";
    if (n > 1)
        msg = "Are you certain you want to permanently delete these " + n + " records?";
    msg += "\n\nIf so, please type \"delete\" to confirm.";
    var promptResponse = prompt(msg);
    if (promptResponse != null && promptResponse.toLowerCase() == "delete")
        this.OnRequestToDeleteSelection.After.Fire();
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_Refresh = function (){
    this.OnRefresh.After.Fire();
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_Insert = function (){
    window.location = ("#00-Record-" + this.get_Model().UniqueKey_ForNewRecord);
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_Download = function (){
    alert("BttnClick_Download");
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_ImportExport = function (){
    this.OnImportExportClick.After.Fire();
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.BttnClick_ViewOptions = function (){
    this.OnViewOptionsClick.After.Fire();
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.GetCssTree = function (){
    var rtn = "" + ASPdatabaseNET.UI.TableGrid.ViewOptions.GetCssTree() + ASPdatabaseNET.UI.TableGrid.GridToolBar.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.GetCssRoot = function (){
    return "\r\n                .GridToolBar { position:relative; background: #093a79; color: #fff; line-height: 2.1875em; margin-bottom: 5px;\r\n                               white-space:nowrap; overflow:hidden; }\r\n                .GridToolBar .TitleLabel { font-size: 1em; padding-left: 20px;\r\n                                           white-space:nowrap; overflow:hidden; }\r\n                .GridToolBar .RightSide { position:absolute; top: 0px; right: 0px; line-height: 2.1875em; background: #093a79; }\r\n\r\n\r\n                .GridToolBar .RightSide .Bttn { font-size: .75em; display:block; float:right; color:#fff; padding: 0em .6em; widthz: 2.5em; text-align: center; cursor:pointer; }\r\n                .GridToolBar .RightSide .Bttn:hover { background: #001d44; }\r\n                .GridToolBar .RightSide .Bttn_ViewOptions { width:auto; background: #eb640a; padding: 0em 1.4em; margin-left: .4em; }\r\n                .GridToolBar .RightSide .Bttn_ViewOptions:hover { background: #f4f4f4; color: #eb640a; }\r\n                .GridToolBar .RightSide .Bttn_ImportExport_ { line-height: 1.2625em; padding: .3em .64em; font-size: .7em; }\r\n                .GridToolBar .RightSide .Bttn_DesignTable { }\r\n                .GridToolBar .RightSide .Bttn_Download { }\r\n                .GridToolBar .RightSide .Bttn_Insert { }\r\n                .GridToolBar .RightSide .Bttn_Refresh { }\r\n                .GridToolBar .RightSide .Bttn_Delete { display:none; font-size: .6em; width: auto; padding: 0em 1.4em;\r\n                                                       line-height: 2.2em; background: #ffffb1; color: #093a79; margin: .75em 1em 0em; border-radius: .9em; }\r\n                .GridToolBar .RightSide .Bttn_Delete:hover { background: #ffff00; color: #000; }\r\n                .GridToolBar .RightSide .Bttn_RecordCount { font-size: .6em; width: auto; padding: 0em 1.4em; cursor:default; }\r\n                .GridToolBar .RightSide .Bttn_RecordCount:hover { background: #093a79; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.GridToolBar.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'TitleLabel YesSelect\'></div>\r\n                <div class=\'RightSide\'>\r\n                    <div class=\'Bttn Bttn_ViewOptions\'  On_Click=\'BttnClick_ViewOptions\'    title=\'View Options\'    >View Options</div>\r\n                    <div class=\'Bttn Bttn_ImportExport\' On_Click=\'BttnClick_ImportExport\'   title=\'Export\' >Export</div>\r\n                    <a   class=\'Bttn Bttn_DesignTable\'  href=\'#\'                            title=\'Design Table\'    >Design</a>\r\n                    <div class=\'Bttn Bttn_Download\'     On_Click=\'BttnClick_Download\'       title=\'Download\'        >(D)</div>\r\n                    <div class=\'Bttn Bttn_Insert\'       On_Click=\'BttnClick_Insert\'         title=\'Insert\'          >+ New</div>\r\n                    <div class=\'Bttn Bttn_Refresh\'      On_Click=\'BttnClick_Refresh\'        title=\'Refresh\'         >Refresh</div>\r\n                    <div class=\'Bttn Bttn_Delete\'       On_Click=\'BttnClick_DeleteSelected\' title=\'Delete Selected\' >Delete Selected (0)</div>\r\n                    <div class=\'Bttn Bttn_RecordCount\'  On_Click=\'BttnClick_RecordCount\'    title=\'\'                >(0 of 0)</div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.GridToolBar, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.Objs.ImportExcelInfo = function (){
    this.GuidKey = null;
    this.TableId = 0;
    this.UploadTime = System.DateTime.MinValue;
    this.FileName = null;
    this.ContentType = null;
    this.ContentLength = 0;
    this.ExcelPackage = null;
    this.ExceptionMessage = null;
    this.ExceptionStacktrace = null;
    this.TableColumns = null;
    this.Worksheets = null;
};
ASPdatabaseNET.UI.TableGrid.Objs.ImportExcelInfo_Worksheet = function (){
    this.WorksheetName = null;
    this.Columns = null;
    this.CustomMapText = null;
};
ASPdatabaseNET.UI.TableGrid.Objs.ImportExportViewModel = function (){
    this.GuidKey = "";
    this.GridRequest = null;
    this.SelectedWorksheet = null;
    this.IsInDemoMode = false;
};
ASPdatabaseNET.UI.TableGrid.Objs.ViewOptions_FilterField = function (){
    this.FieldName = null;
    this.FilterType = 0;
    this.Value = null;
};
ASPdatabaseNET.UI.TableGrid.Objs.ViewOptions_SortField = function (){
    this.FieldName = null;
    this.Descending = false;
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI = function (){
    this.GridResponse = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'RecordViewerUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.prototype.Open_Sub = function (){
    this.jF(".Txt_TableName").html(this.GridResponse.Schema + "." + this.GridResponse.TableName);
    this.jF(".NavigatorText").html((this.get_Model().DisplayIndex + 1));
    if (this.get_Model().DisplayIndex > 0){
        this.jF(".Arrow_Left_Off").hide();
        this.jF(".Arrow_Left").show();
    }
    else {
        this.jF(".Arrow_Left").hide();
        this.jF(".Arrow_Left_Off").show();
    }
    if (this.get_Model().DisplayIndex < this.GridResponse.Rows.length - 1){
        this.jF(".Arrow_Right_Off").hide();
        this.jF(".Arrow_Right").show();
    }
    else {
        this.jF(".Arrow_Right").hide();
        this.jF(".Arrow_Right_Off").show();
    }
    var holder_FieldUIs = this.jF(".Holder_FieldUIs").html("");
    for (var i = 0; i < this.get_Model().Values.length; i++){
        var fieldName = this.GridResponse.HeaderItems[i].FieldName;
        var value = this.get_Model().Values[i];
        holder_FieldUIs.append(ASPdb.FrameworkUI.st.New("\r\n                <tr>\r\n                    <td class=\'NameTd\'><div class=\'NameDiv\'>{0}</div></td>\r\n                    <td class=\'ValueTd\'>\r\n                        <div class=\'ValueDiv\'>{1}</div>\r\n                    </td>\r\n                </tr>\r\n                ").Format2(fieldName, value).TheString);
    }
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.prototype.RecordsList_Click = function (){
    this.Close();
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.prototype.Left_Click = function (){
    this.set_Model(this.GridResponse.Rows[this.get_Model().DisplayIndex - 1]);
    this.Open();
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.prototype.Right_Click = function (){
    this.set_Model(this.GridResponse.Rows[this.get_Model().DisplayIndex + 1]);
    this.Open();
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.RecordViewerUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.GetCssRoot = function (){
    return "\r\n                .RecordViewerUI { paddingz: 0.75em 0em 0em 0.75em; width: 55em; max-width: 55em; }\r\n                .RecordViewerUI .Txt_TableName { font-size: 1.2em; padding-bottom: 0.625em; color: #eb640a; }\r\n                .RecordViewerUI .BttnBar { background: #093a79; color: #fff; line-height: 2.1875em; border-bottom: 0.375em solid #fff; }\r\n                .RecordViewerUI .BttnBar .Box1 { float:left; width: 15em; }\r\n                .RecordViewerUI .BttnBar .Box2 { float:left; width: 13em; }\r\n                .RecordViewerUI .BttnBar .Box3 { float:right; width: 25em; }\r\n                .RecordViewerUI .BttnBar .Bttn { float:right; cursor:pointer; background: #093a79; color: #fff; padding: 0em .75em; }\r\n                .RecordViewerUI .BttnBar .Bttn:hover { background: #001d44; }\r\n                .RecordViewerUI .BttnBar .Bttn_RecordsList { float:left; }\r\n                .RecordViewerUI .BttnBar .Bttn_Off { float:right; background: #093a79; color: #fff; padding: 0em .75em; }\r\n\r\n                .RecordViewerUI .BttnBar .Navigator { }\r\n                .RecordViewerUI .BttnBar .Navigator .Arrow_Off { float:left; text-align:center; width: 2.1875em; background: #7490b4; }\r\n                .RecordViewerUI .BttnBar .Navigator .Arrow { display:none; float:left; text-align:center; width: 2.1875em; background: #7490b4; color: #ececec; cursor:pointer; }\r\n                .RecordViewerUI .BttnBar .Navigator .Arrow:hover { background: #3f679b; }\r\n                .RecordViewerUI .BttnBar .Navigator .NavigatorText { float:left; text-align:center; background: #ececec; color: #093a79; font-size: 1.25em; padding: 0em 1em; width: 1em; }\r\n\r\n                .RecordViewerUI .BttnBar .Box3_StandardBttns { }\r\n                .RecordViewerUI .BttnBar .Box3_SaveBttns { display:none; }\r\n\r\n                .RecordViewerUI .Holder_FieldUIs { width: 100%; }\r\n                .RecordViewerUI .Holder_FieldUIs tr { line-height: 1.875em; border-bottom: 0.125em solid #fff; background: #f4f4f4; }\r\n                .RecordViewerUI .Holder_FieldUIs tr .NameTd { background: #eee; font-size: .8em; line-height: 2.34375em; width: 18em; max-width: 18em; min-width: 18em; overflow:hidden; }\r\n                .RecordViewerUI .Holder_FieldUIs tr .ValueTd { font-size: .8em; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.RecordViewerUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Txt_TableName\'></div>\r\n                <div class=\'BttnBar\'>\r\n                    <div class=\'Box1\'>\r\n                        <div class=\'Bttn Bttn_RecordsList\' On_Click=\'RecordsList_Click\'>&lt;&lt; Records List</div>\r\n                    </div>\r\n                    <div class=\'Box2 HideIfNoPK\'>\r\n                        <div class=\'Navigator NoSelect\'>\r\n                            <div class=\'Arrow Arrow_Left\' On_Click=\'Left_Click\'>&lt;</div>\r\n                            <div class=\'Arrow_Off Arrow_Left_Off\'>&nbsp;</div>\r\n                            <div class=\'NavigatorText\'>&nbsp;</div>\r\n                            <div class=\'Arrow Arrow_Right\' On_Click=\'Right_Click\'>&gt;</div>\r\n                            <div class=\'Arrow_Off Arrow_Right_Off\' title=\'End of current set\'>?</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\'Box3 Box3_StandardBttns HideIfNoPK\'>\r\n                        <div class=\'Bttn_Off\'>(Read-Only View)</div>\r\n                        <div class=\'clear\'></div>\r\n                    </div>\r\n                    <div class=\'clear\'></div>\r\n                </div>\r\n\r\n                <div class=\'AutoResize\'>\r\n                    <table class=\'Holder_FieldUIs\'>\r\n                    </table>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.RecordViewerUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.RowUI = function (){
    this.IsOdd = false;
    this.IsSelected = false;
    this.OnSelection = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.OnOpenViewer = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.RowUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<tr class=\'RowUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    if (this.IsOdd)
        this.jRoot.addClass("RowUI_Alt");
    for (var i = 0; i < this.get_Model().Values.length; i++){
        var value = this.get_Model().Values[i];
        if (this.get_ViewModel().TableType == 2)if (value.length > 100)
            value = ASPdb.FrameworkUI.st.New(value).TruncateRight(value.length - 99).TheString + "...";
        this.jRoot.append(ASPdb.FrameworkUI.JsStr.StrFormat1("<td>{0}</td>", value));
    }
    if (this.get_ViewModel().TableType == 1)
        this.jF(".Bttn_Open").attr("href", "#00-Record-" + this.get_Model().UniqueKey);
    else {
        this.jF(".Bttn_Open").hide();
        this.jF(".Bttn_Open2").show();
    }
    var thisObj = this;
    var jRootObj = this.jRoot;
    eval("\r\n                jRootObj.find(\'td\').click(function() { thisObj.Td_Clicked(this); });\r\n                jRootObj.find(\'td\').dblclick(function() { thisObj.Td_DoubleClicked(this); });\r\n            ");
};
ASPdatabaseNET.UI.TableGrid.RowUI.prototype.Td_Clicked = function (obj){
    if (!$(obj).hasClass("Td_Open")){
        this.SetSelection(!this.IsSelected);
        this.OnSelection.After.Fire();
    }
};
ASPdatabaseNET.UI.TableGrid.RowUI.prototype.SetSelection = function (isSelected){
    this.IsSelected = isSelected;
    if (this.IsSelected){
        this.jRoot.addClass("RowUI_Selected");
        this.jF(".Checkbox_Select").attr("checked", true);
    }
    else {
        this.jRoot.removeClass("RowUI_Selected");
        this.jF(".Checkbox_Select").removeAttr("checked");
    }
};
ASPdatabaseNET.UI.TableGrid.RowUI.prototype.Td_DoubleClicked = function (obj){
    switch (this.get_ViewModel().TableType){
        case 1:
            window.location = ("#00-Record-" + this.get_Model().UniqueKey);
            break;
        case 2:
            this.Bttn_Open2_Click();
            break;
    }
};
ASPdatabaseNET.UI.TableGrid.RowUI.prototype.Bttn_Open2_Click = function (){
    this.OnOpenViewer.After.Fire1(this.get_Model());
};
ASPdatabaseNET.UI.TableGrid.RowUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.RowUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.RowUI.GetCssRoot = function (){
    return "\r\n                .RowUI { }\r\n                .RowUI { }\r\n                .RowUI td { background: #ededed; margin: 0px 1px 1px 0px; white-space:nowrap;\r\n                            border: 1px solid #fff; border-width: 1px 1px 1px 0px; padding: 0.125em 0.375em; }\r\n                .RowUI_Alt td { background: #cfd4da; }\r\n\r\n                .RowUI .Td_CheckboxSelect { padding-top: .25em; padding-bottom: 0em; }\r\n                .RowUI .Td_CheckboxSelect:hover { background: #093a79; }\r\n                .RowUI .Td_CheckboxSelect .Checkbox_Select { }\r\n\r\n                .RowUI .Td_Open { padding: 0em; }\r\n                .RowUI .Td_Open .Bttn_Open { display:block; text-decoration:none; color: blue; padding: 0.125em 0.375em; }\r\n                .RowUI .Td_Open .Bttn_Open:hover { background: #093a79; color: #fff; }\r\n                .RowUI .Td_Open .Bttn_Open span { font-size: .9em; }\r\n\r\n                .RowUI .Td_Open .Bttn_Open2 { display:none; text-decoration:none; color: blue; padding: 0.125em 0.375em; cursor:pointer; }\r\n                .RowUI .Td_Open .Bttn_Open2:hover { background: #093a79; color: #fff; }\r\n                .RowUI .Td_Open .Bttn_Open2 span { font-size: .9em; }\r\n\r\n\r\n                .RowUI:hover td { background: #42a4ed; color: #fff; }\r\n                .RowUI:hover .Bttn_Open { color: #fff; }\r\n                .RowUI:hover .Bttn_Open2 { color: #fff; }\r\n\r\n                .RowUI_Selected td { background: #2c6fc5; color: #fff; }\r\n                .RowUI_Selected .Td_Open .Bttn_Open { color: #fff; }\r\n                .RowUI_Selected .Td_Open .Bttn_Open2 { color: #fff; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.RowUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <td class=\'Td_CheckboxSelect\'><input type=\'checkbox\' class=\'Checkbox_Select\' /></td>\r\n                <td class=\'Td_Open\'>\r\n                    <a class=\'Bttn_Open\' href=\'#\'><span>Open</span></a>\r\n                    <div class=\'Bttn_Open2\' On_Click=\'Bttn_Open2_Click\'><span>Open</span></div>\r\n                </td>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.RowUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.TableGridMain = function (){
    this.GridToolBar = null;
    this.ImportExportUI = null;
    this.ViewOptions = null;
    this.RowUIs = null;
    this.RecordViewerUI = null;
    this.LastAttemptWas_InvalidFilterField = false;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'TableGridMain jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
    try{
        var json = localStorage.getItem(this.get_ViewModel().get_LocalStorage_Key_ViewOptions());
        if (json != null && json.length > 0){
            var gridRequest_Local = (new ASPdb.Ajax.AjaxHelper()).FromJson(json);
            this.get_ViewModel().DisplayTopNRows = gridRequest_Local.DisplayTopNRows;
            this.get_ViewModel().FilterAndSort.FilterFields = gridRequest_Local.FilterFields;
            this.get_ViewModel().FilterAndSort.SortFields = gridRequest_Local.SortFields;
        }
    }
    catch($$e20){
    }
    this.GridToolBar = new ASPdatabaseNET.UI.TableGrid.GridToolBar();
    this.GridToolBar.set_ViewModel(this.get_ViewModel());
    this.GridToolBar.Instantiate();
    this.GridToolBar.OnRefresh.After.AddHandler(this, "GridToolBar_OnRefresh", 0);
    this.GridToolBar.OnImportExportClick.After.AddHandler(this, "GridToolBar_OnImportExportClick", 0);
    this.GridToolBar.OnViewOptionsClick.After.AddHandler(this, "GridToolBar_OnViewOptionsClick", 0);
    this.GridToolBar.OnRequestToDeleteSelection.After.AddHandler(this, "GridToolBar_OnRequestToDeleteSelection", 0);
    this.jF(".Holder_GridToolBar").append(this.GridToolBar.jRoot);
    this.ImportExportUI = new ASPdatabaseNET.UI.TableGrid.ImportExportUI();
    this.ImportExportUI.Instantiate();
    this.ImportExportUI.Close();
    this.jF(".Holder_ImportExportUI").append(this.ImportExportUI.jRoot);
    this.ViewOptions = new ASPdatabaseNET.UI.TableGrid.ViewOptions();
    this.ViewOptions.set_ViewModel(this.get_ViewModel());
    this.ViewOptions.Instantiate();
    this.ViewOptions.OnRefresh.After.AddHandler(this, "ViewOptions_OnRefresh", 0);
    this.ViewOptions.Close();
    this.jF(".Holder_ViewOptions").append(this.ViewOptions.jRoot);
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetGrid_Return").TableGrid__GetGrid(this.GetGridRequest());
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GetGridRequest = function (){
    var rtn = new ASPdatabaseNET.UI.TableGrid.Objs.GridRequest();
    rtn.TableType = this.get_ViewModel().TableType;
    rtn.Id = this.get_ViewModel().Id;
    rtn.DisplayTopNRows = this.get_ViewModel().DisplayTopNRows;
    this.ViewOptions.Update_FiltersAndSorts();
    rtn.FilterFields = this.get_ViewModel().FilterAndSort.FilterFields;
    rtn.SortFields = this.get_ViewModel().FilterAndSort.SortFields;
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GetGrid_Return = function (response){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(response)){
        if (response.Error.Message == "Invalid FilterField." && !this.LastAttemptWas_InvalidFilterField){
            this.LastAttemptWas_InvalidFilterField = true;
            this.get_ViewModel().FilterAndSort = new ASPdatabaseNET.UI.TableGrid.Objs.FilterAndSort();
            this.get_ViewModel().FilterAndSort.FilterFields = new Array(0);
            this.get_ViewModel().FilterAndSort.SortFields = new Array(0);
            this.ViewOptions.BttnClick_ApplyAndRefresh();
        }
        else
            return;
    }
    this.LastAttemptWas_InvalidFilterField = false;
    if (this.RecordViewerUI != null)
        this.RecordViewerUI = null;
    this.set_Model(response.ReturnObj);
    document.title = "[" + this.get_Model().TableName + "] - ASPdatabase.NET";
    if (this.get_ViewModel().FilterAndSort.FilterFields != null && this.get_ViewModel().FilterAndSort.FilterFields.length > 0)
        this.GridToolBar.SetFilterCount(this.get_ViewModel().FilterAndSort.FilterFields.length);
    else if (this.get_ViewModel().FilterAndSort.SortFields != null && this.get_ViewModel().FilterAndSort.SortFields.length > 0)
        this.GridToolBar.SetFilterCount(0);
    else
        this.GridToolBar.SetFilterCount(-1);
    this.get_ViewModel().SelectionCount = 0;
    this.get_ViewModel().AllColumnNames = new Array(0);
    for (var i = 0; i < this.get_Model().HeaderItems.length; i++)
        this.get_ViewModel().AllColumnNames[i] = this.get_Model().HeaderItems[i].FieldName;
    this.BindUI();
    this.GridToolBar.set_Model(this.get_Model());
    this.GridToolBar.Open();
    var tableGridTable = this.jF(".TableGridTable").html("");
    var headerHTML = "<tr><th class=\'SelectAllBox\' title=\'Select/Deselect All\'><span></span></th><th></th>";
    for (var i = 0; i < this.get_Model().HeaderItems.length; i++)
        headerHTML += ASPdb.FrameworkUI.JsStr.StrFormat1("<th>{0}</th>", this.get_Model().HeaderItems[i].FieldName);
    headerHTML += "</tr>";
    tableGridTable.html(headerHTML);
    var thisObj = this;
    var jRootObj = this.jRoot;
    eval("jRootObj.find(\'.SelectAllBox\').click(function(){ thisObj.SelectAllBox_Click(); });");
    this.RowUIs = new Array(0);
    for (var i = 0; i < this.get_Model().Rows.length; i++){
        this.RowUIs[i] = new ASPdatabaseNET.UI.TableGrid.RowUI();
        this.RowUIs[i].IsOdd = (i % 2 == 1);
        this.RowUIs[i].set_ViewModel(this.get_ViewModel());
        this.RowUIs[i].set_Model(this.get_Model().Rows[i]);
        this.RowUIs[i].get_Model().DisplayIndex = i;
        this.RowUIs[i].OnSelection.After.AddHandler(this, "RowUI_OnSelection", 0);
        this.RowUIs[i].OnOpenViewer.After.AddHandler(this, "RowUI_OnOpenViewer", 1);
        this.RowUIs[i].Instantiate();
        tableGridTable.append(this.RowUIs[i].jRoot);
    }
    ASPdatabaseNET.UI.PagesFramework.BasePage.WindowResized();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GridToolBar_OnImportExportClick = function (){
    this.ImportExportUI.get_ViewModel().IsInDemoMode = this.get_Model().IsInDemoMode;
    if (this.ImportExportUI.IsOpen)
        this.ImportExportUI.Close();
    else {
        this.ImportExportUI.get_ViewModel().GridRequest = this.GetGridRequest();
        this.ImportExportUI.Open();
    }
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GridToolBar_OnViewOptionsClick = function (){
    if (this.ViewOptions.IsOpen)
        this.ViewOptions.Close();
    else
        this.ViewOptions.Open();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.Refresh = function (){
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "GetGrid_Return").TableGrid__GetGrid(this.GetGridRequest());
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GridToolBar_OnRefresh = function (){
    this.Refresh();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.ViewOptions_OnRefresh = function (){
    this.Refresh();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.RowUI_OnSelection = function (){
    var count = 0;
    for (var i = 0; i < this.RowUIs.length; i++)
        if (this.RowUIs[i].IsSelected)
            count++;
    this.get_ViewModel().SelectionCount = count;
    this.GridToolBar.SelectionCountChanged();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.SelectAllBox_Click = function (){
    var selection = (this.get_ViewModel().SelectionCount < 1);
    for (var i = 0; i < this.RowUIs.length; i++)
        if (this.RowUIs[i].IsSelected != selection)
            this.RowUIs[i].SetSelection(selection);
    this.RowUI_OnSelection();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GridToolBar_OnRequestToDeleteSelection = function (){
    var keysToDelete = new Array(0);
    var j = 0;
    for (var i = 0; i < this.RowUIs.length; i++)
        if (this.RowUIs[i].IsSelected)
            keysToDelete[j++] = this.RowUIs[i].get_Model().UniqueKey;
    ASPdatabaseNET.AjaxService.ASPdatabaseService.New(this, "DeleteRecords_Return").TableGrid__DeleteRecords(keysToDelete);
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.DeleteRecords_Return = function (ajaxResponse){
    if (ASPdatabaseNET.UI.Errors.ExceptionHandler.Check(ajaxResponse))
        return;
    this.Refresh();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.RowUI_OnOpenViewer = function (gridRow){
    if (this.RecordViewerUI == null){
        this.RecordViewerUI = new ASPdatabaseNET.UI.TableGrid.RecordViewerUI();
        this.RecordViewerUI.Instantiate();
        this.RecordViewerUI.OnClose.After.AddHandler(this, "RecordViewerUI_OnClose", 0);
        this.jRoot.append(this.RecordViewerUI.jRoot);
    }
    this.RecordViewerUI.set_Model(gridRow);
    this.RecordViewerUI.GridResponse = this.get_Model();
    this.jF(".FrontLevelPage").hide();
    this.RecordViewerUI.Open();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.RecordViewerUI_OnClose = function (){
    this.jF(".FrontLevelPage").show();
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.RowUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.TableGrid.GridToolBar.GetCssTree();
    rtn += ASPdatabaseNET.UI.TableGrid.ImportExportUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.TableGrid.RecordViewerUI.GetCssTree();
    rtn += ASPdatabaseNET.UI.TableGrid.TableGridMain.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.GetCssRoot = function (){
    return "\r\n                .TableGridMain { margin: 12px; }\r\n                .TableGridMain .FrontLevelPage { display:block; position:relative; }\r\n\r\n                .TableGridMain .Holder_GridToolBar { max-width: 880px; }\r\n                .TableGridMain .Holder_ImportExportUI { max-width: 880px; min-width: 55em; position:absolute; top: 2.25em; left: 0em; z-index: 1000; }\r\n                .TableGridMain .Holder_ViewOptions { max-width: 880px; min-width: 55em; position:absolute; top: 2.25em; left: 0em; z-index: 1000; }\r\n\r\n                .TableGridMain .TableScrollDiv { font-size: .9em; }\r\n                .TableGridMain .TableScrollDiv .TableGridTable { font-size: .85em; }\r\n                .TableGridMain .TableScrollDiv .TableGridTable tr th { background: #464f5b; color: #fff; font-weight: normal; text-align: left; white-space:nowrap; \r\n                                                                       border: 1px solid #fff; border-width: 1px 1px 1px 0px; padding: 2px 6px; }\r\n\r\n                .TableGridMain .TableScrollDiv .TableGridTable .SelectAllBox { cursor:pointer; }\r\n                .TableGridMain .TableScrollDiv .TableGridTable .SelectAllBox:hover { background: #42a4ed; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.TableGridMain.prototype.GetHtmlRoot = function (){
    return "\r\n            <div class=\'FrontLevelPage\'>\r\n                <div class=\'Holder_GridToolBar\'></div>\r\n                <div class=\'Holder_ImportExportUI\'></div>\r\n                <div class=\'Holder_ViewOptions\'></div>\r\n\r\n                <div class=\'TableScrollDiv AutoResizeXY\' AutoResize_RightSpace=\'0\'>\r\n                    <table class=\'TableGridTable\'>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.TableGridMain, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.ViewOptions = function (){
    this.HasBeenOpen = false;
    this.OnRefresh = new ASPdb.FrameworkUI.JsEvent_BeforeAfter();
    this.FilterUIs = null;
    this.SortUIs = null;
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ViewOptions jRoot NoSelect\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.Open_Sub = function (){
    var filterAndSort = this.get_ViewModel().FilterAndSort;
    if (filterAndSort.FilterFields == null)
        filterAndSort.FilterFields = new Array(0);
    for (var i = filterAndSort.FilterFields.length; i < 5; i++)
        filterAndSort.FilterFields[i] = new ASPdatabaseNET.UI.TableGrid.Objs.ViewOptions_FilterField();
    if (filterAndSort.SortFields == null)
        filterAndSort.SortFields = new Array(0);
    for (var i = filterAndSort.SortFields.length; i < 5; i++)
        filterAndSort.SortFields[i] = new ASPdatabaseNET.UI.TableGrid.Objs.ViewOptions_SortField();
    this.HasBeenOpen = true;
    if (this.FilterUIs == null){
        this.FilterUIs = new Array(0);
        var holder_FilterUIs = this.jF(".Holder_FilterUIs").html("");
        for (var i = 0; i < 5; i++){
            this.FilterUIs[i] = new ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI();
            this.FilterUIs[i].set_ViewModel(this.get_ViewModel());
            this.FilterUIs[i].set_Model(filterAndSort.FilterFields[i]);
            this.FilterUIs[i].Instantiate();
            holder_FilterUIs.append(this.FilterUIs[i].jRoot);
        }
        this.SortUIs = new Array(0);
        var holder_SortUIs = this.jF(".Holder_SortUIs").html("");
        for (var i = 0; i < 5; i++){
            this.SortUIs[i] = new ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI();
            this.SortUIs[i].set_ViewModel(this.get_ViewModel());
            this.SortUIs[i].set_Model(filterAndSort.SortFields[i]);
            this.SortUIs[i].Instantiate();
            holder_SortUIs.append(this.SortUIs[i].jRoot);
        }
    }
    this.RefreshUI();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.RefreshUI = function (){
    this.jF(".Txt_DisplayTopNRows").val(this.get_ViewModel().DisplayTopNRows);
    for (var i = 0; i < this.FilterUIs.length; i++)
        this.FilterUIs[i].Open();
    for (var i = 0; i < this.SortUIs.length; i++)
        this.SortUIs[i].Open();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.Update_FiltersAndSorts = function (){
    if (this.HasBeenOpen){
        this.get_ViewModel().FilterAndSort.FilterFields = this.Get_FilterFields();
        this.get_ViewModel().FilterAndSort.SortFields = this.Get_SortFields();
    }
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.Get_FilterFields = function (){
    var rtn = new Array(0);
    if (this.FilterUIs == null)
        return rtn;
    var j = 0;
    for (var i = 0; i < this.FilterUIs.length; i++){
        var subModel = this.FilterUIs[i].GetCurrentModel();
        if (subModel != null)
            rtn[j++] = subModel;
    }
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.Get_SortFields = function (){
    var rtn = new Array(0);
    if (this.SortUIs == null)
        return rtn;
    var j = 0;
    for (var i = 0; i < this.SortUIs.length; i++){
        var subModel = this.SortUIs[i].GetCurrentModel();
        if (subModel != null)
            rtn[j++] = subModel;
    }
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.BttnClick_ApplyAndRefresh = function (){
    var tmp = ASPdb.FrameworkUI.IntStatic.Parse(this.jF(".Txt_DisplayTopNRows").val(), this.get_ViewModel().DisplayTopNRows);
    this.get_ViewModel().DisplayTopNRows = tmp;
    this.jF(".Txt_DisplayTopNRows").val(tmp);
    var gridRequest_Local = new ASPdatabaseNET.UI.TableGrid.Objs.GridRequest();
    gridRequest_Local.TableType = this.get_ViewModel().TableType;
    gridRequest_Local.Id = this.get_ViewModel().Id;
    gridRequest_Local.DisplayTopNRows = this.get_ViewModel().DisplayTopNRows;
    this.Update_FiltersAndSorts();
    gridRequest_Local.FilterFields = this.get_ViewModel().FilterAndSort.FilterFields;
    gridRequest_Local.SortFields = this.get_ViewModel().FilterAndSort.SortFields;
    try{
        var json = (new ASPdb.Ajax.AjaxHelper()).ToJson(gridRequest_Local);
        localStorage.setItem(this.get_ViewModel().get_LocalStorage_Key_ViewOptions(), json);
    }
    catch($$e21){
    }
    this.Close();
    this.OnRefresh.After.Fire();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.BttnClick_Reset = function (){
    this.jF(".Txt_DisplayTopNRows").val((new ASPdatabaseNET.UI.TableGrid.Objs.GridViewModel()).DisplayTopNRows);
    for (var i = 0; i < this.FilterUIs.length; i++)
        this.FilterUIs[i].Reset();
    for (var i = 0; i < this.SortUIs.length; i++)
        this.SortUIs[i].Reset();
    try{
        localStorage.setItem(this.get_ViewModel().get_LocalStorage_Key_ViewOptions(), "");
    }
    catch($$e22){
    }
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.BttnClick_Cancel = function (){
    this.Close();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.GetCssTree = function (){
    return "" + ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.GetCssTree() + ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.GetCssTree() + ASPdatabaseNET.UI.TableGrid.ViewOptions.GetCssRoot();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.GetCssRoot = function (){
    return "\r\n                .ViewOptions { }\r\n                .ViewOptions .Div_BG { background: #464f5b; opacity: 0.65; position:fixed; width: 100%; height: 8000px; top: 0px; left: 0px; }\r\n\r\n                .ViewOptions .InFrontBox { position:relative; background: #f4f4f4; min-height: 15em; box-shadow: 0.125em 0.125em .2em #777; }\r\n                .ViewOptions .InFrontBox .TopLine { height: .5em; background: #eb640a; }\r\n                .ViewOptions .InFrontBox .MainBox { padding: 0.75em 5em 2.5em 1.375em; color: #093a79; }\r\n                .ViewOptions .InFrontBox .MainBox .Bttn1 { font-size: .9em; float:left; margin-right: 0.75em; line-height: 2em; padding: 0em 1em;\r\n                                                           background: #093a79; color: #fff; border-radius: 0em; cursor:pointer; }\r\n                .ViewOptions .InFrontBox .MainBox .Bttn1:hover { background: #000; }\r\n                             \r\n                .ViewOptions .InFrontBox .MainBox .Txt_DisplayTopNRows { border: 1px solid #093a79; width: 80px; text-align:center; }\r\n                             \r\n                .ViewOptions .InFrontBox .MainBox .SubHead { margin: 1.35em 0em .15em; font-size: 1.3em; }\r\n                .ViewOptions .InFrontBox .MainBox .Holder_FilterUIs { }\r\n                .ViewOptions .InFrontBox .MainBox .Holder_SortUIs { }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.ViewOptions.prototype.GetHtmlRoot = function (){
    return "\r\n                <div class=\'Div_BG NoSelect\' On_Click=\'Close\'>&nbsp;</div>\r\n                <div class=\'InFrontBox\'>\r\n                    <div class=\'TopLine\'><span></span></div>\r\n                    <div class=\'MainBox\'>\r\n                        <div class=\'Bttn1\' On_Click=\'BttnClick_ApplyAndRefresh\'>Apply & Refresh</div>\r\n                        <div class=\'Bttn1\' On_Click=\'BttnClick_Reset\'>Reset</div>\r\n                        <div class=\'Bttn1\' On_Click=\'BttnClick_Cancel\'>Cancel</div>\r\n                        <div class=\'clear\'></div>\r\n                        <br />\r\n                        <br />\r\n                        Display Top <input type=\'text\' class=\'Txt_DisplayTopNRows\' /> Rows\r\n                    \r\n                        <div class=\'SubHead\'>Filter</div>\r\n                        <div class=\'Holder_FilterUIs\'></div>\r\n\r\n                        <div class=\'SubHead\'>Sort By</div>\r\n                        <div class=\'Holder_SortUIs\'></div>\r\n                    </div>\r\n                </div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.ViewOptions, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ViewOptions_SortUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.prototype.Open_Sub = function (){
    var select = this.jF(".Select_SortColumns").html("").append("<option value=\'\'></option>");
    for (var i = 0; i < this.get_ViewModel().AllColumnNames.length; i++){
        var name = this.get_ViewModel().AllColumnNames[i];
        select.append("<option value=\'" + name + "\'>" + name + "</option>");
    }
    if (this.get_Model().FieldName != null && this.get_Model().FieldName.length > 0)
        select.val(this.get_Model().FieldName);
    this.get_Model().Descending = !this.get_Model().Descending;
    this.Descending_Click();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.prototype.Reset = function (){
    this.jF(".Select_SortColumns").val("");
    if (this.get_Model().Descending)
        this.Descending_Click();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.prototype.GetCurrentModel = function (){
    this.get_Model().FieldName = this.jF(".Select_SortColumns").val();
    if (this.get_Model().FieldName.length < 1)
        return null;
    else
        return this.get_Model();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.prototype.Descending_Click = function (){
    this.get_Model().Descending = !this.get_Model().Descending;
    if (this.get_Model().Descending){
        this.jF(".Checkbox_Descending").attr("checked", true);
        this.jF(".Div_Descending").addClass("Div_Descending_On");
    }
    else {
        this.jF(".Checkbox_Descending").removeAttr("checked");
        this.jF(".Div_Descending").removeClass("Div_Descending_On");
    }
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.GetCssRoot = function (){
    return "\r\n                .ViewOptions_SortUI { padding-bottom: .2em; }\r\n                .ViewOptions_SortUI .Select_SortColumns { float:left; width: 20em; max-width: 20em; }\r\n                .ViewOptions_SortUI .Div_Descending { float:left; margin-left: .5em; padding: .2em .75em; cursor:pointer; border-radius: .3em; color: #b3c3dc; }\r\n                .ViewOptions_SortUI .Div_Descending:hover { background: #ccc; }\r\n                .ViewOptions_SortUI .Div_Descending_On { color: #093a8c; }\r\n                .ViewOptions_SortUI .Div_Descending .Checkbox_Descending { }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <select class=\'Select_SortColumns\'>\r\n                </select>\r\n                <div class=\'Div_Descending\' On_Click=\'Descending_Click\'>\r\n                    ( <input type=\'checkbox\' class=\'Checkbox_Descending\' /> descending )\r\n                </div>\r\n                <div class=\'clear\'></div>\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.ViewOptions_SortUI, ASPdb.FrameworkUI.MRBPattern);
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI = function (){
    ASPdb.FrameworkUI.MRBPattern.call(this);
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.prototype.Instantiate_Sub = function (){
    this.jRoot = $("<div class=\'ViewOptions_FilterUI jRoot\'>");
    this.jRoot.append(this.GetHtmlRoot());
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.prototype.Open_Sub = function (){
    var select = this.jF(".Select_FilterColumns").html("").append("<option value=\'\'></option>");
    for (var i = 0; i < this.get_ViewModel().AllColumnNames.length; i++){
        var name = this.get_ViewModel().AllColumnNames[i];
        select.append("<option value=\'" + name + "\'>" + name + "</option>");
    }
    if (this.get_Model().FieldName != null && this.get_Model().FieldName.length > 0)
        select.val(this.get_Model().FieldName);
    var filterType_S = "Equals";
    switch (this.get_Model().FilterType){
        case 1:
            filterType_S = "Equals";
            break;
        case 10:
            filterType_S = "Not";
            break;
        case 2:
            filterType_S = "Contains";
            break;
        case 3:
            filterType_S = "StartsWith";
            break;
        case 4:
            filterType_S = "EndsWith";
            break;
        case 6:
            filterType_S = "LessThan";
            break;
        case 12:
            filterType_S = "LessThanOrEqual";
            break;
        case 11:
            filterType_S = "GreaterThanOrEqual";
            break;
        case 5:
            filterType_S = "GreaterThan";
            break;
        case 8:
            filterType_S = "In";
            break;
        case 9:
            filterType_S = "NotIn";
            break;
    }
    this.jF(".Select_FilterTypes").val(filterType_S);
    this.jF(".Txt_FilterValue").val(this.get_Model().Value);
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.prototype.Reset = function (){
    this.jF(".Select_FilterColumns").val("");
    this.jF(".Select_FilterTypes").val("Equals");
    this.jF(".Txt_FilterValue").val("");
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.prototype.GetCurrentModel = function (){
    this.get_Model().FieldName = this.jF(".Select_FilterColumns").val();
    switch (this.jF(".Select_FilterTypes").val()){
        case "Equals":
            this.get_Model().FilterType = 1;
            break;
        case "Not":
            this.get_Model().FilterType = 10;
            break;
        case "Contains":
            this.get_Model().FilterType = 2;
            break;
        case "StartsWith":
            this.get_Model().FilterType = 3;
            break;
        case "EndsWith":
            this.get_Model().FilterType = 4;
            break;
        case "LessThan":
            this.get_Model().FilterType = 6;
            break;
        case "LessThanOrEqual":
            this.get_Model().FilterType = 12;
            break;
        case "GreaterThanOrEqual":
            this.get_Model().FilterType = 11;
            break;
        case "GreaterThan":
            this.get_Model().FilterType = 5;
            break;
        case "In":
            this.get_Model().FilterType = 8;
            break;
        case "NotIn":
            this.get_Model().FilterType = 9;
            break;
        default:
            this.get_Model().FilterType = 0;
            break;
    }
    this.get_Model().Value = this.jF(".Txt_FilterValue").val();
    if (this.get_Model().FieldName.length < 1 || this.get_Model().FilterType == 0 || this.get_Model().Value.length < 1)
        return null;
    else
        return this.get_Model();
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.GetCssTree = function (){
    var rtn = "";
    rtn += ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.GetCssRoot();
    return rtn;
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.GetCssRoot = function (){
    return "\r\n                .ViewOptions_FilterUI { padding-bottom: .3em; }\r\n                .ViewOptions_FilterUI .Select_FilterColumns { float:left; width: 17em; max-width: 17em; margin-right: 1em; }\r\n                .ViewOptions_FilterUI .Select_FilterTypes { float:left; width: 9em; max-width: 9em; margin-right: 1em; }\r\n                .ViewOptions_FilterUI .Txt_FilterValue { width: 20em; max-width: 20em; border: 1px solid #093a79; }\r\n            ";
};
ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI.prototype.GetHtmlRoot = function (){
    return "\r\n                <select class=\'Select_FilterColumns\'>\r\n                </select>\r\n                <select class=\'Select_FilterTypes\'>\r\n                    <option value=\'Equals\'>&nbsp; ==</span></option>\r\n                    <option value=\'Not\'>&nbsp; Not</span></option>\r\n                    <option value=\'Contains\'>&nbsp; Contains</option>\r\n                    <option value=\'StartsWith\'>&nbsp; Starts With</option>\r\n                    <option value=\'EndsWith\'>&nbsp; Ends With</option>\r\n                    <option value=\'LessThan\'>&nbsp; &lt;</option>\r\n                    <option value=\'LessThanOrEqual\'>&nbsp; &lt;=</option>\r\n                    <option value=\'GreaterThanOrEqual\'>&nbsp; &gt;=</option>\r\n                    <option value=\'GreaterThan\'>&nbsp; &gt;</option>\r\n                    <option value=\'In\'>&nbsp; In (comma separated list)</option>\r\n                    <option value=\'NotIn\'>&nbsp; Not In (comma separated list)</option>\r\n                </select>\r\n                <input type=\'text\' class=\'Txt_FilterValue\' />\r\n            ";
};
$Inherit(ASPdatabaseNET.UI.TableGrid.ViewOptions_FilterUI, ASPdb.FrameworkUI.MRBPattern);
if (typeof(ASPdatabaseNET.Users) == "undefined")
    ASPdatabaseNET.Users = {};
ASPdatabaseNET.Users.AllPermissionsInfo = function (){
    this.UserId = 0;
    this.IsAdmin = false;
    this.PermissionValuesDict = null;
};
ASPdatabaseNET.Users.AllPermissionsInfo.prototype.CheckPermissions = function (connectionId, schema, tableId){
    if (this.IsAdmin)
        return (function (){
            var $v2 = new ASPdatabaseNET.Users.PermissionValues();
            $v2.View = true;
            $v2.Edit = true;
            $v2.Insert = true;
            $v2.Delete = true;
            return $v2;
        }).call(this);
    var rtn = new ASPdatabaseNET.Users.PermissionValues();
    if (this.PermissionValuesDict == null)
        return rtn;
    var key1 = "C_" + connectionId;
    var key2 = "S_" + connectionId + "_" + schema.toLowerCase();
    var key3 = "T_" + connectionId + "_" + schema.toLowerCase() + "_" + tableId;
    if (this.PermissionValuesDict.ContainsKey(key1))
        this.UpdateTrues_InPermissionValues(this.PermissionValuesDict.get_Item$$TKey(key1), rtn);
    if (this.PermissionValuesDict.ContainsKey(key2))
        this.UpdateTrues_InPermissionValues(this.PermissionValuesDict.get_Item$$TKey(key2), rtn);
    if (this.PermissionValuesDict.ContainsKey(key3))
        this.UpdateTrues_InPermissionValues(this.PermissionValuesDict.get_Item$$TKey(key3), rtn);
    if (!rtn.View)if (rtn.Edit || rtn.Insert || rtn.Delete)
        rtn.View = true;
    return rtn;
};
ASPdatabaseNET.Users.AllPermissionsInfo.prototype.UpdateTrues_InPermissionValues = function (source, target){
    if (source.View)
        target.View = true;
    if (source.Edit)
        target.Edit = true;
    if (source.Insert)
        target.Insert = true;
    if (source.Delete)
        target.Delete = true;
};
ASPdatabaseNET.Users.PermissionValues = function (){
    this.View = false;
    this.Edit = false;
    this.Insert = false;
    this.Delete = false;
};
ASPdatabaseNET.Users.UserInfo = function (){
    this.UserId = 0;
    this.Username = null;
    this.Email = null;
    this.FirstName = null;
    this.LastName = null;
    this.Active = false;
    this.IsAdmin = false;
    this.AllPermissions = null;
};
ASPdatabaseNET.Users.UserSessionClient = function (){
    this.UserInfo = null;
    this.IsLoggedIn = false;
    this.IsAdmin = false;
    this.Impersonation_IsAllowed = false;
    this.Impersonation_IsOn = false;
    this.Impersonation_ActualUser = null;
};
ASPdatabaseNET.Users.UserSessionClient.Set = function (userSessionClient){
    var value = userSessionClient;
    eval("document.ASPdatabaseNET_Users_UserSessionClient = value;");
};
ASPdatabaseNET.Users.UserSessionClient.Get = function (){
    try{
        var rtn = null;
        eval("rtn = document.ASPdatabaseNET_Users_UserSessionClient;");
        return rtn;
    }
    catch($$e23){
    }
    return null;
};
if (typeof(ASPdatabaseNET.AjaxService) == "undefined")
    ASPdatabaseNET.AjaxService = {};
ASPdatabaseNET.AjaxService.ASPdatabaseService = function (){
    ASPdb.Ajax.AjaxServiceProxy.call(this);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.Bind = function (callback_Object){
    return ASPdatabaseNET.AjaxService.ASPdatabaseService.Bind2(callback_Object, "AjaxReturn");
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.Bind2 = function (callback_Object, callback_Method){
    var rtn = ASPdatabaseNET.AjaxService.ASPdatabaseService.New(callback_Object, callback_Method);
    rtn.Bind();
    return rtn;
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.New = function (callback_Object, callback_Method){
    var rtn = new ASPdatabaseNET.AjaxService.ASPdatabaseService();
    rtn.SetCallback(callback_Object, callback_Method, null);
    return rtn;
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.New1 = function (callback_Object, callback_Method, callback_DataObj){
    var rtn = new ASPdatabaseNET.AjaxService.ASPdatabaseService();
    rtn.SetCallback(callback_Object, callback_Method, callback_DataObj);
    return rtn;
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.NoEncryption = function (){
    this.Ajax.DoEncryption = false;
    return this;
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.YesEncryption = function (){
    this.Ajax.DoEncryption = true;
    return this;
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.YesEncryption_IfNotHttps = function (){
    this.Ajax.DoEncryption = true;
    return this;
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Subscription__GetInfo = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Subscription__GetInfo";
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Subscription.Backend.SubscriptionLogic.GetInfo();
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Subscription__SaveKey = function (subscriptionKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Subscription__SaveKey";
        this.Ajax.Parameters[0] = subscriptionKey;
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Subscription.Backend.SubscriptionLogic.SetKey(subscriptionKey);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Subscription__RemoveKey = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Subscription__RemoveKey";
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Subscription.Backend.SubscriptionLogic.RemoveKey();
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Subscription__Refresh = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Subscription__Refresh";
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Subscription.Backend.SubscriptionLogic.Refresh();
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.PingServerTime = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "PingServerTime";
        this.Ajax.Send();
        return null;
    }
    else
        return System.DateTime.get_Now().toString();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.AboutPage_GetInfo = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "AboutPage_GetInfo";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.About.Backend.AboutPageLogic.Get();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Guid__GetNewGuidString = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Guid__GetNewGuidString";
        this.Ajax.Send();
        return null;
    }
    else
        return System.Guid.NewGuid().toString();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ImportExport__GetUploadedExcelInfo = function (guidKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ImportExport__GetUploadedExcelInfo";
        this.Ajax.Parameters[0] = guidKey;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.TableGrid.Backend.ImportExportLogic.Get_ImportExcelInfo_ForClient(guidKey);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Install__GetInstallState = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Install__GetInstallState";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Install.Backend.InstallLogic.GetInstallState();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Install__InstallSQL = function (adminUser, adminPass, firstName, lastName, email){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Install__InstallSQL";
        this.Ajax.Parameters[0] = adminUser;
        this.Ajax.Parameters[1] = adminPass;
        this.Ajax.Parameters[2] = firstName;
        this.Ajax.Parameters[3] = lastName;
        this.Ajax.Parameters[4] = email;
        this.Ajax.Send();
        return null;
    }
    else {
        return ASPdatabaseNET.UI.PageParts.Install.Backend.InstallLogic.InstallSQL(adminUser, adminPass, firstName, lastName, email);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.HomePage__GetInfo = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "HomePage__GetInfo";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.HomePage.Backend.HomePageLogic.GetInfo();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Feedback__GetInfo = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Feedback__GetInfo";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.SendFeedback.Backend.FeedbackLogic.GetInfo();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Feedback__Send = function (feedbackInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Feedback__Send";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(feedbackInfo);
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.SendFeedback.Backend.FeedbackLogic.Send(feedbackInfo);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.MyAccount__GetInfo = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "MyAccount__GetInfo";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.MyAccount.Backend.MyAccountLogic.GetInfo();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.MyAccount__Save = function (myAccountInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "MyAccount__Save";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(myAccountInfo);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.UI.PageParts.MyAccount.Backend.MyAccountLogic.Save(myAccountInfo);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.MyAccount__ResetPassword = function (myAccountInfo, passwordOld, password1, password2){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "MyAccount__ResetPassword";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(myAccountInfo);
        this.Ajax.Parameters[1] = passwordOld;
        this.Ajax.Parameters[2] = password1;
        this.Ajax.Parameters[3] = password2;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.UI.PageParts.MyAccount.Backend.MyAccountLogic.ResetPassword(myAccountInfo, passwordOld, password1, password2);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Global__GetLogoBoxModel = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Global__GetLogoBoxModel";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.GlobalParts.Backend.LogoBoxLogic.Get();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Global__GetSiteNav = function (resetCache){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Global__GetSiteNav";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DataAccess.NavCRUD.GetSiteNav(resetCache);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableGrid__GetGrid = function (gridRequest){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableGrid__GetGrid";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(gridRequest);
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.TableGrid.Backend.TableGridLogic.GetGrid(gridRequest, true);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableGrid__DeleteRecords = function (keysToDelete){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableGrid__DeleteRecords";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(keysToDelete);
        this.Ajax.Send();
        return false;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.TableGrid.Backend.TableGridLogic.DeleteRecords(keysToDelete);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Record__Get = function (uniqueRowKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Record__Get";
        this.Ajax.Parameters[0] = uniqueRowKey;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Record.Backend.RecordLogic.Get(uniqueRowKey);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Record__GetClone = function (uniqueRowKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Record__GetClone";
        this.Ajax.Parameters[0] = uniqueRowKey;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Record.Backend.RecordLogic.GetClone(uniqueRowKey);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Record__Save = function (recordInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Record__Save";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(recordInfo);
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Record.Backend.RecordLogic.Save(recordInfo);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.History__GetSummary = function (tableId, keyValue, maxReturnCount){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "History__GetSummary";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Parameters[1] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(keyValue);
        this.Ajax.Parameters[2] = maxReturnCount;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Record.Backend.HistoryLogic.Get_HistorySummary(tableId, keyValue, maxReturnCount);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.History__GetCount = function (tableId, keyValue){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "History__GetCount";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Parameters[1] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(keyValue);
        this.Ajax.Send();
        return -1;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Record.Backend.HistoryLogic.Get_HistoryCount(tableId, keyValue);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.History__GetRecords = function (tableId, keyValue, maxReturnCount){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "History__GetRecords";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Parameters[1] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(keyValue);
        this.Ajax.Parameters[2] = maxReturnCount;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Record.Backend.HistoryLogic.Get_HistoryRecords(tableId, keyValue, maxReturnCount);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.History__GetRecord = function (tableId, historyId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "History__GetRecord";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Parameters[1] = historyId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Record.Backend.HistoryLogic.Get_HistoryRecord(tableId, historyId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__GetMenuInfo = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__GetMenuInfo";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.GetMenuInfo();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__GetUser = function (userId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__GetUser";
        this.Ajax.Parameters[0] = userId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.GetUser(userId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__GetGroup = function (groupId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__GetGroup";
        this.Ajax.Parameters[0] = groupId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.GetGroup(groupId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__SaveUser = function (userInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__SaveUser";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(userInfo);
        this.Ajax.Send();
        return -1;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.SaveUser(userInfo);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__SaveGroup = function (groupInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__SaveGroup";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(groupInfo);
        this.Ajax.Send();
        return -1;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.SaveGroup(groupInfo);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__DeleteUser = function (userId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__DeleteUser";
        this.Ajax.Parameters[0] = userId;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.DeleteUser(userId);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__DeleteGroup = function (groupId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__DeleteGroup";
        this.Ajax.Parameters[0] = groupId;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.DeleteGroup(groupId);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__SavePassword = function (userId, newPassword){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__SavePassword";
        this.Ajax.Parameters[0] = userId;
        this.Ajax.Parameters[1] = newPassword;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.SavePassword$$Int32$$String(userId, newPassword);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Users__SendPasswordLink = function (userId, email){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Users__SendPasswordLink";
        this.Ajax.Parameters[0] = userId;
        this.Ajax.Parameters[1] = email;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.UI.PageParts.Users.Backend.UsersLogic.SendPasswordLink$$Int32$$String(userId, email);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__GetSessionPublicKey = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__GetSessionPublicKey";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.GetSessionPublicKey();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__SendAESKey = function (aesIndex, base64){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__SendAESKey";
        this.Ajax.Parameters[0] = aesIndex;
        this.Ajax.Parameters[1] = base64;
        this.Ajax.Send();
        return false;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.CaptureAESKey(aesIndex, base64);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__SendAESTest = function (message){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__SendAESTest";
        this.Ajax.Parameters[0] = message;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.ReceiveAESTest(message);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__Login = function (username, password){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__Login";
        this.Ajax.Parameters[0] = username;
        this.Ajax.Parameters[1] = password;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.Login(username, password);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__GetUserSession = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__GetUserSession";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.GetUserSession_ForClient();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__GetImpersonationList = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__GetImpersonationList";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.GetImpersonationList();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__SetImpersonationUser = function (userId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__SetImpersonationUser";
        this.Ajax.Parameters[0] = userId;
        this.Ajax.Send();
        return false;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.SetImpersonationUser(userId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.Authentication__IsInDemoMode = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "Authentication__IsInDemoMode";
        this.Ajax.Send();
        return false;
    }
    else
        return ASPdatabaseNET.Users.UserSessionLogic.get_IsInDemoMode();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.DatabaseConnections__GetList = function (){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "DatabaseConnections__GetList";
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DataAccess.DatabaseConnectionsCRUD.GetList();
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.DatabaseConnections__Get = function (connectionId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "DatabaseConnections__Get";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Send();
        return null;
    }
    else {
        return ASPdatabaseNET.DataAccess.DatabaseConnectionsCRUD.Get(connectionId, this.IsInDemoMode());
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.DatabaseConnections__Test = function (aspdb_Connection, saveOnSuccess){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "DatabaseConnections__Test";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(aspdb_Connection);
        this.Ajax.Parameters[1] = saveOnSuccess;
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.DataAccess.DatabaseConnectionsCRUD.Test(aspdb_Connection, saveOnSuccess);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.DatabaseConnections__Save = function (connectionInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "DatabaseConnections__Save";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(connectionInfo);
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.DataAccess.DatabaseConnectionsCRUD.Save(connectionInfo);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.DatabaseConnections__Delete = function (connectionId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "DatabaseConnections__Delete";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.DataAccess.DatabaseConnectionsCRUD.Delete(connectionId);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__GetAssetsLists = function (connectionId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__GetAssetsLists";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DataAccess.ManageAssetsCRUD.GetAssetsLists(connectionId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Tables_ShowHide = function (connectionId, tableId, hide){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Tables_ShowHide";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = tableId;
        this.Ajax.Parameters[2] = hide;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DataAccess.SQLObjectsCRUD.ASPdb_Table__ShowHide(connectionId, tableId, hide);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Tables_Rename = function (connectionId, tableId, newName){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Tables_Rename";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = tableId;
        this.Ajax.Parameters[2] = newName;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DataAccess.SQLObjectsCRUD.ASPdb_Table__Rename(connectionId, tableId, newName);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Tables_Delete = function (connectionId, tableId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Tables_Delete";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = tableId;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DataAccess.SQLObjectsCRUD.ASPdb_Table__Delete(connectionId, tableId);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Views_ShowHide = function (connectionId, viewId, hide){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Views_ShowHide";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = viewId;
        this.Ajax.Parameters[2] = hide;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DataAccess.SQLObjectsCRUD.ASPdb_View__ShowHide(connectionId, viewId, hide);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Views_Rename = function (connectionId, viewId, newName){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Views_Rename";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = viewId;
        this.Ajax.Parameters[2] = newName;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DataAccess.SQLObjectsCRUD.ASPdb_View__Rename(connectionId, viewId, newName);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Schemas__SaveNew = function (connectionId, newSchemaName){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Schemas__SaveNew";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = newSchemaName;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.GenericInterface.Schemas__SaveNew(connectionId, newSchemaName);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.ManageAssets__Schemas__Delete = function (connectionId, schemaName){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "ManageAssets__Schemas__Delete";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Parameters[1] = schemaName;
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.GenericInterface.Schemas__Delete(connectionId, schemaName);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__GetInfo_ForCreateNew = function (connectionId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__GetInfo_ForCreateNew";
        this.Ajax.Parameters[0] = connectionId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DataAccess.TableDesignCRUD.GetInfo_ForCreateNew(connectionId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__GetInfo_ForModify = function (tableId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__GetInfo_ForModify";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DataAccess.TableDesignCRUD.GetInfo_ForModify(tableId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__CreateTable = function (tableStructure){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__CreateTable";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(tableStructure);
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.DbInterfaces.SQLServerInterface.Table__Create(tableStructure);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__UpdateTable = function (tableStructure){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__UpdateTable";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(tableStructure);
        this.Ajax.Send();
        return null;
    }
    else {
        this.CheckForDemoMode();
        return ASPdatabaseNET.DbInterfaces.SQLServerInterface.Table__Update(tableStructure);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__PrimaryKey__Get = function (tableId){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__PrimaryKey__Get";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DbInterfaces.SQLServerInterface.PrimaryKey__Get$$Int32(tableId);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__PrimaryKey__Create = function (primaryKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__PrimaryKey__Create";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(primaryKey);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.PrimaryKey__Create(primaryKey, true);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__PrimaryKey__Update = function (primaryKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__PrimaryKey__Update";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(primaryKey);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.PrimaryKey__Update(primaryKey);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__PrimaryKey__Delete = function (primaryKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__PrimaryKey__Delete";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(primaryKey);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.PrimaryKey__Delete(primaryKey);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__Indexes__Get = function (tableStructure){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__Indexes__Get";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(tableStructure);
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DbInterfaces.SQLServerInterface.Index__Get(tableStructure);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__Indexes__Create = function (index){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__Indexes__Create";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(index);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.Index__Create(index);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__Indexes__Update = function (index){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__Indexes__Update";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(index);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.Index__Update(index);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__Indexes__Delete = function (index){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__Indexes__Delete";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(index);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.Index__Delete(index);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__ForeignKeys__Get = function (tableStructure){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__ForeignKeys__Get";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(tableStructure);
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.DbInterfaces.SQLServerInterface.ForeignKey__Get$$TableStructure(tableStructure);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__ForeignKeys__Create = function (foreignKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__ForeignKeys__Create";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(foreignKey);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.ForeignKey__Create(foreignKey);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__ForeignKeys__Update = function (foreignKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__ForeignKeys__Update";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(foreignKey);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.ForeignKey__Update(foreignKey);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__ForeignKeys__Delete = function (foreignKey){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__ForeignKeys__Delete";
        this.Ajax.Parameters[0] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(foreignKey);
        this.Ajax.Send();
    }
    else {
        this.CheckForDemoMode();
        ASPdatabaseNET.DbInterfaces.SQLServerInterface.ForeignKey__Delete(foreignKey);
    }
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__AppProperties__Get = function (tableId, useCache){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__AppProperties__Get";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Backend.AppPropertiesLogic.Get(tableId, useCache);
};
ASPdatabaseNET.AjaxService.ASPdatabaseService.prototype.TableDesign__AppProperties__Save = function (tableId, appPropertiesInfo){
    if (this.IsClientCode){
        this.Ajax.RemoteMethod = "TableDesign__AppProperties__Save";
        this.Ajax.Parameters[0] = tableId;
        this.Ajax.Parameters[1] = ASPdb.Ajax.AjaxHelper.get_New().ToJson(appPropertiesInfo);
        this.Ajax.Send();
        return null;
    }
    else
        return ASPdatabaseNET.UI.PageParts.TableDesign.AppProperties.Backend.AppPropertiesLogic.Save(tableId, appPropertiesInfo);
};
$Inherit(ASPdatabaseNET.AjaxService.ASPdatabaseService, ASPdb.Ajax.AjaxServiceProxy);

